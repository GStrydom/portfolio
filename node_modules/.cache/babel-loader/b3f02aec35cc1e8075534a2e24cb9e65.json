{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react-website-v1-master\\\\src\\\\components\\\\scripts\\\\StopWatch.js\";\nimport React from \"react\";\nimport { Button, Header, Image, Modal } from 'semantic-ui-react';\nimport ReactStopwatch from 'react-stopwatch';\nconst size = \"fullscreen\";\n\nfunction StopWatch() {\n  const [open, setOpen] = React.useState(false);\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    size: size,\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 18\n      }\n    }, \"Launch Script\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"StopWatch\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ReactStopwatch, {\n    seconds: 0,\n    minutes: 0,\n    hours: 0,\n    limit: \"00:00:10\",\n    onChange: ({\n      hours,\n      minutes,\n      seconds\n    }) => {// do something\n    },\n    onCallback: () => console.log('Finish'),\n    render: ({\n      formatted,\n      hours,\n      minutes,\n      seconds\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, \"Formatted: \", formatted), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, \"Hours: \", hours), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, \"Minutes: \", minutes), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, \"Seconds: \", seconds));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"red\",\n    onClick: () => setOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"green\",\n    content: \"Done\",\n    labelPosition: \"right\",\n    icon: \"checkmark\",\n    onClick: () => setOpen(false),\n    positive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default StopWatch;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/react-website-v1-master/src/components/scripts/StopWatch.js"],"names":["React","Button","Header","Image","Modal","ReactStopwatch","size","StopWatch","open","setOpen","useState","hours","minutes","seconds","console","log","formatted"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,KAAhC,QAA6C,mBAA7C;AAEA,OAAOC,cAAP,MAA2B,iBAA3B;AAEA,MAAMC,IAAI,GAAG,YAAb;;AAEA,SAASC,SAAT,GAAqB;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACU,QAAN,CAAe,KAAf,CAAxB;AAEA,sBACG,oBAAC,KAAD;AACE,IAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,KAAD,CADxB;AAEE,IAAA,MAAM,EAAE,MAAMA,OAAO,CAAC,IAAD,CAFvB;AAGE,IAAA,IAAI,EAAED,IAHR;AAIE,IAAA,IAAI,EAAEF,IAJR;AAKE,IAAA,OAAO,eAAE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOA,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAPA,eASA,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,OAAO,EAAE,CADX;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,KAAK,EAAE,CAHT;AAIE,IAAA,KAAK,EAAC,UAJR;AAKE,IAAA,QAAQ,EAAE,CAAC;AAAEK,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,KAAD,KAAiC,CACzC;AACD,KAPH;AAQE,IAAA,UAAU,EAAE,MAAMC,OAAO,CAACC,GAAR,CAAY,QAAZ,CARpB;AASE,IAAA,MAAM,EAAE,CAAC;AAAEC,MAAAA,SAAF;AAAaL,MAAAA,KAAb;AAAoBC,MAAAA,OAApB;AAA6BC,MAAAA;AAA7B,KAAD,KAA4C;AAClD,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACeG,SADf,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACWL,KADX,CAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACaC,OADb,CAPF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACaC,OADb,CAVF,CADF;AAgBD,KA1BH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATA,eAwCA,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAoB,IAAA,OAAO,EAAE,MAAMJ,OAAO,CAAC,KAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,oBAAC,MAAD;AACA,IAAA,KAAK,EAAC,OADN;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,aAAa,EAAC,OAHhB;AAIE,IAAA,IAAI,EAAC,WAJP;AAKE,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,KAAD,CALxB;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAxCA,CADH;AAsDF;;AAED,eAAeF,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, Header, Image, Modal } from 'semantic-ui-react';\r\n\r\nimport ReactStopwatch from 'react-stopwatch';\r\n\r\nconst size = \"fullscreen\";\r\n\r\nfunction StopWatch() {\r\n   const [open, setOpen] = React.useState(false)\r\n\r\n   return (\r\n      <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        size={size}\r\n        trigger={<Button>Launch Script</Button>}\r\n      >\r\n      <Modal.Header>StopWatch</Modal.Header>\r\n      \r\n      <Modal.Content>\r\n        <ReactStopwatch\r\n          seconds={0}\r\n          minutes={0}\r\n          hours={0}\r\n          limit=\"00:00:10\"\r\n          onChange={({ hours, minutes, seconds }) => {\r\n            // do something\r\n          }}\r\n          onCallback={() => console.log('Finish')}\r\n          render={({ formatted, hours, minutes, seconds }) => {\r\n            return (\r\n              <div>\r\n                <p>\r\n                  Formatted: { formatted }\r\n                </p>\r\n                <p>\r\n                  Hours: { hours }\r\n                </p>\r\n                <p>\r\n                  Minutes: { minutes }\r\n                </p>\r\n                <p>\r\n                  Seconds: { seconds }\r\n                </p>\r\n              </div>\r\n            );\r\n          }}\r\n      />\r\n      </Modal.Content>\r\n      \r\n      <Modal.Actions>\r\n        <Button color='red' onClick={() => setOpen(false)}>Close</Button>\r\n        <Button\r\n\t\t      color='green'\r\n          content=\"Done\"\r\n          labelPosition='right'\r\n          icon='checkmark'\r\n          onClick={() => setOpen(false)}\r\n          positive\r\n        />\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StopWatch;\r\n"]},"metadata":{},"sourceType":"module"}