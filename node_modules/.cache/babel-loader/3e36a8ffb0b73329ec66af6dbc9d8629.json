{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react-website-v1-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Button,Header,Image,Modal}from'semantic-ui-react';import ReactStopwatch from'react-stopwatch';var size=\"fullscreen\";function StopWatch(){var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),open=_React$useState2[0],setOpen=_React$useState2[1];return/*#__PURE__*/React.createElement(Modal,{onClose:function onClose(){return setOpen(false);},onOpen:function onOpen(){return setOpen(true);},open:open,size:size,trigger:/*#__PURE__*/React.createElement(Button,null,\"Launch Script\")},/*#__PURE__*/React.createElement(Modal.Header,null,\"StopWatch\"),/*#__PURE__*/React.createElement(Modal.Content,null,/*#__PURE__*/React.createElement(ReactStopwatch,{seconds:0,minutes:0,hours:0,limit:\"00:00:10\",onChange:function onChange(_ref){// do something\nvar hours=_ref.hours,minutes=_ref.minutes,seconds=_ref.seconds;},onCallback:function onCallback(){return console.log('Finish');},render:function render(_ref2){var formatted=_ref2.formatted,hours=_ref2.hours,minutes=_ref2.minutes,seconds=_ref2.seconds;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",null,\"Formatted: \",formatted),/*#__PURE__*/React.createElement(\"p\",null,\"Hours: \",hours),/*#__PURE__*/React.createElement(\"p\",null,\"Minutes: \",minutes),/*#__PURE__*/React.createElement(\"p\",null,\"Seconds: \",seconds));}})),/*#__PURE__*/React.createElement(Modal.Actions,null,/*#__PURE__*/React.createElement(Button,{color:\"red\",onClick:function onClick(){return setOpen(false);}},\"Close\"),/*#__PURE__*/React.createElement(Button,{color:\"green\",content:\"Done\",labelPosition:\"right\",icon:\"checkmark\",onClick:function onClick(){return setOpen(false);},positive:true})));}export default StopWatch;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/react-website-v1-master/src/components/scripts/StopWatch.js"],"names":["React","Button","Header","Image","Modal","ReactStopwatch","size","StopWatch","useState","open","setOpen","hours","minutes","seconds","console","log","formatted"],"mappings":"sLAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,MAAT,CAAiBC,MAAjB,CAAyBC,KAAzB,CAAgCC,KAAhC,KAA6C,mBAA7C,CAEA,MAAOC,CAAAA,cAAP,KAA2B,iBAA3B,CAEA,GAAMC,CAAAA,IAAI,CAAG,YAAb,CAEA,QAASC,CAAAA,SAAT,EAAqB,qBACMP,KAAK,CAACQ,QAAN,CAAe,KAAf,CADN,oDACXC,IADW,qBACLC,OADK,qBAGlB,mBACG,oBAAC,KAAD,EACE,OAAO,CAAE,yBAAMA,CAAAA,OAAO,CAAC,KAAD,CAAb,EADX,CAEE,MAAM,CAAE,wBAAMA,CAAAA,OAAO,CAAC,IAAD,CAAb,EAFV,CAGE,IAAI,CAAED,IAHR,CAIE,IAAI,CAAEH,IAJR,CAKE,OAAO,cAAE,oBAAC,MAAD,sBALX,eAOA,oBAAC,KAAD,CAAO,MAAP,kBAPA,cASA,oBAAC,KAAD,CAAO,OAAP,mBACE,oBAAC,cAAD,EACE,OAAO,CAAE,CADX,CAEE,OAAO,CAAE,CAFX,CAGE,KAAK,CAAE,CAHT,CAIE,KAAK,CAAC,UAJR,CAKE,QAAQ,CAAE,uBAAiC,CACzC;AADyC,GAA9BK,CAAAA,KAA8B,MAA9BA,KAA8B,CAAvBC,OAAuB,MAAvBA,OAAuB,CAAdC,OAAc,MAAdA,OAAc,CAE1C,CAPH,CAQE,UAAU,CAAE,4BAAMC,CAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAN,EARd,CASE,MAAM,CAAE,sBAA4C,IAAzCC,CAAAA,SAAyC,OAAzCA,SAAyC,CAA9BL,KAA8B,OAA9BA,KAA8B,CAAvBC,OAAuB,OAAvBA,OAAuB,CAAdC,OAAc,OAAdA,OAAc,CAClD,mBACE,4CACE,2CACeG,SADf,CADF,cAIE,uCACWL,KADX,CAJF,cAOE,yCACaC,OADb,CAPF,cAUE,yCACaC,OADb,CAVF,CADF,CAgBD,CA1BH,EADF,CATA,cAwCA,oBAAC,KAAD,CAAO,OAAP,mBACE,oBAAC,MAAD,EAAQ,KAAK,CAAC,KAAd,CAAoB,OAAO,CAAE,yBAAMH,CAAAA,OAAO,CAAC,KAAD,CAAb,EAA7B,UADF,cAEE,oBAAC,MAAD,EACA,KAAK,CAAC,OADN,CAEE,OAAO,CAAC,MAFV,CAGE,aAAa,CAAC,OAHhB,CAIE,IAAI,CAAC,WAJP,CAKE,OAAO,CAAE,yBAAMA,CAAAA,OAAO,CAAC,KAAD,CAAb,EALX,CAME,QAAQ,KANV,EAFF,CAxCA,CADH,CAsDF,CAED,cAAeH,CAAAA,SAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, Header, Image, Modal } from 'semantic-ui-react';\r\n\r\nimport ReactStopwatch from 'react-stopwatch';\r\n\r\nconst size = \"fullscreen\";\r\n\r\nfunction StopWatch() {\r\n   const [open, setOpen] = React.useState(false)\r\n\r\n   return (\r\n      <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        size={size}\r\n        trigger={<Button>Launch Script</Button>}\r\n      >\r\n      <Modal.Header>StopWatch</Modal.Header>\r\n      \r\n      <Modal.Content>\r\n        <ReactStopwatch\r\n          seconds={0}\r\n          minutes={0}\r\n          hours={0}\r\n          limit=\"00:00:10\"\r\n          onChange={({ hours, minutes, seconds }) => {\r\n            // do something\r\n          }}\r\n          onCallback={() => console.log('Finish')}\r\n          render={({ formatted, hours, minutes, seconds }) => {\r\n            return (\r\n              <div>\r\n                <p>\r\n                  Formatted: { formatted }\r\n                </p>\r\n                <p>\r\n                  Hours: { hours }\r\n                </p>\r\n                <p>\r\n                  Minutes: { minutes }\r\n                </p>\r\n                <p>\r\n                  Seconds: { seconds }\r\n                </p>\r\n              </div>\r\n            );\r\n          }}\r\n      />\r\n      </Modal.Content>\r\n      \r\n      <Modal.Actions>\r\n        <Button color='red' onClick={() => setOpen(false)}>Close</Button>\r\n        <Button\r\n\t\t      color='green'\r\n          content=\"Done\"\r\n          labelPosition='right'\r\n          icon='checkmark'\r\n          onClick={() => setOpen(false)}\r\n          positive\r\n        />\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StopWatch;\r\n"]},"metadata":{},"sourceType":"module"}