{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\react-website-v1-master\\\\src\\\\components\\\\scripts\\\\StopWatch.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Button, Header, Image, Modal } from 'semantic-ui-react';\nimport ReactStopwatch from 'react-stopwatch';\nconst size = \"fullscreen\";\n\nfunction StopWatch() {\n  const [open, setOpen] = React.useState(false);\n  const [timer, setTimer] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [isPaused, setIsPaused] = useState(0);\n  const countRef = useRef(null);\n\n  const handleStart = () => {\n    setIsActive(true);\n    setIsPaused(true);\n    countRef.current = setInterval(() => {\n      setTimer(timer => timer + 1);\n    }, 1000);\n  };\n\n  const handlePause = () => {\n    clearInterval(countRef.current);\n    setIsPaused(false);\n  };\n\n  const handleResume = () => {\n    setIsPaused(true);\n    countRef.current = setInterval(() => {\n      setTimer(timer => timer + 1);\n    }, 1000);\n  };\n\n  const handleReset = () => {\n    clearInterval(countRef.current);\n    setIsActive(false);\n    setIsPaused(false);\n    setTimer(0);\n  };\n\n  const formatTime = () => {\n    const getSeconds = `0${timer % 60}`.slice(-2);\n    const minutes = `${Math.floor(timer / 60)}`;\n    const getMinutes = `0${minutes % 60}`.slice(-2);\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\n    return `${getHours} : ${getMinutes} : ${getSeconds}`;\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    size: size,\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }\n    }, \"Launch Script\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"StopWatch\"), /*#__PURE__*/React.createElement(Modal.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"React Stopwatch\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stopwatch-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, timer), \" \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Start\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handlePause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Pause\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleResume,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"Resume\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleReset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"Reset\"))))), /*#__PURE__*/React.createElement(Modal.Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"red\",\n    onClick: () => setOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"green\",\n    content: \"Done\",\n    labelPosition: \"right\",\n    icon: \"checkmark\",\n    onClick: () => setOpen(false),\n    positive: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default StopWatch;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/react-website-v1-master/src/components/scripts/StopWatch.js"],"names":["React","useState","useRef","Button","Header","Image","Modal","ReactStopwatch","size","StopWatch","open","setOpen","timer","setTimer","isActive","setIsActive","isPaused","setIsPaused","countRef","handleStart","current","setInterval","handlePause","clearInterval","handleResume","handleReset","formatTime","getSeconds","slice","minutes","Math","floor","getMinutes","getHours"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Button, Header, Image, Modal } from 'semantic-ui-react';\r\n\r\nimport ReactStopwatch from 'react-stopwatch';\r\n\r\nconst size = \"fullscreen\";\r\n\r\nfunction StopWatch() {\r\n   const [open, setOpen] = React.useState(false);\r\n   const [timer, setTimer] = useState(0);\r\n   const [isActive, setIsActive] = useState(false);\r\n   const [isPaused, setIsPaused] = useState(0);\r\n   const countRef = useRef(null);\r\n\r\n   const handleStart = () => {\r\n      setIsActive(true);\r\n      setIsPaused(true);\r\n      countRef.current = setInterval(() => {\r\n        setTimer((timer) => timer + 1)\r\n      }, 1000)\r\n   }\r\n\r\n   const handlePause = () => {\r\n      clearInterval(countRef.current);\r\n      setIsPaused(false);\r\n   }\r\n\r\n   const handleResume = () => {\r\n     setIsPaused(true)\r\n     countRef.current = setInterval(() => {\r\n       setTimer((timer) => timer + 1)\r\n     }, 1000)\r\n   }\r\n\r\n   const handleReset = () => {\r\n      clearInterval(countRef.current)\r\n      setIsActive(false)\r\n      setIsPaused(false)\r\n      setTimer(0)\r\n   }\r\n\r\n   const formatTime = () => {\r\n    const getSeconds = `0${(timer % 60)}`.slice(-2)\r\n    const minutes = `${Math.floor(timer / 60)}`\r\n    const getMinutes = `0${minutes % 60}`.slice(-2)\r\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2)\r\n\r\n    return `${getHours} : ${getMinutes} : ${getSeconds}`\r\n   }\r\n\r\n   return (\r\n      <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        size={size}\r\n        trigger={<Button>Launch Script</Button>}\r\n      >\r\n      <Modal.Header>StopWatch</Modal.Header>\r\n      \r\n      <Modal.Content>\r\n        <div className=\"app\">\r\n          <h3>React Stopwatch</h3>\r\n            <div className='stopwatch-card'>\r\n              <p>{timer}</p> {/* here we will show timer */}\r\n              <div className='buttons'>\r\n                <button onClick={handleStart}>Start</button>\r\n                <button onClick={handlePause}>Pause</button>\r\n                <button onClick={handleResume}>Resume</button>\r\n                <button onClick={handleReset}>Reset</button>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </Modal.Content>\r\n      \r\n      <Modal.Actions>\r\n        <Button color='red' onClick={() => setOpen(false)}>Close</Button>\r\n        <Button\r\n\t\t      color='green'\r\n          content=\"Done\"\r\n          labelPosition='right'\r\n          icon='checkmark'\r\n          onClick={() => setOpen(false)}\r\n          positive\r\n        />\r\n      </Modal.Actions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default StopWatch;\r\n"]},"metadata":{},"sourceType":"module"}