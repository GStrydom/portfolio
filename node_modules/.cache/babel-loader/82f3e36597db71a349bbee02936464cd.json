{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports', 'react', 'react-dom', 'prop-types', 'styled-components', 'react-click-outside', 'uuid', './Async', '../helpers/shadowDOM', './constants', './partials/Select', './partials/SelectMenu', './partials/SelectMenuVirtualized', './partials/SelectValue', './partials/SelectMultiValue', './partials/SelectClear', './partials/SelectArrow', './partials/SelectInput', './partials/SelectInputField', './partials/SelectInputFieldSize', './partials/SelectControl', './partials/SelectNoResults', './partials/SelectClearZone', './partials/SelectArrowZone', './partials/SelectMenuOuter', './partials/SelectPlaceholder', './partials/SelectValueWrapper', './partials/SelectMultiValueWrapper', './renderers/ValueRenderer', './renderers/OptionRenderer', './functions/stringifyValue'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports, require('react'), require('react-dom'), require('prop-types'), require('styled-components'), require('react-click-outside'), require('uuid'), require('./Async'), require('../helpers/shadowDOM'), require('./constants'), require('./partials/Select'), require('./partials/SelectMenu'), require('./partials/SelectMenuVirtualized'), require('./partials/SelectValue'), require('./partials/SelectMultiValue'), require('./partials/SelectClear'), require('./partials/SelectArrow'), require('./partials/SelectInput'), require('./partials/SelectInputField'), require('./partials/SelectInputFieldSize'), require('./partials/SelectControl'), require('./partials/SelectNoResults'), require('./partials/SelectClearZone'), require('./partials/SelectArrowZone'), require('./partials/SelectMenuOuter'), require('./partials/SelectPlaceholder'), require('./partials/SelectValueWrapper'), require('./partials/SelectMultiValueWrapper'), require('./renderers/ValueRenderer'), require('./renderers/OptionRenderer'), require('./functions/stringifyValue'));\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports, global.react, global.reactDom, global.propTypes, global.styledComponents, global.reactClickOutside, global.uuid, global.Async, global.shadowDOM, global.constants, global.Select, global.SelectMenu, global.SelectMenuVirtualized, global.SelectValue, global.SelectMultiValue, global.SelectClear, global.SelectArrow, global.SelectInput, global.SelectInputField, global.SelectInputFieldSize, global.SelectControl, global.SelectNoResults, global.SelectClearZone, global.SelectArrowZone, global.SelectMenuOuter, global.SelectPlaceholder, global.SelectValueWrapper, global.SelectMultiValueWrapper, global.ValueRenderer, global.OptionRenderer, global.stringifyValue);\n    global.Select = mod.exports;\n  }\n})(this, function (exports, _react, _reactDom, _propTypes, _styledComponents, _reactClickOutside, _uuid, _Async, _shadowDOM, _constants, _Select, _SelectMenu, _SelectMenuVirtualized, _SelectValue, _SelectMultiValue, _SelectClear, _SelectArrow, _SelectInput, _SelectInputField, _SelectInputFieldSize, _SelectControl, _SelectNoResults, _SelectClearZone, _SelectArrowZone, _SelectMenuOuter, _SelectPlaceholder, _SelectValueWrapper, _SelectMultiValueWrapper, _ValueRenderer, _OptionRenderer, _stringifyValue) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.ShadowDOM = exports.Async = undefined;\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _reactDom2 = _interopRequireDefault(_reactDom);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _styledComponents2 = _interopRequireDefault(_styledComponents);\n\n  var _reactClickOutside2 = _interopRequireDefault(_reactClickOutside);\n\n  var _uuid2 = _interopRequireDefault(_uuid);\n\n  var _Async2 = _interopRequireDefault(_Async);\n\n  var _shadowDOM2 = _interopRequireDefault(_shadowDOM);\n\n  var _Select2 = _interopRequireDefault(_Select);\n\n  var _SelectMenu2 = _interopRequireDefault(_SelectMenu);\n\n  var _SelectMenuVirtualized2 = _interopRequireDefault(_SelectMenuVirtualized);\n\n  var _SelectValue2 = _interopRequireDefault(_SelectValue);\n\n  var _SelectMultiValue2 = _interopRequireDefault(_SelectMultiValue);\n\n  var _SelectClear2 = _interopRequireDefault(_SelectClear);\n\n  var _SelectArrow2 = _interopRequireDefault(_SelectArrow);\n\n  var _SelectInput2 = _interopRequireDefault(_SelectInput);\n\n  var _SelectInputField2 = _interopRequireDefault(_SelectInputField);\n\n  var _SelectInputFieldSize2 = _interopRequireDefault(_SelectInputFieldSize);\n\n  var _SelectControl2 = _interopRequireDefault(_SelectControl);\n\n  var _SelectNoResults2 = _interopRequireDefault(_SelectNoResults);\n\n  var _SelectClearZone2 = _interopRequireDefault(_SelectClearZone);\n\n  var _SelectArrowZone2 = _interopRequireDefault(_SelectArrowZone);\n\n  var _SelectMenuOuter2 = _interopRequireDefault(_SelectMenuOuter);\n\n  var _SelectPlaceholder2 = _interopRequireDefault(_SelectPlaceholder);\n\n  var _SelectValueWrapper2 = _interopRequireDefault(_SelectValueWrapper);\n\n  var _SelectMultiValueWrapper2 = _interopRequireDefault(_SelectMultiValueWrapper);\n\n  var _ValueRenderer2 = _interopRequireDefault(_ValueRenderer);\n\n  var _OptionRenderer2 = _interopRequireDefault(_OptionRenderer);\n\n  var _stringifyValue2 = _interopRequireDefault(_stringifyValue);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n\n  var SEARCH_INPUT_MIN_SIZE = 1;\n\n  function optionsMapReducer(agregate, current) {\n    agregate[current.value] = current;\n    return agregate;\n  }\n\n  var WrapperSelect = function (_React$PureComponent) {\n    _inherits(WrapperSelect, _React$PureComponent);\n\n    function WrapperSelect(props) {\n      _classCallCheck(this, WrapperSelect);\n\n      var _this2 = _possibleConstructorReturn(this, (WrapperSelect.__proto__ || Object.getPrototypeOf(WrapperSelect)).call(this, props));\n\n      _this2.state = {\n        values: _this2.updateValues(props),\n        isOpened: false,\n        isFocused: false,\n        isSelected: false,\n        searchTerm: null,\n        searchWidth: 1,\n        focusedIndex: 0,\n        currentMenuScrollTop: 0,\n        options: props.options,\n        'aria-owns': _this2.props['aria-owns'] || _uuid2.default.v4(),\n        'input-field-id': _uuid2.default.v4()\n      };\n      _this2.scrollerRef = null;\n      _this2.inputRef = null;\n      _this2.searchSizeRef = null;\n      _this2.shouldFireClickOutsideHack = null;\n      _this2.onSearchingBinded = _this2.onSearching.bind(_this2);\n      _this2.onRemoveTagBinded = _this2.onRemoveTag.bind(_this2);\n      _this2.onClearValueBinded = _this2.onClearValue.bind(_this2);\n      _this2.onSelectValueBinded = _this2.onSelectValue.bind(_this2);\n      _this2.onSelectFocusedBinded = _this2.onSelectFocused.bind(_this2);\n      _this2.onSelectMenuScrollerBinded = _this2.onSelectMenuScroller.bind(_this2);\n      _this2.setRefAtVirtualizedBinded = _this2.setRefAtVirtualized.bind(_this2);\n      return _this2;\n    }\n\n    _createClass(WrapperSelect, [{\n      key: 'updateValues',\n      value: function updateValues(props) {\n        this.indexValues(props);\n        var values = [];\n\n        if (props.value && !Array.isArray(props.value) && this.optionsMap.hasOwnProperty(props.value)) {\n          values.push(props.value);\n        }\n\n        if (Array.isArray(props.value)) {\n          values = values.concat(props.value);\n        }\n\n        return new Set(values);\n      }\n    }, {\n      key: 'indexValues',\n      value: function indexValues(props) {\n        this.optionsMap = props.options.reduce(optionsMapReducer, {});\n      }\n    }, {\n      key: 'openOptions',\n      value: function openOptions() {\n        var _this3 = this;\n\n        var virtualized = this.props.virtualized;\n        var currentMenuScrollTop = this.state.currentMenuScrollTop;\n\n        if (this.scrollerRef && virtualized) {\n          window.setTimeout(function () {\n            _this3.scrollerRef.scrollTop = currentMenuScrollTop;\n          }, 1);\n        }\n\n        this.setState({\n          options: this.getOptions(),\n          focusedIndex: 0,\n          isOpened: true\n        });\n        this.props.onOpen();\n      }\n    }, {\n      key: 'closeOptions',\n      value: function closeOptions() {\n        this.setState({\n          isOpened: false\n        });\n        this.props.onClose();\n      }\n    }, {\n      key: 'setFocus',\n      value: function setFocus() {\n        var _this = this;\n\n        setTimeout(function () {\n          _this.inputRef && _this.inputRef.focus();\n        }, 10);\n      }\n    }, {\n      key: 'handleClickOutside',\n      value: function handleClickOutside(event) {\n        if (this.state.isOpened && this.shouldFireClickOutsideHack) {\n          this.closeOptions();\n          this.shouldFireClickOutsideHack = false;\n        }\n      }\n    }, {\n      key: 'onRemoveTag',\n      value: function onRemoveTag(props, event) {\n        var _this4 = this;\n\n        event.stopPropagation();\n        var multi = this.props.multi;\n        this.state.values.delete(props.value);\n        this.setState({\n          values: new Set(Array.from(this.state.values))\n        }, function () {\n          _this4.props.onChange(Array.from(_this4.state.values));\n        });\n      }\n    }, {\n      key: 'resetField',\n      value: function resetField() {\n        var _this5 = this;\n\n        var multi = this.props.multi;\n        var values = [];\n\n        if (multi) {\n          values = Array.from(this.state.values);\n          values.pop();\n          this.props.onChange(values);\n        }\n\n        this.setState({\n          values: new Set(values),\n          searchTerm: null,\n          focusedIndex: 0,\n          options: this.props.options\n        }, function () {\n          _this5.closeOptions();\n\n          _this5.inputRef.value = '';\n\n          _this5.props.onInputClear();\n        });\n      }\n    }, {\n      key: 'onClearValue',\n      value: function onClearValue(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.resetField();\n      }\n    }, {\n      key: 'onSelectValue',\n      value: function onSelectValue(newValue, event) {\n        var _this6 = this;\n\n        var multi = this.props.multi;\n        var values = this.state.values;\n        !multi && values.clear(); // when is not multi select\n\n        if (!values.has(newValue)) {\n          values.add(newValue);\n          this.setState({\n            values: values,\n            searchTerm: null,\n            focusedIndex: 0\n          }, function () {\n            _this6.inputRef.value = '';\n\n            _this6.props.onChange(multi ? Array.from(values) : newValue);\n          });\n        }\n\n        this.closeOptions();\n        this.props.onValueClick(multi ? Array.from(values) : newValue, event);\n        this.props.closeMenuOnSelect(multi ? Array.from(values) : newValue, event);\n      }\n    }, {\n      key: 'onSelectFocused',\n      value: function onSelectFocused(event) {\n        var _this7 = this;\n\n        this.shouldFireClickOutsideHack = false;\n        clearInterval(this.focusedTimeout);\n        this.focusedTimeout = setTimeout(function () {\n          _this7.shouldFireClickOutsideHack = true;\n        }, 200);\n        this.setState({\n          isFocused: true\n        });\n        this.openOptions();\n        this.setFocus();\n      }\n    }, {\n      key: 'getOptions',\n      value: function getOptions() {\n        var multi = this.props.multi;\n        var values = this.state.values;\n        return this.props.options.filter(function (opt) {\n          var label = typeof opt.label === 'string' && opt.label.toLowerCase().trim();\n\n          if (label && values.has(label) && multi) {\n            return false;\n          }\n\n          return true;\n        });\n      }\n    }, {\n      key: 'onSearching',\n      value: function onSearching(event) {\n        var _this8 = this;\n\n        var _props = this.props,\n            onInputChange = _props.onInputChange,\n            onTyping = _props.onTyping,\n            searchable = _props.searchable;\n        var _state = this.state,\n            focusedIndex = _state.focusedIndex,\n            options = _state.options,\n            isOpened = _state.isOpened;\n        this.props.onKeyDown(event);\n\n        var typing = function typing() {\n          var term = _this8.inputRef.value.toLowerCase().trim();\n\n          onTyping(term);\n\n          var filteredOptions = _this8.getOptions().filter(function (opt) {\n            if (typeof opt.label !== 'string') {\n              return true;\n            }\n\n            var label = opt.label.toLowerCase().trim();\n            return label.indexOf(term) !== -1;\n          });\n\n          _this8.setState({\n            searchTerm: _this8.inputRef.value,\n            searchWidth: searchWidth,\n            options: filteredOptions,\n            isOpened: true,\n            focusedIndex: 0\n          });\n\n          var searchWidth = SEARCH_INPUT_MIN_SIZE;\n\n          if (_this8.searchSizeRef) {\n            var width = _this8.searchSizeRef.getBoundingClientRect().width;\n\n            searchWidth = width > SEARCH_INPUT_MIN_SIZE ? width : SEARCH_INPUT_MIN_SIZE;\n          }\n\n          setTimeout(function () {\n            _this8.setState({\n              searchWidth: searchWidth,\n              currentMenuScrollTop: 0\n            });\n          });\n        };\n\n        var lastIndex = options.length - 1;\n\n        switch (event.keyCode) {\n          case _constants.KEY_BACKSPACE:\n            // backspace\n            if (!this.inputRef.value) {\n              this.resetField();\n              break;\n            }\n\n            setTimeout(typing, 1);\n            break;\n\n          case _constants.KEY_UP:\n            event.preventDefault();\n            this.setState({\n              focusedIndex: focusedIndex <= 0 ? lastIndex : focusedIndex - 1\n            });\n            break;\n\n          case _constants.KEY_DOWN:\n            event.preventDefault();\n\n            if (!isOpened) {\n              this.openOptions();\n              break;\n            }\n\n            this.setState({\n              focusedIndex: focusedIndex >= lastIndex ? 0 : focusedIndex + 1\n            });\n            break;\n\n          case _constants.KEY_ENTER:\n            event.preventDefault();\n            if (!options.length) break;\n            var newValue = options[focusedIndex].value;\n            this.onSelectValueBinded(newValue, event);\n            break;\n\n          case _constants.KEY_ESC:\n            this.closeOptions();\n            break;\n\n          default:\n            if (searchable) {\n              setTimeout(typing, 1);\n            }\n\n        }\n      }\n    }, {\n      key: 'renderSelectMultiValueWrapper',\n      value: function renderSelectMultiValueWrapper() {\n        var _this9 = this;\n\n        var _props2 = this.props,\n            multi = _props2.multi,\n            placeholder = _props2.placeholder,\n            searchable = _props2.searchable,\n            classes = _props2.classes,\n            valueRenderer = _props2.valueRenderer,\n            disabled = _props2.disabled;\n        var _state2 = this.state,\n            values = _state2.values,\n            isOpened = _state2.isOpened,\n            isSelected = _state2.isSelected,\n            searchTerm = _state2.searchTerm,\n            searchWidth = _state2.searchWidth;\n        var SelectValueComp = multi ? _SelectMultiValue2.default : _SelectValue2.default;\n        var SelectWrapperComp = multi ? _SelectMultiValueWrapper2.default : _SelectValueWrapper2.default;\n        var content = '';\n        var _values = values;\n\n        if (_values.size) {\n          if (!multi && _values.size > 1) {\n            _values = new Set([]);\n          }\n\n          content = Array.from(_values).map(function (value, key) {\n            return _react2.default.createElement(SelectValueComp, {\n              value: value,\n              onRemoveTag: _this9.onRemoveTagBinded,\n              key: key,\n              className: classes.selectValue,\n              'data-select-value': true,\n              'data-multi-value': multi\n            }, valueRenderer({\n              multi: multi,\n              value: value,\n              label: (_this9.optionsMap[value] || {}).label\n            }, classes.selectValueLabel));\n          });\n\n          if (!multi && content.length > 1) {\n            setTimeout(function () {\n              _this9.resetField();\n            }, 10);\n          }\n        }\n\n        if (!_values.size && !searchTerm) {\n          content = _react2.default.createElement(_SelectPlaceholder2.default, {\n            className: classes.selectPlaceholder,\n            'data-select-placeholder': true\n          }, placeholder);\n        }\n\n        if (!searchable) {\n          return _react2.default.createElement(SelectWrapperComp, {\n            htmlFor: this.state['input-field-id'],\n            ref: function ref(node) {\n              if (node) {\n                _this9.inputRef = node;\n\n                if (!node.focus) {\n                  _this9.inputRef = _reactDom2.default.findDOMNode(node);\n                }\n              }\n            },\n            className: classes.selectMultiValueWrapper,\n            onFocus: this.onSelectFocusedBinded,\n            onKeyDown: this.onSearchingBinded,\n            onKeyUp: this.props.onKeyUp,\n            onBlur: this.props.onBlur,\n            onKeyPress: this.props.onKeyPress,\n            tabIndex: this.props.tabIndex,\n            'data-select-multi-value-wrapper': multi\n          }, content);\n        }\n\n        return _react2.default.createElement(SelectWrapperComp, {\n          htmlFor: this.state['input-field-id'],\n          className: classes.selectMultiValueWrapper,\n          'data-select-multi-value-wrapper': multi\n        }, content, _react2.default.createElement(_SelectInput2.default, {\n          'data-select-input': true,\n          className: classes.selectInput\n        }, _react2.default.createElement(_SelectInputField2.default, {\n          style: {\n            width: searchWidth + 'px'\n          },\n          disabled: disabled,\n          id: this.state['input-field-id'],\n          className: classes.selectInputField,\n          'data-select-input-search': true,\n          onFocus: this.onSelectFocusedBinded,\n          onKeyUp: this.props.onKeyUp,\n          onKeyPress: this.props.onKeyPress,\n          onKeyDown: this.onSearchingBinded,\n          tabIndex: this.props.tabIndex,\n          onChange: this.props.onInputChange,\n          ref: function ref(node) {\n            if (node) {\n              _this9.inputRef = node;\n\n              if (!node.focus) {\n                _this9.inputRef = _reactDom2.default.findDOMNode(node);\n              }\n            }\n          },\n          'aria-label': placeholder,\n          'aria-expanded': isOpened,\n          'aria-owns': this.state['aria-owns'],\n          role: 'combobox',\n          type: 'text'\n        })), _react2.default.createElement(_SelectInputFieldSize2.default, {\n          'data-select-input-size': true,\n          ref: function ref(node) {\n            _this9.searchSizeRef = node;\n\n            if (node) {\n              if (!node.focus) {\n                _this9.searchSizeRef = _reactDom2.default.findDOMNode(node);\n              }\n            }\n          }\n        }, searchTerm));\n      }\n    }, {\n      key: 'onSelectMenuScroller',\n      value: function onSelectMenuScroller(event) {\n        this.setState({\n          currentMenuScrollTop: event.target.scrollTop\n        });\n      }\n    }, {\n      key: 'renderSelectMenuOuter',\n      value: function renderSelectMenuOuter() {\n        var _this10 = this;\n\n        var _props3 = this.props,\n            classes = _props3.classes,\n            noResultsText = _props3.noResultsText,\n            optionRenderer = _props3.optionRenderer,\n            disabled = _props3.disabled,\n            virtualizedMaxHeight = _props3.virtualizedMaxHeight,\n            virtualizedOptionHeight = _props3.virtualizedOptionHeight,\n            virtualized = _props3.virtualized;\n        var _state3 = this.state,\n            values = _state3.values,\n            isOpened = _state3.isOpened,\n            focusedIndex = _state3.focusedIndex,\n            options = _state3.options,\n            currentMenuScrollTop = _state3.currentMenuScrollTop;\n\n        if (!isOpened) {\n          return _react2.default.createElement('div', {\n            'aria-hidden': 'true',\n            id: ['aria-owns'],\n            role: 'listbox'\n          }, _react2.default.createElement('div', {\n            role: 'option',\n            tabIndex: '-1'\n          }));\n        }\n\n        var selectOptions = _react2.default.createElement(_SelectNoResults2.default, null, noResultsText);\n\n        if (options.length > 0) {\n          selectOptions = options.map(function (opt, i) {\n            var elementTopPosition = virtualizedOptionHeight * i + virtualizedOptionHeight;\n            var isTopHidden = currentMenuScrollTop > elementTopPosition;\n            var isBottomHidden = currentMenuScrollTop < elementTopPosition - (virtualizedMaxHeight + virtualizedOptionHeight);\n\n            if ((isTopHidden || isBottomHidden) && virtualized) {\n              return null;\n            }\n\n            var isSelected = values.has(opt.value);\n            var isFocused = focusedIndex === i;\n            return optionRenderer(Object.assign({\n              key: i,\n              'data-key': i,\n              isSelected: isSelected,\n              virtualized: virtualized,\n              id: _this10.state['aria-owns'],\n              virtualizedOptionHeight: virtualizedOptionHeight,\n              className: classes.selectOption,\n              isFocused: focusedIndex == i,\n              tabIndex: values.has(opt.value) ? '0' : '-1',\n              onMouseOver: function onMouseOver(e) {\n                var dataKey = e.target.getAttribute('data-key');\n\n                _this10.setState({\n                  focusedIndex: dataKey\n                });\n              },\n              onMouseOut: function onMouseOut(e) {\n                _this10.setState({\n                  focusedIndex: null\n                });\n              },\n              onMouseDown: function onMouseDown(e) {\n                return _this10.onSelectValueBinded(opt.value, e);\n              }\n            }, opt), i);\n          });\n        }\n\n        return _react2.default.createElement(_SelectMenuOuter2.default, {\n          className: classes.selectMenuOuter,\n          'data-select-menu-outer': true\n        }, virtualized ? this.renderSelectMenuVirtualizedOptions(selectOptions) : this.renderSelectMenuOptions(selectOptions));\n      }\n    }, {\n      key: 'renderSelectMenuOptions',\n      value: function renderSelectMenuOptions(selectOptions) {\n        var classes = this.props.classes;\n        return _react2.default.createElement(_SelectMenu2.default, {\n          role: 'listbox',\n          className: classes.selectMenu,\n          'data-select-menu': true\n        }, selectOptions);\n      }\n    }, {\n      key: 'setRefAtVirtualized',\n      value: function setRefAtVirtualized(node) {\n        if (node) {\n          this.scrollerRef = node;\n        }\n      }\n    }, {\n      key: 'renderSelectMenuVirtualizedOptions',\n      value: function renderSelectMenuVirtualizedOptions(selectOptions) {\n        var _props4 = this.props,\n            classes = _props4.classes,\n            virtualizedMaxHeight = _props4.virtualizedMaxHeight,\n            virtualizedOptionHeight = _props4.virtualizedOptionHeight;\n        var options = this.state.options;\n        var scrollHeight = options.length * virtualizedOptionHeight;\n        return _react2.default.createElement(_SelectMenuVirtualized2.default, {\n          ref: this.setRefAtVirtualizedBinded,\n          role: 'listbox',\n          style: {\n            height: virtualizedMaxHeight + 'px',\n            maxHeight: virtualizedMaxHeight + 'px'\n          },\n          onScroll: this.onSelectMenuScrollerBinded,\n          className: classes.selectMenu,\n          'data-select-menu': true\n        }, _react2.default.createElement('div', {\n          style: {\n            height: scrollHeight + 'px',\n            position: 'relative'\n          }\n        }, selectOptions));\n      }\n    }, {\n      key: 'renderSelectClearZone',\n      value: function renderSelectClearZone() {\n        var _props5 = this.props,\n            clearable = _props5.clearable,\n            classes = _props5.classes;\n        if (!clearable) return;\n        return _react2.default.createElement(_SelectClearZone2.default, {\n          className: classes.selectClearZone,\n          'data-select-clear-zone': true,\n          onMouseDown: this.onClearValueBinded\n        }, _react2.default.createElement(_SelectClear2.default, {\n          className: classes.selectClear,\n          'data-select-clear': true\n        }, '\\xD7'));\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        if (this.selectNode) {\n          this.props.generatedClassName(this.selectNode.className);\n        }\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        if (this.selectNode) {\n          this.props.generatedClassName(this.selectNode.className);\n        }\n      }\n    }, {\n      key: 'UNSAFE_componentWillReceiveProps',\n      value: function UNSAFE_componentWillReceiveProps(nextProps) {\n        this.setState({\n          options: nextProps.options,\n          values: this.updateValues(nextProps)\n        });\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this11 = this;\n\n        var _props6 = this.props,\n            name = _props6.name,\n            disabled = _props6.disabled,\n            className = _props6.className,\n            classes = _props6.classes,\n            style = _props6.style,\n            required = _props6.required;\n        var _state4 = this.state,\n            value = _state4.value,\n            isSelected = _state4.isSelected,\n            isOpened = _state4.isOpened;\n        var values = Array.from(this.state.values);\n\n        var setRef = function setRef(node) {\n          _this11.selectNode = node;\n\n          if (node && !node.focus) {\n            _this11.selectNode = _reactDom2.default.findDOMNode(node);\n          }\n        };\n\n        return _react2.default.createElement(_Select2.default, {\n          style: style,\n          'data-select': true,\n          className: className,\n          disabled: disabled,\n          ref: setRef\n        }, _react2.default.createElement('input', {\n          type: required ? \"text\" : \"hidden\",\n          name: name,\n          style: {\n            position: \"absolute\",\n            zIndex: \"0\",\n            outline: \"none\",\n            opacity: \"0\"\n          },\n          value: (0, _stringifyValue2.default)(values.length ? values : \"\"),\n          disabled: disabled,\n          required: required\n        }), _react2.default.createElement(_SelectControl2.default, {\n          disabled: disabled,\n          isOpened: isOpened,\n          'aria-haspopup': isOpened,\n          className: classes.selectControl,\n          'data-select-control': true,\n          onMouseDown: this.onSelectFocusedBinded\n        }, this.renderSelectMultiValueWrapper(), this.renderSelectClearZone(), _react2.default.createElement(_SelectArrowZone2.default, {\n          className: classes.selectArrowZone,\n          'data-select-arrow-zone': true\n        }, _react2.default.createElement(_SelectArrow2.default, {\n          isOpened: isOpened,\n          className: classes.selectArrow,\n          'data-select-arrow': true\n        }))), this.renderSelectMenuOuter());\n      }\n    }]);\n\n    return WrapperSelect;\n  }(_react2.default.PureComponent);\n\n  WrapperSelect.propTypes = {\n    onBlur: _propTypes2.default.func,\n    value: _propTypes2.default.any,\n    options: _propTypes2.default.array,\n    onClose: _propTypes2.default.func,\n    onOpen: _propTypes2.default.func,\n    onChange: _propTypes2.default.func,\n    onKeyUp: _propTypes2.default.func,\n    onKeyPress: _propTypes2.default.func,\n    onKeyDown: _propTypes2.default.func,\n    onValueClick: _propTypes2.default.func,\n    tabIndex: _propTypes2.default.string,\n    closeMenuOnSelect: _propTypes2.default.func,\n    virtualized: _propTypes2.default.bool,\n    virtualizedMaxHeight: _propTypes2.default.number,\n    virtualizedOptionHeight: _propTypes2.default.number,\n    onInputClear: _propTypes2.default.func,\n    clearable: _propTypes2.default.bool,\n    placeholder: _propTypes2.default.any,\n    className: _propTypes2.default.string,\n    classes: _propTypes2.default.object,\n    noResultsText: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element]),\n    generatedClassName: _propTypes2.default.func\n  };\n  WrapperSelect.defaultProps = {\n    onBlur: function onBlur() {},\n    onClose: function onClose() {},\n    onOpen: function onOpen() {},\n    onChange: function onChange() {},\n    onKeyUp: function onKeyUp() {},\n    onKeyPress: function onKeyPress() {},\n    onKeyDown: function onKeyDown() {},\n    onInputChange: function onInputChange() {},\n    onTyping: function onTyping() {},\n    onValueClick: function onValueClick() {},\n    onInputClear: function onInputClear() {},\n    tabIndex: '0',\n    closeMenuOnSelect: function closeMenuOnSelect() {},\n    clearable: false,\n    searchable: true,\n    disabled: false,\n    multi: false,\n    options: [],\n    virtualized: false,\n    virtualizedMaxHeight: 198,\n    virtualizedOptionHeight: 38,\n    placeholder: 'Select...',\n    noResultsText: 'No results found',\n    classes: {\n      selectArrow: '',\n      selectArrowZone: '',\n      selectClear: '',\n      selectClearZone: '',\n      selectControl: '',\n      selectInput: '',\n      selectInputField: '',\n      selectMenu: '',\n      selectMenuOuter: '',\n      selectMultiValueWrapper: '',\n      selectOption: '',\n      selectPlaceholder: '',\n      selectValue: '',\n      selectValueLabel: ''\n    },\n    valueRenderer: _ValueRenderer2.default,\n    optionRenderer: _OptionRenderer2.default,\n    generatedClassName: function generatedClassName() {}\n  };\n  var EnhanceWrapperSelect = (0, _reactClickOutside2.default)(WrapperSelect);\n  var ShadowWrapperSelect = (0, _shadowDOM2.default)(EnhanceWrapperSelect);\n\n  var NormalAsync = function NormalAsync(props) {\n    return _react2.default.createElement(_Async2.default, props, _react2.default.createElement(EnhanceWrapperSelect, null));\n  };\n\n  var ShadowAsync = function ShadowAsync(props) {\n    return _react2.default.createElement(_Async2.default, props, _react2.default.createElement(ShadowWrapperSelect, null));\n  };\n\n  ShadowWrapperSelect.Async = ShadowAsync;\n  var Async = exports.Async = EnhanceWrapperSelect.Async = NormalAsync;\n  var ShadowDOM = exports.ShadowDOM = EnhanceWrapperSelect.ShadowDOM = ShadowWrapperSelect;\n  exports.default = EnhanceWrapperSelect;\n});","map":{"version":3,"sources":["../../src/Select/Select.js"],"names":["SEARCH_INPUT_MIN_SIZE","agregate","current","WrapperSelect","React","PureComponent","values","isOpened","isFocused","isSelected","searchTerm","searchWidth","focusedIndex","currentMenuScrollTop","options","props","uuid","Array","virtualized","window","_this","setTimeout","event","multi","newValue","clearInterval","label","opt","onInputChange","onTyping","searchable","typing","term","filteredOptions","width","lastIndex","KEY_BACKSPACE","KEY_UP","KEY_DOWN","KEY_ENTER","KEY_ESC","placeholder","classes","valueRenderer","disabled","SelectValueComp","SelectMultiValue","SelectValue","SelectWrapperComp","SelectMultiValueWrapper","SelectValueWrapper","content","_values","value","node","ReactDOM","scrollTop","noResultsText","optionRenderer","virtualizedMaxHeight","virtualizedOptionHeight","selectOptions","elementTopPosition","isTopHidden","isBottomHidden","key","id","className","tabIndex","onMouseOver","dataKey","e","onMouseOut","onMouseDown","scrollHeight","height","maxHeight","position","clearable","nextProps","name","style","required","setRef","zIndex","outline","opacity","onBlur","PropTypes","onClose","onOpen","onChange","onKeyUp","onKeyPress","onKeyDown","onValueClick","closeMenuOnSelect","onInputClear","generatedClassName","func","selectArrow","selectArrowZone","selectClear","selectClearZone","selectControl","selectInput","selectInputField","selectMenu","selectMenuOuter","selectMultiValueWrapper","selectOption","selectPlaceholder","selectValue","selectValueLabel","ValueRenderer","OptionRenderer","EnhanceWrapperSelect","ShadowWrapperSelect","NormalAsync","ShadowAsync","Async","ShadowDOM"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport enhanceWithClickOutside from 'react-click-outside'\nimport uuid from 'uuid';\nimport SelectAsync from './Async'\nimport shadowDOM from '../helpers/shadowDOM'\n\nimport {\n  KEY_UP,\n  KEY_ESC,\n  KEY_DOWN,\n  KEY_ENTER,\n  KEY_BACKSPACE\n} from './constants'\n\nconst SEARCH_INPUT_MIN_SIZE = 1;\n\nimport Select from './partials/Select'\nimport SelectMenu from './partials/SelectMenu'\nimport SelectMenuVirtualized from './partials/SelectMenuVirtualized'\nimport SelectValue from './partials/SelectValue'\nimport SelectMultiValue from './partials/SelectMultiValue'\nimport SelectClear from './partials/SelectClear'\nimport SelectArrow from './partials/SelectArrow'\nimport SelectInput from './partials/SelectInput'\nimport SelectInputField from './partials/SelectInputField'\nimport SelectInputFieldSize from './partials/SelectInputFieldSize'\nimport SelectControl from './partials/SelectControl'\nimport SelectNoResults from './partials/SelectNoResults'\nimport SelectClearZone from './partials/SelectClearZone'\nimport SelectArrowZone from './partials/SelectArrowZone'\nimport SelectMenuOuter from './partials/SelectMenuOuter'\nimport SelectPlaceholder from './partials/SelectPlaceholder'\nimport SelectValueWrapper from './partials/SelectValueWrapper'\nimport SelectMultiValueWrapper from './partials/SelectMultiValueWrapper'\n\nimport ValueRenderer from './renderers/ValueRenderer'\nimport OptionRenderer from './renderers/OptionRenderer'\n\nimport stringifyValue from './functions/stringifyValue'\n\nfunction optionsMapReducer(agregate, current) {\n  agregate[current.value] = current\n  return agregate\n}\n\nclass WrapperSelect extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      values: this.updateValues(props),\n      isOpened: false,\n      isFocused: false,\n      isSelected: false,\n      searchTerm: null,\n      searchWidth: 1,\n      focusedIndex: 0,\n      currentMenuScrollTop: 0,\n      options: props.options,\n      'aria-owns': this.props['aria-owns'] || uuid.v4(),\n      'input-field-id': uuid.v4()\n    }\n\n    this.scrollerRef = null\n    this.inputRef = null\n    this.searchSizeRef = null\n    this.shouldFireClickOutsideHack = null\n\n    this.onSearchingBinded = this.onSearching.bind(this)\n    this.onRemoveTagBinded = this.onRemoveTag.bind(this)\n    this.onClearValueBinded = this.onClearValue.bind(this)\n    this.onSelectValueBinded = this.onSelectValue.bind(this)\n    this.onSelectFocusedBinded = this.onSelectFocused.bind(this)\n    this.onSelectMenuScrollerBinded = this.onSelectMenuScroller.bind(this)\n    this.setRefAtVirtualizedBinded = this.setRefAtVirtualized.bind(this)\n  }\n\n  updateValues(props) {\n    this.indexValues(props)\n\n    let values = [];\n    if ((props.value && !Array.isArray(props.value)) && this.optionsMap.hasOwnProperty(props.value)) {\n      values.push(props.value)\n    }\n\n    if (Array.isArray(props.value)) {\n      values = values.concat(props.value)\n    }\n\n    return new Set(values)\n  }\n\n  indexValues(props) {\n    this.optionsMap = props.options.reduce(optionsMapReducer, {})\n  }\n\n  openOptions() {\n    const { virtualized } = this.props;\n    const { currentMenuScrollTop } = this.state;\n\n    if (this.scrollerRef && virtualized) {\n      window.setTimeout(() => {\n        this.scrollerRef.scrollTop = currentMenuScrollTop\n      }, 1)\n    }\n\n    this.setState({\n      options: this.getOptions(),\n      focusedIndex: 0,\n      isOpened: true\n    })\n    this.props.onOpen()\n  }\n\n  closeOptions() {\n    this.setState({ isOpened: false })\n    this.props.onClose()\n  }\n\n  setFocus() {\n    let _this = this\n    setTimeout(function() {\n      _this.inputRef && _this.inputRef.focus()\n    }, 10)\n  }\n\n  // react-click-outside callback\n\n  handleClickOutside(event) {\n    if (this.state.isOpened && this.shouldFireClickOutsideHack) {\n      this.closeOptions()\n      this.shouldFireClickOutsideHack = false\n    }\n  }\n\n  onRemoveTag(props, event) {\n    event.stopPropagation()\n    const { multi } = this.props;\n\n    this.state.values.delete(props.value)\n\n    this.setState({\n      values: new Set(Array.from(this.state.values))\n    }, () => {\n      this.props.onChange(Array.from(this.state.values))\n    })\n  }\n\n  resetField() {\n    const { multi } = this.props;\n\n    let values = [];\n    if (multi) {\n      values = Array.from(this.state.values)\n      values.pop()\n      this.props.onChange(values)\n    }\n\n    this.setState({\n      values: new Set(values),\n      searchTerm: null,\n      focusedIndex: 0,\n      options: this.props.options,\n    }, () => {\n      this.closeOptions()\n      this.inputRef.value = ''\n      this.props.onInputClear()\n    })\n  }\n\n  onClearValue(event) {\n    event.preventDefault()\n    event.stopPropagation()\n    this.resetField()\n  }\n\n  onSelectValue(newValue, event) {\n    const { multi } = this.props;\n    const { values } = this.state;\n\n    !multi && values.clear() // when is not multi select\n\n    if (!values.has(newValue)) {\n      values.add(newValue)\n      this.setState({\n        values,\n        searchTerm: null,\n        focusedIndex: 0\n      }, () => {\n        this.inputRef.value = ''\n        this.props.onChange(multi ? Array.from(values) : newValue)\n      })\n    }\n    this.closeOptions()\n    this.props.onValueClick(multi ? Array.from(values) : newValue, event)\n    this.props.closeMenuOnSelect(multi ? Array.from(values) : newValue, event)\n  }\n\n  onSelectFocused(event) {\n    this.shouldFireClickOutsideHack = false\n\n    clearInterval(this.focusedTimeout)\n    this.focusedTimeout = setTimeout(() => {\n      this.shouldFireClickOutsideHack = true\n    }, 200)\n\n    this.setState({\n      isFocused: true\n    })\n\n    this.openOptions()\n    this.setFocus()\n  }\n\n  getOptions() {\n    const { multi } = this.props;\n    const { values } = this.state;\n    return this.props.options.filter((opt) => {\n      const label = typeof opt.label === 'string' && opt.label.toLowerCase().trim()\n      if (label && values.has(label) && multi) {\n        return false;\n      }\n      return true;\n    })\n  }\n\n  onSearching(event) {\n    const { onInputChange, onTyping, searchable } = this.props\n    const { focusedIndex, options, isOpened } = this.state;\n\n    this.props.onKeyDown(event)\n\n    const typing = () => {\n      const term = this.inputRef.value.toLowerCase().trim()\n\n      onTyping(term)\n\n      const filteredOptions = this.getOptions().filter((opt) => {\n        if (typeof opt.label !== 'string') {\n          return true;\n        }\n\n        const label = opt.label.toLowerCase().trim()\n        return label.indexOf(term) !== -1\n      })\n\n      this.setState({\n        searchTerm: this.inputRef.value,\n        searchWidth,\n        options: filteredOptions,\n        isOpened: true,\n        focusedIndex: 0\n      })\n\n      let searchWidth = SEARCH_INPUT_MIN_SIZE;\n      if (this.searchSizeRef) {\n        const width = this.searchSizeRef.getBoundingClientRect().width;\n        searchWidth = width > SEARCH_INPUT_MIN_SIZE ? width : SEARCH_INPUT_MIN_SIZE;\n      }\n\n      setTimeout(() => {\n        this.setState({ searchWidth, currentMenuScrollTop: 0 })\n      })\n    }\n\n    const lastIndex = (options.length - 1)\n    switch (event.keyCode) {\n      case KEY_BACKSPACE: // backspace\n        if (!this.inputRef.value) {\n          this.resetField()\n          break;\n        }\n        setTimeout(typing, 1)\n        break;\n      case KEY_UP:\n        event.preventDefault();\n        this.setState({\n          focusedIndex: (focusedIndex <= 0 ? lastIndex : (focusedIndex - 1))\n        })\n        break;\n      case KEY_DOWN:\n        event.preventDefault();\n        if (!isOpened) {\n          this.openOptions()\n          break;\n        }\n        this.setState({\n          focusedIndex: (focusedIndex >= lastIndex ? 0 : (focusedIndex + 1))\n        })\n        break;\n      case KEY_ENTER:\n        event.preventDefault();\n        if (!options.length) break;\n        const newValue = options[focusedIndex].value\n        this.onSelectValueBinded(newValue, event)\n        break;\n      case KEY_ESC:\n        this.closeOptions()\n        break;\n      default:\n        if (searchable) {\n          setTimeout(typing, 1)\n        }\n    }\n  }\n\n  renderSelectMultiValueWrapper() {\n    const { multi, placeholder, searchable, classes, valueRenderer, disabled } = this.props;\n    const { values, isOpened, isSelected, searchTerm, searchWidth } = this.state;\n\n    const SelectValueComp = multi ? SelectMultiValue : SelectValue;\n    const SelectWrapperComp = multi ? SelectMultiValueWrapper : SelectValueWrapper;\n\n    let content = '';\n    let _values = values\n    if (_values.size) {\n\n      if (!multi && _values.size > 1) {\n        _values = new Set([])\n      }\n\n      content = Array.from(_values).map((value, key) => (\n        <SelectValueComp value={value} onRemoveTag={this.onRemoveTagBinded} key={key} className={classes.selectValue} data-select-value data-multi-value={multi}>\n          {valueRenderer({ multi, value, label: (this.optionsMap[value]||{}).label }, classes.selectValueLabel)}\n        </SelectValueComp>\n      ))\n\n      if (!multi && content.length > 1) {\n        setTimeout(() => {\n          this.resetField()\n        }, 10)\n      }\n    }\n\n    if (!_values.size && !searchTerm) {\n      content = (\n        <SelectPlaceholder\n          className={classes.selectPlaceholder}\n          data-select-placeholder>{placeholder}</SelectPlaceholder>\n      )\n    }\n\n    if (!searchable) {\n      return (\n        <SelectWrapperComp\n          htmlFor={this.state['input-field-id']}\n          ref={(node) => {\n            if (node) {\n              this.inputRef = node\n              if (!node.focus) {\n                this.inputRef = ReactDOM.findDOMNode(node);\n              }\n            }\n          }}\n          className={classes.selectMultiValueWrapper}\n          onFocus={this.onSelectFocusedBinded}\n          onKeyDown={this.onSearchingBinded}\n          onKeyUp={this.props.onKeyUp}\n          onBlur={this.props.onBlur}\n          onKeyPress={this.props.onKeyPress}\n          tabIndex={this.props.tabIndex}\n          data-select-multi-value-wrapper={multi}>\n          {content}\n        </SelectWrapperComp>\n      )\n    }\n\n    return (\n      <SelectWrapperComp\n        htmlFor={this.state['input-field-id']}\n        className={classes.selectMultiValueWrapper}\n        data-select-multi-value-wrapper={multi}>\n        {content}\n        <SelectInput data-select-input className={classes.selectInput}>\n          <SelectInputField\n            style={{width: `${searchWidth}px`}}\n            disabled={disabled}\n            id={this.state['input-field-id']}\n            className={classes.selectInputField}\n            data-select-input-search\n            onFocus={this.onSelectFocusedBinded}\n            onKeyUp={this.props.onKeyUp}\n            onKeyPress={this.props.onKeyPress}\n            onKeyDown={this.onSearchingBinded}\n            tabIndex={this.props.tabIndex}\n            onChange={this.props.onInputChange}\n            ref={(node) => {\n              if (node) {\n                this.inputRef = node\n                if (!node.focus) {\n                  this.inputRef = ReactDOM.findDOMNode(node);\n                }\n              }\n            }}\n            aria-label={placeholder}\n            aria-expanded={isOpened}\n            aria-owns={this.state['aria-owns']}\n            role=\"combobox\" type=\"text\" />\n        </SelectInput>\n        <SelectInputFieldSize\n          data-select-input-size\n          ref={(node) => {\n            this.searchSizeRef = node\n            if (node) {\n              if (!node.focus) {\n                this.searchSizeRef = ReactDOM.findDOMNode(node);\n              }\n            }\n          }}>{searchTerm}</SelectInputFieldSize>\n      </SelectWrapperComp>\n    )\n  }\n\n  onSelectMenuScroller(event) {\n    this.setState({\n      currentMenuScrollTop: event.target.scrollTop\n    })\n  }\n\n  renderSelectMenuOuter() {\n    const {\n      classes,\n      noResultsText,\n      optionRenderer,\n      disabled,\n      virtualizedMaxHeight,\n      virtualizedOptionHeight,\n      virtualized\n    } = this.props;\n\n    const {\n      values,\n      isOpened,\n      focusedIndex,\n      options,\n      currentMenuScrollTop\n    } = this.state;\n\n    if (!isOpened) {\n      return (\n        <div aria-hidden=\"true\" id={['aria-owns']} role=\"listbox\">\n          <div role=\"option\" tabIndex=\"-1\" />\n        </div>\n      )\n    }\n\n    let selectOptions = <SelectNoResults>{noResultsText}</SelectNoResults>;\n    if (options.length > 0) {\n      selectOptions = options.map((opt, i) => {\n        const elementTopPosition = (virtualizedOptionHeight * i) + virtualizedOptionHeight\n        const isTopHidden = currentMenuScrollTop > elementTopPosition\n        const isBottomHidden = currentMenuScrollTop < (elementTopPosition - (virtualizedMaxHeight + virtualizedOptionHeight))\n\n        if ((isTopHidden || isBottomHidden) && virtualized) {\n          return null\n        }\n\n        const isSelected = values.has(opt.value)\n        const isFocused = focusedIndex === i;\n        return optionRenderer(Object.assign({\n          key: i,\n          'data-key': i,\n          isSelected,\n          virtualized,\n          id: this.state['aria-owns'],\n          virtualizedOptionHeight: virtualizedOptionHeight,\n          className: classes.selectOption,\n          isFocused: focusedIndex == i,\n          tabIndex: values.has(opt.value) ? '0' : '-1',\n          onMouseOver: (e) => {\n            const dataKey = e.target.getAttribute('data-key')\n            this.setState({ focusedIndex: dataKey })\n          },\n          onMouseOut: (e) => {\n            this.setState({ focusedIndex: null })\n          },\n          onMouseDown: (e) => this.onSelectValueBinded(opt.value, e)\n        }, opt), i)\n      })\n    }\n\n    return (\n      <SelectMenuOuter\n        className={classes.selectMenuOuter}\n        data-select-menu-outer>\n        {virtualized ?\n          this.renderSelectMenuVirtualizedOptions(selectOptions) :\n          this.renderSelectMenuOptions(selectOptions)}\n      </SelectMenuOuter>\n    )\n  }\n\n  renderSelectMenuOptions(selectOptions) {\n    const { classes } = this.props;\n    return (\n      <SelectMenu\n        role=\"listbox\"\n        className={classes.selectMenu} data-select-menu>\n        {selectOptions}\n      </SelectMenu>\n    )\n  }\n\n  setRefAtVirtualized(node) {\n    if (node) {\n      this.scrollerRef = node\n    }\n  }\n\n  renderSelectMenuVirtualizedOptions(selectOptions) {\n    const { classes, virtualizedMaxHeight, virtualizedOptionHeight } = this.props;\n    const { options } = this.state;\n    const scrollHeight = options.length * virtualizedOptionHeight\n\n    return (\n      <SelectMenuVirtualized\n        ref={this.setRefAtVirtualizedBinded}\n        role=\"listbox\"\n        style={{\n          height: `${virtualizedMaxHeight}px`,\n          maxHeight: `${virtualizedMaxHeight}px`\n        }}\n        onScroll={this.onSelectMenuScrollerBinded}\n        className={classes.selectMenu} data-select-menu>\n        <div style={{height: `${scrollHeight}px`, position: 'relative'}}>\n          {selectOptions}\n        </div>\n      </SelectMenuVirtualized>\n    )\n  }\n\n  renderSelectClearZone() {\n    const { clearable, classes } = this.props;\n\n    if (!clearable) return;\n\n    return (\n      <SelectClearZone\n        className={classes.selectClearZone}\n        data-select-clear-zone onMouseDown={this.onClearValueBinded}>\n        <SelectClear\n          className={classes.selectClear} data-select-clear>×</SelectClear>\n      </SelectClearZone>\n    )\n  }\n\n  componentDidMount() {\n    if (this.selectNode) {\n      this.props.generatedClassName(this.selectNode.className)\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.selectNode) {\n      this.props.generatedClassName(this.selectNode.className)\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    this.setState({\n      options: nextProps.options,\n      values: this.updateValues(nextProps)\n    })\n  }\n\n  render () {\n    const { name, disabled, className, classes, style, required } = this.props;\n    const { value, isSelected, isOpened } = this.state;\n    const values = Array.from(this.state.values)\n\n    const setRef = (node) => {\n      this.selectNode = node\n      if ((node) && !node.focus) {\n        this.selectNode = ReactDOM.findDOMNode(node);\n      }\n    }\n\n    return (\n      <Select style={style} data-select className={className} disabled={disabled}\n        ref={setRef}>\n        <input\n          type={required ? \"text\" : \"hidden\"}\n          name={name}\n          style={{position: \"absolute\", zIndex: \"0\", outline: \"none\", opacity: \"0\"}}\n          value={stringifyValue(values.length ? values : \"\" )}\n          disabled={disabled} required={required} />\n        <SelectControl\n          disabled={disabled}\n          isOpened={isOpened}\n          aria-haspopup={isOpened}\n          className={classes.selectControl}\n          data-select-control onMouseDown={this.onSelectFocusedBinded}>\n          {this.renderSelectMultiValueWrapper()}\n          {this.renderSelectClearZone()}\n          <SelectArrowZone\n            className={classes.selectArrowZone} data-select-arrow-zone>\n            <SelectArrow isOpened={isOpened} className={classes.selectArrow} data-select-arrow />\n          </SelectArrowZone>\n        </SelectControl>\n        {this.renderSelectMenuOuter()}\n      </Select>\n    )\n  }\n}\n\nWrapperSelect.propTypes = {\n  onBlur: PropTypes.func,\n  value: PropTypes.any,\n  options: PropTypes.array,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  onChange: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onKeyPress: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onValueClick: PropTypes.func,\n  tabIndex: PropTypes.string,\n  closeMenuOnSelect: PropTypes.func,\n  virtualized: PropTypes.bool,\n  virtualizedMaxHeight: PropTypes.number,\n  virtualizedOptionHeight: PropTypes.number,\n  onInputClear: PropTypes.func,\n  clearable: PropTypes.bool,\n  placeholder: PropTypes.any,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  noResultsText: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element\n  ]),\n  generatedClassName: PropTypes.func\n}\n\nWrapperSelect.defaultProps = {\n  onBlur: () => {},\n  onClose: () => {},\n  onOpen: () => {},\n  onChange: () => {},\n  onKeyUp: () => {},\n  onKeyPress: () => {},\n  onKeyDown: () => {},\n  onInputChange: () => {},\n  onTyping: () => {},\n  onValueClick: () => {},\n  onInputClear: () => {},\n  tabIndex: '0',\n  closeMenuOnSelect: () => {},\n  clearable: false,\n  searchable: true,\n  disabled: false,\n  multi: false,\n  options: [],\n  virtualized: false,\n  virtualizedMaxHeight: 198,\n  virtualizedOptionHeight: 38,\n  placeholder: 'Select...',\n  noResultsText: 'No results found',\n  classes: {\n    selectArrow: '',\n    selectArrowZone: '',\n    selectClear: '',\n    selectClearZone: '',\n    selectControl: '',\n    selectInput: '',\n    selectInputField: '',\n    selectMenu: '',\n    selectMenuOuter: '',\n    selectMultiValueWrapper: '',\n    selectOption: '',\n    selectPlaceholder: '',\n    selectValue: '',\n    selectValueLabel: ''\n  },\n  valueRenderer: ValueRenderer,\n  optionRenderer: OptionRenderer,\n  generatedClassName: () => {}\n}\n\nconst EnhanceWrapperSelect = enhanceWithClickOutside(WrapperSelect)\nconst ShadowWrapperSelect = shadowDOM(EnhanceWrapperSelect)\n\nconst NormalAsync = props => <SelectAsync {...props}><EnhanceWrapperSelect /></SelectAsync>\nconst ShadowAsync = props => <SelectAsync {...props}><ShadowWrapperSelect /></SelectAsync>\n\nShadowWrapperSelect.Async = ShadowAsync\n\nexport const Async  = EnhanceWrapperSelect.Async = NormalAsync\nexport const ShadowDOM = EnhanceWrapperSelect.ShadowDOM = ShadowWrapperSelect\n\nexport default EnhanceWrapperSelect\n"]},"metadata":{},"sourceType":"script"}