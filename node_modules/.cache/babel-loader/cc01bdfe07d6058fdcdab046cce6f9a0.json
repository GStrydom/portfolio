{"ast":null,"code":"/*!\r\n * object.omit <https://github.com/jonschlinkert/object.omit>\r\n *\r\n * Copyright (c) 2014-2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\n'use strict';\n\nvar isObject = require('is-extendable');\n\nmodule.exports = function omit(obj, props, fn) {\n  if (!isObject(obj)) return {};\n\n  if (typeof props === 'function') {\n    fn = props;\n    props = [];\n  }\n\n  if (typeof props === 'string') {\n    props = [props];\n  }\n\n  var isFunction = typeof fn === 'function';\n  var keys = Object.keys(obj);\n  var res = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var val = obj[key];\n\n    if (!props || props.indexOf(key) === -1 && (!isFunction || fn(val, key, obj))) {\n      res[key] = val;\n    }\n  }\n\n  return res;\n};","map":{"version":3,"sources":["C:/Users/Administrator/Documents/GitHub/portfolio/node_modules/object.omit/index.js"],"names":["isObject","require","module","exports","omit","obj","props","fn","isFunction","keys","Object","res","i","length","key","val","indexOf"],"mappings":"AAAA;;;;;;AAOA;;AAEA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,GAAd,EAAmBC,KAAnB,EAA0BC,EAA1B,EAA8B;AAC7C,MAAI,CAACP,QAAQ,CAACK,GAAD,CAAb,EAAoB,OAAO,EAAP;;AAEpB,MAAI,OAAOC,KAAP,KAAiB,UAArB,EAAiC;AAC/BC,IAAAA,EAAE,GAAGD,KAAL;AACAA,IAAAA,KAAK,GAAG,EAAR;AACD;;AAED,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BA,IAAAA,KAAK,GAAG,CAACA,KAAD,CAAR;AACD;;AAED,MAAIE,UAAU,GAAG,OAAOD,EAAP,KAAc,UAA/B;AACA,MAAIE,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYJ,GAAZ,CAAX;AACA,MAAIM,GAAG,GAAG,EAAV;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,GAAG,GAAGL,IAAI,CAACG,CAAD,CAAd;AACA,QAAIG,GAAG,GAAGV,GAAG,CAACS,GAAD,CAAb;;AAEA,QAAI,CAACR,KAAD,IAAWA,KAAK,CAACU,OAAN,CAAcF,GAAd,MAAuB,CAAC,CAAxB,KAA8B,CAACN,UAAD,IAAeD,EAAE,CAACQ,GAAD,EAAMD,GAAN,EAAWT,GAAX,CAA/C,CAAf,EAAiF;AAC/EM,MAAAA,GAAG,CAACG,GAAD,CAAH,GAAWC,GAAX;AACD;AACF;;AACD,SAAOJ,GAAP;AACD,CAzBD","sourcesContent":["/*!\r\n * object.omit <https://github.com/jonschlinkert/object.omit>\r\n *\r\n * Copyright (c) 2014-2017, Jon Schlinkert.\r\n * Released under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nvar isObject = require('is-extendable');\r\n\r\nmodule.exports = function omit(obj, props, fn) {\r\n  if (!isObject(obj)) return {};\r\n\r\n  if (typeof props === 'function') {\r\n    fn = props;\r\n    props = [];\r\n  }\r\n\r\n  if (typeof props === 'string') {\r\n    props = [props];\r\n  }\r\n\r\n  var isFunction = typeof fn === 'function';\r\n  var keys = Object.keys(obj);\r\n  var res = {};\r\n\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i];\r\n    var val = obj[key];\r\n\r\n    if (!props || (props.indexOf(key) === -1 && (!isFunction || fn(val, key, obj)))) {\r\n      res[key] = val;\r\n    }\r\n  }\r\n  return res;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}