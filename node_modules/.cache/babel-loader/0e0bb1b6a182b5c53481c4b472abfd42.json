{"ast":null,"code":"(function (global, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(['exports'], factory);\n  } else if (typeof exports !== \"undefined\") {\n    factory(exports);\n  } else {\n    var mod = {\n      exports: {}\n    };\n    factory(mod.exports);\n    global.stringifyValue = mod.exports;\n  }\n})(this, function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = StringifyValue;\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  function StringifyValue(value) {\n    var valueType = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n    if (valueType === 'string') {\n      return value;\n    } else if (valueType === 'object') {\n      return JSON.stringify(value);\n    } else if (valueType === 'number' || valueType === 'boolean') {\n      return String(value);\n    } else {\n      return '';\n    }\n  }\n});","map":{"version":3,"sources":["../../../src/Select/functions/stringifyValue.js"],"names":["StringifyValue","valueType","JSON","String"],"mappings":";;;;;;;;;;;;;;;;;;oBAAwBA,c;;;;;;;;AAAT,WAAA,cAAA,CAAA,KAAA,EAAgC;AAC9C,QAAMC,SAAAA,GAAAA,OAAAA,KAAAA,KAAAA,WAAAA,GAAAA,WAAAA,GAAAA,OAAAA,CAAN,KAAMA,CAAN;;AACA,QAAIA,SAAAA,KAAJ,QAAA,EAA4B;AAC3B,aAAA,KAAA;AADD,KAAA,MAEO,IAAIA,SAAAA,KAAJ,QAAA,EAA4B;AAClC,aAAOC,IAAAA,CAAAA,SAAAA,CAAP,KAAOA,CAAP;AADM,KAAA,MAEA,IAAID,SAAAA,KAAAA,QAAAA,IAA0BA,SAAAA,KAA9B,SAAA,EAAuD;AAC7D,aAAOE,MAAAA,CAAP,KAAOA,CAAP;AADM,KAAA,MAEA;AACN,aAAA,EAAA;AACA;AACD","sourcesContent":["export default function StringifyValue (value) {\n\tconst valueType = typeof value;\n\tif (valueType === 'string') {\n\t\treturn value;\n\t} else if (valueType === 'object') {\n\t\treturn JSON.stringify(value);\n\t} else if (valueType === 'number' || valueType === 'boolean') {\n\t\treturn String(value);\n\t} else {\n\t\treturn '';\n\t}\n}\n"]},"metadata":{},"sourceType":"script"}