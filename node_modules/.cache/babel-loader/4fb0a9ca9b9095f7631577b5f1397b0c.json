{"ast":null,"code":"module.exports =\n/******/\nfunction (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId]) {\n      /******/\n      return installedModules[moduleId].exports;\n      /******/\n    }\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n\n    var module = installedModules[moduleId] = {\n      /******/\n      i: moduleId,\n\n      /******/\n      l: false,\n\n      /******/\n      exports: {}\n      /******/\n\n    };\n    /******/\n\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.l = true;\n    /******/\n\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n\n  /******/\n\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n\n  /******/\n  // identity function for calling harmony imports with the correct context\n\n  /******/\n\n  __webpack_require__.i = function (value) {\n    return value;\n  };\n  /******/\n\n  /******/\n  // define getter function for harmony exports\n\n  /******/\n\n\n  __webpack_require__.d = function (exports, name, getter) {\n    /******/\n    if (!__webpack_require__.o(exports, name)) {\n      /******/\n      Object.defineProperty(exports, name, {\n        /******/\n        configurable: false,\n\n        /******/\n        enumerable: true,\n\n        /******/\n        get: getter\n        /******/\n\n      });\n      /******/\n    }\n    /******/\n\n  };\n  /******/\n\n  /******/\n  // getDefaultExport function for compatibility with non-harmony modules\n\n  /******/\n\n\n  __webpack_require__.n = function (module) {\n    /******/\n    var getter = module && module.__esModule ?\n    /******/\n    function getDefault() {\n      return module['default'];\n    } :\n    /******/\n    function getModuleExports() {\n      return module;\n    };\n    /******/\n\n    __webpack_require__.d(getter, 'a', getter);\n    /******/\n\n\n    return getter;\n    /******/\n  };\n  /******/\n\n  /******/\n  // Object.prototype.hasOwnProperty.call\n\n  /******/\n\n\n  __webpack_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  /******/\n\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n\n  __webpack_require__.p = \"\";\n  /******/\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(__webpack_require__.s = 36);\n  /******/\n}(\n/************************************************************************/\n\n/******/\n[\n/* 0 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n\n  var bind = __webpack_require__(7);\n  /*global toString:true*/\n  // utils is a library of generic helper functions non-specific to axios\n\n\n  var toString = Object.prototype.toString;\n  /**\n   * Determine if a value is an Array\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is an Array, otherwise false\n   */\n\n  function isArray(val) {\n    return toString.call(val) === '[object Array]';\n  }\n  /**\n   * Determine if a value is an ArrayBuffer\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n   */\n\n\n  function isArrayBuffer(val) {\n    return toString.call(val) === '[object ArrayBuffer]';\n  }\n  /**\n   * Determine if a value is a FormData\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is an FormData, otherwise false\n   */\n\n\n  function isFormData(val) {\n    return typeof FormData !== 'undefined' && val instanceof FormData;\n  }\n  /**\n   * Determine if a value is a view on an ArrayBuffer\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n   */\n\n\n  function isArrayBufferView(val) {\n    var result;\n\n    if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n      result = ArrayBuffer.isView(val);\n    } else {\n      result = val && val.buffer && val.buffer instanceof ArrayBuffer;\n    }\n\n    return result;\n  }\n  /**\n   * Determine if a value is a String\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is a String, otherwise false\n   */\n\n\n  function isString(val) {\n    return typeof val === 'string';\n  }\n  /**\n   * Determine if a value is a Number\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is a Number, otherwise false\n   */\n\n\n  function isNumber(val) {\n    return typeof val === 'number';\n  }\n  /**\n   * Determine if a value is undefined\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if the value is undefined, otherwise false\n   */\n\n\n  function isUndefined(val) {\n    return typeof val === 'undefined';\n  }\n  /**\n   * Determine if a value is an Object\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is an Object, otherwise false\n   */\n\n\n  function isObject(val) {\n    return val !== null && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object';\n  }\n  /**\n   * Determine if a value is a Date\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is a Date, otherwise false\n   */\n\n\n  function isDate(val) {\n    return toString.call(val) === '[object Date]';\n  }\n  /**\n   * Determine if a value is a File\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is a File, otherwise false\n   */\n\n\n  function isFile(val) {\n    return toString.call(val) === '[object File]';\n  }\n  /**\n   * Determine if a value is a Blob\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is a Blob, otherwise false\n   */\n\n\n  function isBlob(val) {\n    return toString.call(val) === '[object Blob]';\n  }\n  /**\n   * Determine if a value is a Function\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is a Function, otherwise false\n   */\n\n\n  function isFunction(val) {\n    return toString.call(val) === '[object Function]';\n  }\n  /**\n   * Determine if a value is a Stream\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is a Stream, otherwise false\n   */\n\n\n  function isStream(val) {\n    return isObject(val) && isFunction(val.pipe);\n  }\n  /**\n   * Determine if a value is a URLSearchParams object\n   *\n   * @param {Object} val The value to test\n   * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n   */\n\n\n  function isURLSearchParams(val) {\n    return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n  }\n  /**\n   * Trim excess whitespace off the beginning and end of a string\n   *\n   * @param {String} str The String to trim\n   * @returns {String} The String freed of excess whitespace\n   */\n\n\n  function trim(str) {\n    return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n  }\n  /**\n   * Determine if we're running in a standard browser environment\n   *\n   * This allows axios to run in a web worker, and react-native.\n   * Both environments support XMLHttpRequest, but not fully standard globals.\n   *\n   * web workers:\n   *  typeof window -> undefined\n   *  typeof document -> undefined\n   *\n   * react-native:\n   *  typeof document.createElement -> undefined\n   */\n\n\n  function isStandardBrowserEnv() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined' && typeof document.createElement === 'function';\n  }\n  /**\n   * Iterate over an Array or an Object invoking a function for each item.\n   *\n   * If `obj` is an Array callback will be called passing\n   * the value, index, and complete array for each item.\n   *\n   * If 'obj' is an Object callback will be called passing\n   * the value, key, and complete object for each property.\n   *\n   * @param {Object|Array} obj The object to iterate\n   * @param {Function} fn The callback to invoke for each item\n   */\n\n\n  function forEach(obj, fn) {\n    // Don't bother if no value provided\n    if (obj === null || typeof obj === 'undefined') {\n      return;\n    } // Force an array if not already something iterable\n\n\n    if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' && !isArray(obj)) {\n      /*eslint no-param-reassign:0*/\n      obj = [obj];\n    }\n\n    if (isArray(obj)) {\n      // Iterate over array values\n      for (var i = 0, l = obj.length; i < l; i++) {\n        fn.call(null, obj[i], i, obj);\n      }\n    } else {\n      // Iterate over object keys\n      for (var key in obj) {\n        if (obj.hasOwnProperty(key)) {\n          fn.call(null, obj[key], key, obj);\n        }\n      }\n    }\n  }\n  /**\n   * Accepts varargs expecting each argument to be an object, then\n   * immutably merges the properties of each object and returns result.\n   *\n   * When multiple objects contain the same key the later object in\n   * the arguments list will take precedence.\n   *\n   * Example:\n   *\n   * ```js\n   * var result = merge({foo: 123}, {foo: 456});\n   * console.log(result.foo); // outputs 456\n   * ```\n   *\n   * @param {Object} obj1 Object to merge\n   * @returns {Object} Result of all merge properties\n   */\n\n\n  function merge()\n  /* obj1, obj2, obj3, ... */\n  {\n    var result = {};\n\n    function assignValue(val, key) {\n      if (_typeof(result[key]) === 'object' && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {\n        result[key] = merge(result[key], val);\n      } else {\n        result[key] = val;\n      }\n    }\n\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      forEach(arguments[i], assignValue);\n    }\n\n    return result;\n  }\n  /**\n   * Extends object a by mutably adding to it the properties of object b.\n   *\n   * @param {Object} a The object to be extended\n   * @param {Object} b The object to copy properties from\n   * @param {Object} thisArg The object to bind function to\n   * @return {Object} The resulting value of object a\n   */\n\n\n  function extend(a, b, thisArg) {\n    forEach(b, function assignValue(val, key) {\n      if (thisArg && typeof val === 'function') {\n        a[key] = bind(val, thisArg);\n      } else {\n        a[key] = val;\n      }\n    });\n    return a;\n  }\n\n  module.exports = {\n    isArray: isArray,\n    isArrayBuffer: isArrayBuffer,\n    isFormData: isFormData,\n    isArrayBufferView: isArrayBufferView,\n    isString: isString,\n    isNumber: isNumber,\n    isObject: isObject,\n    isUndefined: isUndefined,\n    isDate: isDate,\n    isFile: isFile,\n    isBlob: isBlob,\n    isFunction: isFunction,\n    isStream: isStream,\n    isURLSearchParams: isURLSearchParams,\n    isStandardBrowserEnv: isStandardBrowserEnv,\n    forEach: forEach,\n    merge: merge,\n    extend: extend,\n    trim: trim\n  };\n  /***/\n},\n/* 1 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; // shim for using process in browser\n\n  var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n  // don't break things.  But we need to wrap it in a try catch in case it is\n  // wrapped in strict mode code which doesn't define any globals.  It's inside a\n  // function because try/catches deoptimize in certain engines.\n\n  var cachedSetTimeout;\n  var cachedClearTimeout;\n\n  function defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n  }\n\n  function defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n  }\n\n  (function () {\n    try {\n      if (typeof setTimeout === 'function') {\n        cachedSetTimeout = setTimeout;\n      } else {\n        cachedSetTimeout = defaultSetTimout;\n      }\n    } catch (e) {\n      cachedSetTimeout = defaultSetTimout;\n    }\n\n    try {\n      if (typeof clearTimeout === 'function') {\n        cachedClearTimeout = clearTimeout;\n      } else {\n        cachedClearTimeout = defaultClearTimeout;\n      }\n    } catch (e) {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  })();\n\n  function runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n      //normal enviroments in sane situations\n      return setTimeout(fun, 0);\n    } // if setTimeout wasn't available but was latter defined\n\n\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n      cachedSetTimeout = setTimeout;\n      return setTimeout(fun, 0);\n    }\n\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedSetTimeout(fun, 0);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n        return cachedSetTimeout.call(null, fun, 0);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n        return cachedSetTimeout.call(this, fun, 0);\n      }\n    }\n  }\n\n  function runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n      //normal enviroments in sane situations\n      return clearTimeout(marker);\n    } // if clearTimeout wasn't available but was latter defined\n\n\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n      cachedClearTimeout = clearTimeout;\n      return clearTimeout(marker);\n    }\n\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedClearTimeout(marker);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n        return cachedClearTimeout.call(null, marker);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n        // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n        return cachedClearTimeout.call(this, marker);\n      }\n    }\n  }\n\n  var queue = [];\n  var draining = false;\n  var currentQueue;\n  var queueIndex = -1;\n\n  function cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n      return;\n    }\n\n    draining = false;\n\n    if (currentQueue.length) {\n      queue = currentQueue.concat(queue);\n    } else {\n      queueIndex = -1;\n    }\n\n    if (queue.length) {\n      drainQueue();\n    }\n  }\n\n  function drainQueue() {\n    if (draining) {\n      return;\n    }\n\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n\n    while (len) {\n      currentQueue = queue;\n      queue = [];\n\n      while (++queueIndex < len) {\n        if (currentQueue) {\n          currentQueue[queueIndex].run();\n        }\n      }\n\n      queueIndex = -1;\n      len = queue.length;\n    }\n\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n  }\n\n  process.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length; i++) {\n        args[i - 1] = arguments[i];\n      }\n    }\n\n    queue.push(new Item(fun, args));\n\n    if (queue.length === 1 && !draining) {\n      runTimeout(drainQueue);\n    }\n  }; // v8 likes predictible objects\n\n\n  function Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n  }\n\n  Item.prototype.run = function () {\n    this.fun.apply(null, this.array);\n  };\n\n  process.title = 'browser';\n  process.browser = true;\n  process.env = {};\n  process.argv = [];\n  process.version = ''; // empty string to avoid regexp issues\n\n  process.versions = {};\n\n  function noop() {}\n\n  process.on = noop;\n  process.addListener = noop;\n  process.once = noop;\n  process.off = noop;\n  process.removeListener = noop;\n  process.removeAllListeners = noop;\n  process.emit = noop;\n  process.prependListener = noop;\n  process.prependOnceListener = noop;\n\n  process.listeners = function (name) {\n    return [];\n  };\n\n  process.binding = function (name) {\n    throw new Error('process.binding is not supported');\n  };\n\n  process.cwd = function () {\n    return '/';\n  };\n\n  process.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n  };\n\n  process.umask = function () {\n    return 0;\n  };\n  /***/\n\n},\n/* 2 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  function makeEmptyFunction(arg) {\n    return function () {\n      return arg;\n    };\n  }\n  /**\n   * This function accepts and discards inputs; it has no side effects. This is\n   * primarily useful idiomatically for overridable function endpoints which\n   * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n   */\n\n\n  var emptyFunction = function emptyFunction() {};\n\n  emptyFunction.thatReturns = makeEmptyFunction;\n  emptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n  emptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n  emptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\n  emptyFunction.thatReturnsThis = function () {\n    return this;\n  };\n\n  emptyFunction.thatReturnsArgument = function (arg) {\n    return arg;\n  };\n\n  module.exports = emptyFunction;\n  /***/\n},\n/* 3 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    *\n    */\n\n    /**\n     * Use invariant() to assert state which your program assumes to be true.\n     *\n     * Provide sprintf-style format (only %s is supported) and arguments\n     * to provide information about what broke and what you were\n     * expecting.\n     *\n     * The invariant message will be stripped in production, but the invariant\n     * will remain to ensure logic does not differ in production.\n     */\n    var validateFormat = function validateFormat(format) {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      validateFormat = function validateFormat(format) {\n        if (format === undefined) {\n          throw new Error('invariant requires an error message argument');\n        }\n      };\n    }\n\n    function invariant(condition, format, a, b, c, d, e, f) {\n      validateFormat(format);\n\n      if (!condition) {\n        var error;\n\n        if (format === undefined) {\n          error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n        } else {\n          var args = [a, b, c, d, e, f];\n          var argIndex = 0;\n          error = new Error(format.replace(/%s/g, function () {\n            return args[argIndex++];\n          }));\n          error.name = 'Invariant Violation';\n        }\n\n        error.framesToPop = 1; // we don't care about invariant's own frame\n\n        throw error;\n      }\n    }\n\n    module.exports = invariant;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(1));\n  /***/\n},\n/* 4 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n  module.exports = ReactPropTypesSecret;\n  /***/\n},\n/* 5 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    var utils = __webpack_require__(0);\n\n    var settle = __webpack_require__(16);\n\n    var buildURL = __webpack_require__(20);\n\n    var parseHeaders = __webpack_require__(26);\n\n    var isURLSameOrigin = __webpack_require__(24);\n\n    var createError = __webpack_require__(6);\n\n    var btoa = typeof window !== 'undefined' && window.btoa || __webpack_require__(19);\n\n    module.exports = function xhrAdapter(config) {\n      return new Promise(function dispatchXhrRequest(resolve, reject) {\n        var requestData = config.data;\n        var requestHeaders = config.headers;\n\n        if (utils.isFormData(requestData)) {\n          delete requestHeaders['Content-Type']; // Let the browser set it\n        }\n\n        var request = new XMLHttpRequest();\n        var loadEvent = 'onreadystatechange';\n        var xDomain = false; // For IE 8/9 CORS support\n        // Only supports POST and GET calls and doesn't returns the response headers.\n        // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n\n        if (process.env.NODE_ENV !== 'test' && typeof window !== 'undefined' && window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {\n          request = new window.XDomainRequest();\n          loadEvent = 'onload';\n          xDomain = true;\n\n          request.onprogress = function handleProgress() {};\n\n          request.ontimeout = function handleTimeout() {};\n        } // HTTP basic authentication\n\n\n        if (config.auth) {\n          var username = config.auth.username || '';\n          var password = config.auth.password || '';\n          requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n        }\n\n        request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true); // Set the request timeout in MS\n\n        request.timeout = config.timeout; // Listen for ready state\n\n        request[loadEvent] = function handleLoad() {\n          if (!request || request.readyState !== 4 && !xDomain) {\n            return;\n          } // The request errored out and we didn't get a response, this will be\n          // handled by onerror instead\n\n\n          if (request.status === 0) {\n            return;\n          } // Prepare the response\n\n\n          var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n          var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n          var response = {\n            data: responseData,\n            // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n            status: request.status === 1223 ? 204 : request.status,\n            statusText: request.status === 1223 ? 'No Content' : request.statusText,\n            headers: responseHeaders,\n            config: config,\n            request: request\n          };\n          settle(resolve, reject, response); // Clean up request\n\n          request = null;\n        }; // Handle low level network errors\n\n\n        request.onerror = function handleError() {\n          // Real errors are hidden from us by the browser\n          // onerror should only fire if it's a network error\n          reject(createError('Network Error', config)); // Clean up request\n\n          request = null;\n        }; // Handle timeout\n\n\n        request.ontimeout = function handleTimeout() {\n          reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED')); // Clean up request\n\n          request = null;\n        }; // Add xsrf header\n        // This is only done if running in a standard browser environment.\n        // Specifically not if we're in a web worker, or react-native.\n\n\n        if (utils.isStandardBrowserEnv()) {\n          var cookies = __webpack_require__(22); // Add xsrf header\n\n\n          var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\n          if (xsrfValue) {\n            requestHeaders[config.xsrfHeaderName] = xsrfValue;\n          }\n        } // Add headers to the request\n\n\n        if ('setRequestHeader' in request) {\n          utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n            if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n              // Remove Content-Type if data is undefined\n              delete requestHeaders[key];\n            } else {\n              // Otherwise add header to the request\n              request.setRequestHeader(key, val);\n            }\n          });\n        } // Add withCredentials to request if needed\n\n\n        if (config.withCredentials) {\n          request.withCredentials = true;\n        } // Add responseType to request if needed\n\n\n        if (config.responseType) {\n          try {\n            request.responseType = config.responseType;\n          } catch (e) {\n            if (request.responseType !== 'json') {\n              throw e;\n            }\n          }\n        } // Handle progress if needed\n\n\n        if (typeof config.onDownloadProgress === 'function') {\n          request.addEventListener('progress', config.onDownloadProgress);\n        } // Not all browsers support upload events\n\n\n        if (typeof config.onUploadProgress === 'function' && request.upload) {\n          request.upload.addEventListener('progress', config.onUploadProgress);\n        }\n\n        if (requestData === undefined) {\n          requestData = null;\n        } // Send the request\n\n\n        request.send(requestData);\n      });\n    };\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(1));\n  /***/\n},\n/* 6 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var enhanceError = __webpack_require__(15);\n  /**\n   * Create an Error with the specified message, config, error code, and response.\n   *\n   * @param {string} message The error message.\n   * @param {Object} config The config.\n   * @param {string} [code] The error code (for example, 'ECONNABORTED').\n   @ @param {Object} [response] The response.\n   * @returns {Error} The created error.\n   */\n\n\n  module.exports = function createError(message, config, code, response) {\n    var error = new Error(message);\n    return enhanceError(error, config, code, response);\n  };\n  /***/\n\n},\n/* 7 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  module.exports = function bind(fn, thisArg) {\n    return function wrap() {\n      var args = new Array(arguments.length);\n\n      for (var i = 0; i < args.length; i++) {\n        args[i] = arguments[i];\n      }\n\n      return fn.apply(thisArg, args);\n    };\n  };\n  /***/\n\n},\n/* 8 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /**\n    * Copyright (c) 2014-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    *\n    */\n    var emptyFunction = __webpack_require__(2);\n    /**\n     * Similar to invariant but only logs a warning if the condition is not met.\n     * This can be used to log issues in development environments in critical\n     * paths. Removing the logging code for production environments will keep the\n     * same logic and follow the same code paths.\n     */\n\n\n    var warning = emptyFunction;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var printWarning = function printWarning(format) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        var argIndex = 0;\n        var message = 'Warning: ' + format.replace(/%s/g, function () {\n          return args[argIndex++];\n        });\n\n        if (typeof console !== 'undefined') {\n          console.error(message);\n        }\n\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      };\n\n      warning = function warning(condition, format) {\n        if (format === undefined) {\n          throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n        }\n\n        if (format.indexOf('Failed Composite propType: ') === 0) {\n          return; // Ignore CompositeComponent proptype check.\n        }\n\n        if (!condition) {\n          for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n            args[_key2 - 2] = arguments[_key2];\n          }\n\n          printWarning.apply(undefined, [format].concat(args));\n        }\n      };\n    }\n\n    module.exports = warning;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(1));\n  /***/\n},\n/* 9 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.withContext = undefined;\n\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  var _axios = __webpack_require__(10);\n\n  var _react = __webpack_require__(34);\n\n  var _react2 = _interopRequireDefault(_react);\n\n  var _propTypes = __webpack_require__(32);\n\n  var _propTypes2 = _interopRequireDefault(_propTypes);\n\n  var _reactDom = __webpack_require__(35);\n\n  var _ramda = __webpack_require__(33);\n\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (!self) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n  }\n  /**\n   * @constant includeMap\n   * @type {Object}\n   */\n\n\n  var includeMap = [{\n    extensions: ['js'],\n    tag: 'script',\n    attrs: {\n      type: 'text/javascript'\n    }\n  }, {\n    extensions: ['css'],\n    tag: 'style',\n    attrs: {}\n  }];\n  /**\n   * @constant defaultContextTypes\n   * @type {Object}\n   */\n\n  var defaultContextTypes = {\n    router: _propTypes2.default.object\n  };\n  /**\n   * @method throwError\n   * @param {String} message\n   * @throws {Error}\n   * @return {void}\n   */\n\n  var throwError = function throwError(message) {\n    throw new Error('ReactShadow: ' + message + '.');\n  };\n  /**\n   * @method fetchInclude\n   * @param {String} document\n   * @return {Promise}\n   */\n\n\n  var fetchInclude = (0, _ramda.memoize)(function (document) {\n    return new Promise(function (resolve) {\n      (0, _axios.get)(document).then(function (response) {\n        return response.data;\n      }).then(resolve).catch(function () {\n        return resolve('');\n      });\n    });\n  });\n  /**\n   * @method withContext\n   * @param {Object} contextTypes\n   * @return {ShadowDOM}\n   */\n\n  var withContext = exports.withContext = function withContext(contextTypes) {\n    var _class2, _temp3;\n    /**\n     * @method createContextProvider\n     * @param {Object} context\n     * @return {ContextProvider}\n     */\n\n\n    var createContextProvider = function createContextProvider(context) {\n      var _class, _temp;\n      /**\n       * @class ContextProvider\n       * @extends {Component}\n       */\n\n\n      return _temp = _class = function (_PureComponent) {\n        _inherits(ContextProvider, _PureComponent);\n\n        function ContextProvider() {\n          _classCallCheck(this, ContextProvider);\n\n          return _possibleConstructorReturn(this, (ContextProvider.__proto__ || Object.getPrototypeOf(ContextProvider)).apply(this, arguments));\n        }\n\n        _createClass(ContextProvider, [{\n          key: 'getChildContext',\n\n          /**\n           * @method getChildContext\n           * @return {Object}\n           */\n\n          /**\n           * @constant propTypes\n           * @type {Object}\n           */\n          value: function getChildContext() {\n            return context;\n          }\n          /**\n           * @method componentDidCatch\n           * @param {String} error\n           * @return {void}\n           */\n\n          /**\n           * @constant childContextTypes\n           * @type {Object}\n           */\n\n        }, {\n          key: 'componentDidCatch',\n          value: function componentDidCatch(error) {\n            throwError(error);\n          }\n          /**\n           * @method render\n           * @return {XML}\n           */\n\n        }, {\n          key: 'render',\n          value: function render() {\n            return this.props.children;\n          }\n        }]);\n\n        return ContextProvider;\n      }(_react.PureComponent), _class.propTypes = {\n        children: _propTypes2.default.node.isRequired\n      }, _class.childContextTypes = contextTypes, _temp;\n    };\n    /**\n     * @class ShadowDOM\n     * @extends Component\n     */\n\n\n    return _temp3 = _class2 = function (_Component) {\n      _inherits(ShadowDOM, _Component);\n\n      function ShadowDOM() {\n        var _ref;\n\n        var _temp2, _this2, _ret;\n\n        _classCallCheck(this, ShadowDOM);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp2 = (_this2 = _possibleConstructorReturn(this, (_ref = ShadowDOM.__proto__ || Object.getPrototypeOf(ShadowDOM)).call.apply(_ref, [this].concat(args))), _this2), _this2.state = {\n          resolving: false\n        }, _this2.ContextProvider = createContextProvider(_this2.context), _this2.WrappedComponent = _this2.props.children, _temp2), _possibleConstructorReturn(_this2, _ret);\n      }\n      /**\n       * @constant contextTypes\n       * @type {Object}\n       */\n\n      /**\n       * @constant propTypes\n       * @type {Object}\n       */\n\n      /**\n       * @constant defaultProps\n       * @type {Object}\n       */\n\n      /**\n       * @constant state\n       * @type {Object}\n       */\n\n      /**\n       * @constant ContextProvider\n       * @type {ContextProvider}\n       */\n\n      /**\n       * @constant WrappedComponent\n       * @type {Object}\n       */\n\n\n      _createClass(ShadowDOM, [{\n        key: 'componentDidMount',\n\n        /**\n         * @method componentDidMount\n         * @return {void}\n         */\n        value: function componentDidMount() {\n          var _this3 = this;\n\n          var _props = this.props,\n              mode = _props.boundaryMode,\n              delegatesFocus = _props.delegatesFocus; // Create the shadow root and take the CSS documents from props.\n\n          var node = (0, _reactDom.findDOMNode)(this);\n          var root = node.attachShadow ? node.attachShadow({\n            mode: mode,\n            delegatesFocus: delegatesFocus\n          }) : node.createShadowRoot();\n          var include = [].concat(this.props.include);\n          var container = this.wrapContainer(); // Render the passed in component to the shadow root, and then `setState` if there\n          // are no CSS documents to be resolved.\n\n          (0, _reactDom.render)(container, root);\n          include.length === 0 ? this.setState({\n            root: root\n          }) : (this.setState({\n            root: root,\n            resolving: true\n          }), this.attachIncludes(include).then(function () {\n            return _this3.setState({\n              resolving: false\n            });\n          }));\n        }\n        /**\n         * @method componentDidUpdate\n         * @return {void}\n         */\n\n      }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n          // Updates consist of simply rendering the container element into the shadow root again, as\n          // the `this.wrapContainer()` element contains the passed in component's children.\n          (0, _reactDom.render)(this.wrapContainer(), this.state.root);\n        }\n        /**\n         * @method componentWillUnmount\n         * @return {void}\n         */\n\n      }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n          (0, _reactDom.unmountComponentAtNode)(this.state.root);\n        }\n        /**\n         * @method wrapContainer\n         * @return {Object}\n         */\n\n      }, {\n        key: 'wrapContainer',\n        value: function wrapContainer() {\n          var _this4 = this; // Wrap children in a container if it's an array of children, otherwise simply render the single child\n          // which is a valid `ReactElement` instance.\n\n\n          var children = this.props.children.props.children;\n          var child = children.length ? _react2.default.createElement(this.props.nodeName, null, children) : children;\n          var ContextProvider = this.ContextProvider;\n          /**\n           * @method getChildContext\n           * @return {Object}\n           */\n\n          ContextProvider.prototype.getChildContext = function () {\n            return _this4.context;\n          };\n\n          return _react2.default.createElement(ContextProvider, null, child);\n        }\n        /**\n         * @method attachIncludes\n         * @param include {Array}\n         * @return {void}\n         */\n\n      }, {\n        key: 'attachIncludes',\n        value: function attachIncludes(include) {\n          var _this5 = this; // Group all of the includes by their extension.\n\n\n          var groupedFiles = (0, _ramda.groupBy)(function (file) {\n            return file.extension;\n          })(include.map(function (path) {\n            return {\n              path: path,\n              extension: path.split('.').pop()\n            };\n          }));\n          var includeFiles = Object.keys(groupedFiles).map(function (extension) {\n            var nodeData = includeMap.find(function (model) {\n              return model.extensions.includes(extension);\n            });\n            var files = groupedFiles[extension].map(function (model) {\n              return model.path;\n            });\n            !nodeData && throwError('Files with extension of \"' + extension + '\" are unsupported');\n            var containerElement = document.createElement(nodeData.tag); // Apply all of the attributes defined in the `includeMap` to the node.\n\n            Object.keys(nodeData.attrs).map(function (key) {\n              return containerElement.setAttribute(key, nodeData.attrs[key]);\n            }); // Load each file individually and then concatenate them.\n\n            return Promise.all(files.map(fetchInclude)).then(function (fileData) {\n              containerElement.innerHTML = fileData.reduce(function (xs, fileDatum) {\n                return xs + ' ' + fileDatum;\n              }).trim();\n              containerElement.innerHTML.length && _this5.state.root.appendChild(containerElement);\n            });\n          });\n          return Promise.all(includeFiles);\n        }\n        /**\n         * @method validate\n         * @return {Boolean|void}\n         */\n\n      }, {\n        key: 'validate',\n        value: function validate() {\n          // Ensure that the passed child isn't an array of children.\n          Array.isArray(this.props.children) && throwError('You must pass a single child rather than multiple children');\n\n          if (typeof this.props.children.type !== 'string') {\n            // Ensure that the passed child has a valid node name.\n            throwError('Immediate descendant of <ShadowDOM /> must be a HTML node, rather than a React component');\n          }\n\n          return true;\n        }\n        /**\n         * @method render\n         * @return {XML}\n         */\n\n      }, {\n        key: 'render',\n        value: function render() {\n          var _this6 = this;\n\n          return this.validate() && function () {\n            // Props from the passed component, minus `children` as that's handled by `componentDidMount`.\n            var child = _react.Children.only(_this6.props.children);\n\n            var childProps = (0, _ramda.dissoc)('children', child.props);\n            var className = _this6.state.resolving ? 'resolving' : 'resolved';\n            var classNames = ((childProps.className ? childProps.className : '') + ' ' + className).trim();\n\n            var props = _extends({}, childProps, {\n              className: classNames\n            });\n\n            return _react2.default.createElement(child.type, props);\n          }();\n        }\n      }]);\n\n      return ShadowDOM;\n    }(_react.Component), _class2.contextTypes = contextTypes, _class2.propTypes = {\n      children: _propTypes2.default.node.isRequired,\n      include: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),\n      nodeName: _propTypes2.default.string,\n      boundaryMode: _propTypes2.default.oneOf(['open', 'closed']),\n      delegatesFocus: _propTypes2.default.bool\n    }, _class2.defaultProps = {\n      include: [],\n      nodeName: 'span',\n      boundaryMode: 'open',\n      delegatesFocus: false\n    }, _temp3;\n  };\n\n  exports.default = withContext(defaultContextTypes);\n  /***/\n},\n/* 10 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  module.exports = __webpack_require__(11);\n  /***/\n},\n/* 11 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var utils = __webpack_require__(0);\n\n  var bind = __webpack_require__(7);\n\n  var Axios = __webpack_require__(12);\n  /**\n   * Create an instance of Axios\n   *\n   * @param {Object} defaultConfig The default config for the instance\n   * @return {Axios} A new instance of Axios\n   */\n\n\n  function createInstance(defaultConfig) {\n    var context = new Axios(defaultConfig);\n    var instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance\n\n    utils.extend(instance, Axios.prototype, context); // Copy context to instance\n\n    utils.extend(instance, context);\n    return instance;\n  } // Create the default instance to be exported\n\n\n  var axios = createInstance(); // Expose Axios class to allow class inheritance\n\n  axios.Axios = Axios; // Factory for creating new instances\n\n  axios.create = function create(defaultConfig) {\n    return createInstance(defaultConfig);\n  }; // Expose all/spread\n\n\n  axios.all = function all(promises) {\n    return Promise.all(promises);\n  };\n\n  axios.spread = __webpack_require__(27);\n  module.exports = axios; // Allow use of default import syntax in TypeScript\n\n  module.exports.default = axios;\n  /***/\n},\n/* 12 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var defaults = __webpack_require__(18);\n\n  var utils = __webpack_require__(0);\n\n  var InterceptorManager = __webpack_require__(13);\n\n  var dispatchRequest = __webpack_require__(14);\n\n  var isAbsoluteURL = __webpack_require__(23);\n\n  var combineURLs = __webpack_require__(21);\n  /**\n   * Create a new instance of Axios\n   *\n   * @param {Object} defaultConfig The default config for the instance\n   */\n\n\n  function Axios(defaultConfig) {\n    this.defaults = utils.merge(defaults, defaultConfig);\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n  /**\n   * Dispatch a request\n   *\n   * @param {Object} config The config specific for this request (merged with this.defaults)\n   */\n\n\n  Axios.prototype.request = function request(config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof config === 'string') {\n      config = utils.merge({\n        url: arguments[0]\n      }, arguments[1]);\n    }\n\n    config = utils.merge(defaults, this.defaults, {\n      method: 'get'\n    }, config); // Support baseURL config\n\n    if (config.baseURL && !isAbsoluteURL(config.url)) {\n      config.url = combineURLs(config.baseURL, config.url);\n    } // Hook up interceptors middleware\n\n\n    var chain = [dispatchRequest, undefined];\n    var promise = Promise.resolve(config);\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      chain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      chain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }; // Provide aliases for supported request methods\n\n\n  utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n    /*eslint func-names:0*/\n    Axios.prototype[method] = function (url, config) {\n      return this.request(utils.merge(config || {}, {\n        method: method,\n        url: url\n      }));\n    };\n  });\n  utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n    /*eslint func-names:0*/\n    Axios.prototype[method] = function (url, data, config) {\n      return this.request(utils.merge(config || {}, {\n        method: method,\n        url: url,\n        data: data\n      }));\n    };\n  });\n  module.exports = Axios;\n  /***/\n},\n/* 13 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var utils = __webpack_require__(0);\n\n  function InterceptorManager() {\n    this.handlers = [];\n  }\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n\n\n  InterceptorManager.prototype.use = function use(fulfilled, rejected) {\n    this.handlers.push({\n      fulfilled: fulfilled,\n      rejected: rejected\n    });\n    return this.handlers.length - 1;\n  };\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   */\n\n\n  InterceptorManager.prototype.eject = function eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  };\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   */\n\n\n  InterceptorManager.prototype.forEach = function forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  };\n\n  module.exports = InterceptorManager;\n  /***/\n},\n/* 14 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    var utils = __webpack_require__(0);\n\n    var transformData = __webpack_require__(17);\n    /**\n     * Dispatch a request to the server using whichever adapter\n     * is supported by the current environment.\n     *\n     * @param {object} config The config that is to be used for the request\n     * @returns {Promise} The Promise to be fulfilled\n     */\n\n\n    module.exports = function dispatchRequest(config) {\n      // Ensure headers exist\n      config.headers = config.headers || {}; // Transform request data\n\n      config.data = transformData(config.data, config.headers, config.transformRequest); // Flatten headers\n\n      config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});\n      utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {\n        delete config.headers[method];\n      });\n      var adapter;\n\n      if (typeof config.adapter === 'function') {\n        // For custom adapter support\n        adapter = config.adapter;\n      } else if (typeof XMLHttpRequest !== 'undefined') {\n        // For browsers use XHR adapter\n        adapter = __webpack_require__(5);\n      } else if (typeof process !== 'undefined') {\n        // For node use HTTP adapter\n        adapter = __webpack_require__(5);\n      }\n\n      return Promise.resolve(config) // Wrap synchronous adapter errors and pass configuration\n      .then(adapter).then(function onFulfilled(response) {\n        // Transform response data\n        response.data = transformData(response.data, response.headers, config.transformResponse);\n        return response;\n      }, function onRejected(error) {\n        // Transform response data\n        if (error && error.response) {\n          error.response.data = transformData(error.response.data, error.response.headers, config.transformResponse);\n        }\n\n        return Promise.reject(error);\n      });\n    };\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(1));\n  /***/\n},\n/* 15 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /**\n   * Update an Error with the specified config, error code, and response.\n   *\n   * @param {Error} error The error to update.\n   * @param {Object} config The config.\n   * @param {string} [code] The error code (for example, 'ECONNABORTED').\n   @ @param {Object} [response] The response.\n   * @returns {Error} The error.\n   */\n\n  module.exports = function enhanceError(error, config, code, response) {\n    error.config = config;\n\n    if (code) {\n      error.code = code;\n    }\n\n    error.response = response;\n    return error;\n  };\n  /***/\n\n},\n/* 16 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var createError = __webpack_require__(6);\n  /**\n   * Resolve or reject a Promise based on response status.\n   *\n   * @param {Function} resolve A function that resolves the promise.\n   * @param {Function} reject A function that rejects the promise.\n   * @param {object} response The response.\n   */\n\n\n  module.exports = function settle(resolve, reject, response) {\n    var validateStatus = response.config.validateStatus; // Note: status is not exposed by XDomainRequest\n\n    if (!response.status || !validateStatus || validateStatus(response.status)) {\n      resolve(response);\n    } else {\n      reject(createError('Request failed with status code ' + response.status, response.config, null, response));\n    }\n  };\n  /***/\n\n},\n/* 17 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var utils = __webpack_require__(0);\n  /**\n   * Transform the data for a request or a response\n   *\n   * @param {Object|String} data The data to be transformed\n   * @param {Array} headers The headers for the request or response\n   * @param {Array|Function} fns A single function or Array of functions\n   * @returns {*} The resulting transformed data\n   */\n\n\n  module.exports = function transformData(data, headers, fns) {\n    /*eslint no-param-reassign:0*/\n    utils.forEach(fns, function transform(fn) {\n      data = fn(data, headers);\n    });\n    return data;\n  };\n  /***/\n\n},\n/* 18 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var utils = __webpack_require__(0);\n\n  var normalizeHeaderName = __webpack_require__(25);\n\n  var PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\n  var DEFAULT_CONTENT_TYPE = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n\n  function setContentTypeIfUnset(headers, value) {\n    if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n      headers['Content-Type'] = value;\n    }\n  }\n\n  module.exports = {\n    transformRequest: [function transformRequest(data, headers) {\n      normalizeHeaderName(headers, 'Content-Type');\n\n      if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n        return data;\n      }\n\n      if (utils.isArrayBufferView(data)) {\n        return data.buffer;\n      }\n\n      if (utils.isURLSearchParams(data)) {\n        setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n        return data.toString();\n      }\n\n      if (utils.isObject(data)) {\n        setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n        return JSON.stringify(data);\n      }\n\n      return data;\n    }],\n    transformResponse: [function transformResponse(data) {\n      /*eslint no-param-reassign:0*/\n      if (typeof data === 'string') {\n        data = data.replace(PROTECTION_PREFIX, '');\n\n        try {\n          data = JSON.parse(data);\n        } catch (e) {\n          /* Ignore */\n        }\n      }\n\n      return data;\n    }],\n    headers: {\n      common: {\n        'Accept': 'application/json, text/plain, */*'\n      },\n      patch: utils.merge(DEFAULT_CONTENT_TYPE),\n      post: utils.merge(DEFAULT_CONTENT_TYPE),\n      put: utils.merge(DEFAULT_CONTENT_TYPE)\n    },\n    timeout: 0,\n    xsrfCookieName: 'XSRF-TOKEN',\n    xsrfHeaderName: 'X-XSRF-TOKEN',\n    maxContentLength: -1,\n    validateStatus: function validateStatus(status) {\n      return status >= 200 && status < 300;\n    }\n  };\n  /***/\n},\n/* 19 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\"; // btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\n  function E() {\n    this.message = 'String contains an invalid character';\n  }\n\n  E.prototype = new Error();\n  E.prototype.code = 5;\n  E.prototype.name = 'InvalidCharacterError';\n\n  function btoa(input) {\n    var str = String(input);\n    var output = '';\n\n    for ( // initialize result and counter\n    var block, charCode, idx = 0, map = chars; // if the next str index does not exist:\n    //   change the mapping table to \"=\"\n    //   check if d has no fractional digits\n    str.charAt(idx | 0) || (map = '=', idx % 1); // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n    output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n      charCode = str.charCodeAt(idx += 3 / 4);\n\n      if (charCode > 0xFF) {\n        throw new E();\n      }\n\n      block = block << 8 | charCode;\n    }\n\n    return output;\n  }\n\n  module.exports = btoa;\n  /***/\n},\n/* 20 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var utils = __webpack_require__(0);\n\n  function encode(val) {\n    return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n  }\n  /**\n   * Build a URL by appending params to the end\n   *\n   * @param {string} url The base of the url (e.g., http://www.google.com)\n   * @param {object} [params] The params to be appended\n   * @returns {string} The formatted url\n   */\n\n\n  module.exports = function buildURL(url, params, paramsSerializer) {\n    /*eslint no-param-reassign:0*/\n    if (!params) {\n      return url;\n    }\n\n    var serializedParams;\n\n    if (paramsSerializer) {\n      serializedParams = paramsSerializer(params);\n    } else if (utils.isURLSearchParams(params)) {\n      serializedParams = params.toString();\n    } else {\n      var parts = [];\n      utils.forEach(params, function serialize(val, key) {\n        if (val === null || typeof val === 'undefined') {\n          return;\n        }\n\n        if (utils.isArray(val)) {\n          key = key + '[]';\n        }\n\n        if (!utils.isArray(val)) {\n          val = [val];\n        }\n\n        utils.forEach(val, function parseValue(v) {\n          if (utils.isDate(v)) {\n            v = v.toISOString();\n          } else if (utils.isObject(v)) {\n            v = JSON.stringify(v);\n          }\n\n          parts.push(encode(key) + '=' + encode(v));\n        });\n      });\n      serializedParams = parts.join('&');\n    }\n\n    if (serializedParams) {\n      url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n    }\n\n    return url;\n  };\n  /***/\n\n},\n/* 21 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /**\n   * Creates a new URL by combining the specified URLs\n   *\n   * @param {string} baseURL The base URL\n   * @param {string} relativeURL The relative URL\n   * @returns {string} The combined URL\n   */\n\n  module.exports = function combineURLs(baseURL, relativeURL) {\n    return baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '');\n  };\n  /***/\n\n},\n/* 22 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var utils = __webpack_require__(0);\n\n  module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs support document.cookie\n  function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        var cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n      read: function read(name) {\n        var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return match ? decodeURIComponent(match[3]) : null;\n      },\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  }() : // Non standard browser env (web workers, react-native) lack needed support.\n  function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() {\n        return null;\n      },\n      remove: function remove() {}\n    };\n  }();\n  /***/\n},\n/* 23 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /**\n   * Determines whether the specified URL is absolute\n   *\n   * @param {string} url The URL to test\n   * @returns {boolean} True if the specified URL is absolute, otherwise false\n   */\n\n  module.exports = function isAbsoluteURL(url) {\n    // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n    // by any combination of letters, digits, plus, period, or hyphen.\n    return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n  };\n  /***/\n\n},\n/* 24 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var utils = __webpack_require__(0);\n\n  module.exports = utils.isStandardBrowserEnv() ? // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n  function standardBrowserEnv() {\n    var msie = /(msie|trident)/i.test(navigator.userAgent);\n    var urlParsingNode = document.createElement('a');\n    var originURL;\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n\n    function resolveURL(url) {\n      var href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href); // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n\n    return function isURLSameOrigin(requestURL) {\n      var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;\n      return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n    };\n  }() : // Non standard browser envs (web workers, react-native) lack needed support.\n  function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  }();\n  /***/\n},\n/* 25 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var utils = __webpack_require__(0);\n\n  module.exports = function normalizeHeaderName(headers, normalizedName) {\n    utils.forEach(headers, function processHeader(value, name) {\n      if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n        headers[normalizedName] = value;\n        delete headers[name];\n      }\n    });\n  };\n  /***/\n\n},\n/* 26 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var utils = __webpack_require__(0);\n  /**\n   * Parse headers into an object\n   *\n   * ```\n   * Date: Wed, 27 Aug 2014 08:58:49 GMT\n   * Content-Type: application/json\n   * Connection: keep-alive\n   * Transfer-Encoding: chunked\n   * ```\n   *\n   * @param {String} headers Headers needing to be parsed\n   * @returns {Object} Headers parsed into an object\n   */\n\n\n  module.exports = function parseHeaders(headers) {\n    var parsed = {};\n    var key;\n    var val;\n    var i;\n\n    if (!headers) {\n      return parsed;\n    }\n\n    utils.forEach(headers.split('\\n'), function parser(line) {\n      i = line.indexOf(':');\n      key = utils.trim(line.substr(0, i)).toLowerCase();\n      val = utils.trim(line.substr(i + 1));\n\n      if (key) {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    });\n    return parsed;\n  };\n  /***/\n\n},\n/* 27 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /**\n   * Syntactic sugar for invoking a function and expanding an array for arguments.\n   *\n   * Common use case would be to use `Function.prototype.apply`.\n   *\n   *  ```js\n   *  function f(x, y, z) {}\n   *  var args = [1, 2, 3];\n   *  f.apply(null, args);\n   *  ```\n   *\n   * With `spread` this example can be re-written.\n   *\n   *  ```js\n   *  spread(function(x, y, z) {})([1, 2, 3]);\n   *  ```\n   *\n   * @param {Function} callback\n   * @returns {Function}\n   */\n\n  module.exports = function spread(callback) {\n    return function wrap(arr) {\n      return callback.apply(null, arr);\n    };\n  };\n  /***/\n\n},\n/* 28 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /*\n  object-assign\n  (c) Sindre Sorhus\n  @license MIT\n  */\n\n  /* eslint-disable no-unused-vars */\n\n  var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\n  function toObject(val) {\n    if (val === null || val === undefined) {\n      throw new TypeError('Object.assign cannot be called with null or undefined');\n    }\n\n    return Object(val);\n  }\n\n  function shouldUseNative() {\n    try {\n      if (!Object.assign) {\n        return false;\n      } // Detect buggy property enumeration order in older V8 versions.\n      // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n      var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n      test1[5] = 'de';\n\n      if (Object.getOwnPropertyNames(test1)[0] === '5') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test2 = {};\n\n      for (var i = 0; i < 10; i++) {\n        test2['_' + String.fromCharCode(i)] = i;\n      }\n\n      var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n        return test2[n];\n      });\n\n      if (order2.join('') !== '0123456789') {\n        return false;\n      } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n      var test3 = {};\n      'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n        test3[letter] = letter;\n      });\n\n      if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n        return false;\n      }\n\n      return true;\n    } catch (err) {\n      // We don't expect any of the above to throw, but better to be safe.\n      return false;\n    }\n  }\n\n  module.exports = shouldUseNative() ? Object.assign : function (target, source) {\n    var from;\n    var to = toObject(target);\n    var symbols;\n\n    for (var s = 1; s < arguments.length; s++) {\n      from = Object(arguments[s]);\n\n      for (var key in from) {\n        if (hasOwnProperty.call(from, key)) {\n          to[key] = from[key];\n        }\n      }\n\n      if (getOwnPropertySymbols) {\n        symbols = getOwnPropertySymbols(from);\n\n        for (var i = 0; i < symbols.length; i++) {\n          if (propIsEnumerable.call(from, symbols[i])) {\n            to[symbols[i]] = from[symbols[i]];\n          }\n        }\n      }\n    }\n\n    return to;\n  };\n  /***/\n},\n/* 29 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    if (process.env.NODE_ENV !== 'production') {\n      var invariant = __webpack_require__(3);\n\n      var warning = __webpack_require__(8);\n\n      var ReactPropTypesSecret = __webpack_require__(4);\n\n      var loggedTypeFailures = {};\n    }\n    /**\n     * Assert that the values match with the type specs.\n     * Error messages are memorized and will only be shown once.\n     *\n     * @param {object} typeSpecs Map of name to a ReactPropType\n     * @param {object} values Runtime values that need to be type-checked\n     * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n     * @param {string} componentName Name of the component for error messages.\n     * @param {?Function} getStack Returns the component stack.\n     * @private\n     */\n\n\n    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n      if (process.env.NODE_ENV !== 'production') {\n        for (var typeSpecName in typeSpecs) {\n          if (typeSpecs.hasOwnProperty(typeSpecName)) {\n            var error; // Prop type validation may throw. In case they do, we don't want to\n            // fail the render phase where it didn't fail before. So we log it.\n            // After these have been cleaned up, we'll let them throw.\n\n            try {\n              // This is intentionally an invariant that gets caught. It's the same\n              // behavior as without this statement except with a better message.\n              invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, _typeof(typeSpecs[typeSpecName]));\n              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n            } catch (ex) {\n              error = ex;\n            }\n\n            warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error === 'undefined' ? 'undefined' : _typeof(error));\n\n            if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n              // Only monitor this failure once because there tends to be a lot of the\n              // same error.\n              loggedTypeFailures[error.message] = true;\n              var stack = getStack ? getStack() : '';\n              warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n            }\n          }\n        }\n      }\n    }\n\n    module.exports = checkPropTypes;\n    /* WEBPACK VAR INJECTION */\n  }).call(exports, __webpack_require__(1));\n  /***/\n},\n/* 30 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var emptyFunction = __webpack_require__(2);\n\n  var invariant = __webpack_require__(3);\n\n  var ReactPropTypesSecret = __webpack_require__(4);\n\n  module.exports = function () {\n    function shim(props, propName, componentName, location, propFullName, secret) {\n      if (secret === ReactPropTypesSecret) {\n        // It is still safe when called from React.\n        return;\n      }\n\n      invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    }\n\n    ;\n    shim.isRequired = shim;\n\n    function getShim() {\n      return shim;\n    }\n\n    ; // Important!\n    // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n    var ReactPropTypes = {\n      array: shim,\n      bool: shim,\n      func: shim,\n      number: shim,\n      object: shim,\n      string: shim,\n      symbol: shim,\n      any: shim,\n      arrayOf: getShim,\n      element: shim,\n      instanceOf: getShim,\n      node: shim,\n      objectOf: getShim,\n      oneOf: getShim,\n      oneOfType: getShim,\n      shape: getShim,\n      exact: getShim\n    };\n    ReactPropTypes.checkPropTypes = emptyFunction;\n    ReactPropTypes.PropTypes = ReactPropTypes;\n    return ReactPropTypes;\n  };\n  /***/\n\n},\n/* 31 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    /**\n    * Copyright (c) 2013-present, Facebook, Inc.\n    *\n    * This source code is licensed under the MIT license found in the\n    * LICENSE file in the root directory of this source tree.\n    */\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    var emptyFunction = __webpack_require__(2);\n\n    var invariant = __webpack_require__(3);\n\n    var warning = __webpack_require__(8);\n\n    var assign = __webpack_require__(28);\n\n    var ReactPropTypesSecret = __webpack_require__(4);\n\n    var checkPropTypes = __webpack_require__(29);\n\n    module.exports = function (isValidElement, throwOnDirectAccess) {\n      /* global Symbol */\n      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n      var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n      /**\n       * Returns the iterator method function contained on the iterable object.\n       *\n       * Be sure to invoke the function with the iterable as context:\n       *\n       *     var iteratorFn = getIteratorFn(myIterable);\n       *     if (iteratorFn) {\n       *       var iterator = iteratorFn.call(myIterable);\n       *       ...\n       *     }\n       *\n       * @param {?object} maybeIterable\n       * @return {?function}\n       */\n\n      function getIteratorFn(maybeIterable) {\n        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n\n        if (typeof iteratorFn === 'function') {\n          return iteratorFn;\n        }\n      }\n      /**\n       * Collection of methods that allow declaration and validation of props that are\n       * supplied to React components. Example usage:\n       *\n       *   var Props = require('ReactPropTypes');\n       *   var MyArticle = React.createClass({\n       *     propTypes: {\n       *       // An optional string prop named \"description\".\n       *       description: Props.string,\n       *\n       *       // A required enum prop named \"category\".\n       *       category: Props.oneOf(['News','Photos']).isRequired,\n       *\n       *       // A prop named \"dialog\" that requires an instance of Dialog.\n       *       dialog: Props.instanceOf(Dialog).isRequired\n       *     },\n       *     render: function() { ... }\n       *   });\n       *\n       * A more formal specification of how these methods are used:\n       *\n       *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n       *   decl := ReactPropTypes.{type}(.isRequired)?\n       *\n       * Each and every declaration produces a function with the same signature. This\n       * allows the creation of custom validation functions. For example:\n       *\n       *  var MyLink = React.createClass({\n       *    propTypes: {\n       *      // An optional string or URI prop named \"href\".\n       *      href: function(props, propName, componentName) {\n       *        var propValue = props[propName];\n       *        if (propValue != null && typeof propValue !== 'string' &&\n       *            !(propValue instanceof URI)) {\n       *          return new Error(\n       *            'Expected a string or an URI for ' + propName + ' in ' +\n       *            componentName\n       *          );\n       *        }\n       *      }\n       *    },\n       *    render: function() {...}\n       *  });\n       *\n       * @internal\n       */\n\n\n      var ANONYMOUS = '<<anonymous>>'; // Important!\n      // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n\n      var ReactPropTypes = {\n        array: createPrimitiveTypeChecker('array'),\n        bool: createPrimitiveTypeChecker('boolean'),\n        func: createPrimitiveTypeChecker('function'),\n        number: createPrimitiveTypeChecker('number'),\n        object: createPrimitiveTypeChecker('object'),\n        string: createPrimitiveTypeChecker('string'),\n        symbol: createPrimitiveTypeChecker('symbol'),\n        any: createAnyTypeChecker(),\n        arrayOf: createArrayOfTypeChecker,\n        element: createElementTypeChecker(),\n        instanceOf: createInstanceTypeChecker,\n        node: createNodeChecker(),\n        objectOf: createObjectOfTypeChecker,\n        oneOf: createEnumTypeChecker,\n        oneOfType: createUnionTypeChecker,\n        shape: createShapeTypeChecker,\n        exact: createStrictShapeTypeChecker\n      };\n      /**\n       * inlined Object.is polyfill to avoid requiring consumers ship their own\n       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n       */\n\n      /*eslint-disable no-self-compare*/\n\n      function is(x, y) {\n        // SameValue algorithm\n        if (x === y) {\n          // Steps 1-5, 7-10\n          // Steps 6.b-6.e: +0 != -0\n          return x !== 0 || 1 / x === 1 / y;\n        } else {\n          // Step 6.a: NaN == NaN\n          return x !== x && y !== y;\n        }\n      }\n      /*eslint-enable no-self-compare*/\n\n      /**\n       * We use an Error-like object for backward compatibility as people may call\n       * PropTypes directly and inspect their output. However, we don't use real\n       * Errors anymore. We don't inspect their stack anyway, and creating them\n       * is prohibitively expensive if they are created too often, such as what\n       * happens in oneOfType() for any type before the one that matched.\n       */\n\n\n      function PropTypeError(message) {\n        this.message = message;\n        this.stack = '';\n      } // Make `instanceof Error` still work for returned errors.\n\n\n      PropTypeError.prototype = Error.prototype;\n\n      function createChainableTypeChecker(validate) {\n        if (process.env.NODE_ENV !== 'production') {\n          var manualPropTypeCallCache = {};\n          var manualPropTypeWarningCount = 0;\n        }\n\n        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n          componentName = componentName || ANONYMOUS;\n          propFullName = propFullName || propName;\n\n          if (secret !== ReactPropTypesSecret) {\n            if (throwOnDirectAccess) {\n              // New behavior only for users of `prop-types` package\n              invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n            } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n              // Old behavior for people using React.PropTypes\n              var cacheKey = componentName + ':' + propName;\n\n              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors\n              manualPropTypeWarningCount < 3) {\n                warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);\n                manualPropTypeCallCache[cacheKey] = true;\n                manualPropTypeWarningCount++;\n              }\n            }\n          }\n\n          if (props[propName] == null) {\n            if (isRequired) {\n              if (props[propName] === null) {\n                return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n              }\n\n              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n            }\n\n            return null;\n          } else {\n            return validate(props, propName, componentName, location, propFullName);\n          }\n        }\n\n        var chainedCheckType = checkType.bind(null, false);\n        chainedCheckType.isRequired = checkType.bind(null, true);\n        return chainedCheckType;\n      }\n\n      function createPrimitiveTypeChecker(expectedType) {\n        function validate(props, propName, componentName, location, propFullName, secret) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== expectedType) {\n            // `propValue` being instance of, say, date/regexp, pass the 'object'\n            // check, but we can offer a more precise error message here rather than\n            // 'of type `object`'.\n            var preciseType = getPreciseType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createAnyTypeChecker() {\n        return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n      }\n\n      function createArrayOfTypeChecker(typeChecker) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (typeof typeChecker !== 'function') {\n            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n          }\n\n          var propValue = props[propName];\n\n          if (!Array.isArray(propValue)) {\n            var propType = getPropType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n          }\n\n          for (var i = 0; i < propValue.length; i++) {\n            var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n\n            if (error instanceof Error) {\n              return error;\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createElementTypeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n\n          if (!isValidElement(propValue)) {\n            var propType = getPropType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createInstanceTypeChecker(expectedClass) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (!(props[propName] instanceof expectedClass)) {\n            var expectedClassName = expectedClass.name || ANONYMOUS;\n            var actualClassName = getClassName(props[propName]);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createEnumTypeChecker(expectedValues) {\n        if (!Array.isArray(expectedValues)) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n          return emptyFunction.thatReturnsNull;\n        }\n\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n\n          for (var i = 0; i < expectedValues.length; i++) {\n            if (is(propValue, expectedValues[i])) {\n              return null;\n            }\n          }\n\n          var valuesString = JSON.stringify(expectedValues);\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createObjectOfTypeChecker(typeChecker) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (typeof typeChecker !== 'function') {\n            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n          }\n\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n          }\n\n          for (var key in propValue) {\n            if (propValue.hasOwnProperty(key)) {\n              var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n              if (error instanceof Error) {\n                return error;\n              }\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createUnionTypeChecker(arrayOfTypeCheckers) {\n        if (!Array.isArray(arrayOfTypeCheckers)) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n          return emptyFunction.thatReturnsNull;\n        }\n\n        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n          var checker = arrayOfTypeCheckers[i];\n\n          if (typeof checker !== 'function') {\n            warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);\n            return emptyFunction.thatReturnsNull;\n          }\n        }\n\n        function validate(props, propName, componentName, location, propFullName) {\n          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n            var checker = arrayOfTypeCheckers[i];\n\n            if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n              return null;\n            }\n          }\n\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createNodeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (!isNode(props[propName])) {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createShapeTypeChecker(shapeTypes) {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n          }\n\n          for (var key in shapeTypes) {\n            var checker = shapeTypes[key];\n\n            if (!checker) {\n              continue;\n            }\n\n            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n            if (error) {\n              return error;\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function createStrictShapeTypeChecker(shapeTypes) {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n          } // We need to check all keys in case some are required but missing from\n          // props.\n\n\n          var allKeys = assign({}, props[propName], shapeTypes);\n\n          for (var key in allKeys) {\n            var checker = shapeTypes[key];\n\n            if (!checker) {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n            }\n\n            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n\n            if (error) {\n              return error;\n            }\n          }\n\n          return null;\n        }\n\n        return createChainableTypeChecker(validate);\n      }\n\n      function isNode(propValue) {\n        switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {\n          case 'number':\n          case 'string':\n          case 'undefined':\n            return true;\n\n          case 'boolean':\n            return !propValue;\n\n          case 'object':\n            if (Array.isArray(propValue)) {\n              return propValue.every(isNode);\n            }\n\n            if (propValue === null || isValidElement(propValue)) {\n              return true;\n            }\n\n            var iteratorFn = getIteratorFn(propValue);\n\n            if (iteratorFn) {\n              var iterator = iteratorFn.call(propValue);\n              var step;\n\n              if (iteratorFn !== propValue.entries) {\n                while (!(step = iterator.next()).done) {\n                  if (!isNode(step.value)) {\n                    return false;\n                  }\n                }\n              } else {\n                // Iterator will provide entry [k,v] tuples rather than values.\n                while (!(step = iterator.next()).done) {\n                  var entry = step.value;\n\n                  if (entry) {\n                    if (!isNode(entry[1])) {\n                      return false;\n                    }\n                  }\n                }\n              }\n            } else {\n              return false;\n            }\n\n            return true;\n\n          default:\n            return false;\n        }\n      }\n\n      function isSymbol(propType, propValue) {\n        // Native Symbol.\n        if (propType === 'symbol') {\n          return true;\n        } // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n\n\n        if (propValue['@@toStringTag'] === 'Symbol') {\n          return true;\n        } // Fallback for non-spec compliant Symbols which are polyfilled.\n\n\n        if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n          return true;\n        }\n\n        return false;\n      } // Equivalent of `typeof` but with special handling for array and regexp.\n\n\n      function getPropType(propValue) {\n        var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);\n\n        if (Array.isArray(propValue)) {\n          return 'array';\n        }\n\n        if (propValue instanceof RegExp) {\n          // Old webkits (at least until Android 4.0) return 'function' rather than\n          // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n          // passes PropTypes.object.\n          return 'object';\n        }\n\n        if (isSymbol(propType, propValue)) {\n          return 'symbol';\n        }\n\n        return propType;\n      } // This handles more types than `getPropType`. Only used for error messages.\n      // See `createPrimitiveTypeChecker`.\n\n\n      function getPreciseType(propValue) {\n        if (typeof propValue === 'undefined' || propValue === null) {\n          return '' + propValue;\n        }\n\n        var propType = getPropType(propValue);\n\n        if (propType === 'object') {\n          if (propValue instanceof Date) {\n            return 'date';\n          } else if (propValue instanceof RegExp) {\n            return 'regexp';\n          }\n        }\n\n        return propType;\n      } // Returns a string that is postfixed to a warning about an invalid type.\n      // For example, \"undefined\" or \"of type array\"\n\n\n      function getPostfixForTypeWarning(value) {\n        var type = getPreciseType(value);\n\n        switch (type) {\n          case 'array':\n          case 'object':\n            return 'an ' + type;\n\n          case 'boolean':\n          case 'date':\n          case 'regexp':\n            return 'a ' + type;\n\n          default:\n            return type;\n        }\n      } // Returns class name of the object, if any.\n\n\n      function getClassName(propValue) {\n        if (!propValue.constructor || !propValue.constructor.name) {\n          return ANONYMOUS;\n        }\n\n        return propValue.constructor.name;\n      }\n\n      ReactPropTypes.checkPropTypes = checkPropTypes;\n      ReactPropTypes.PropTypes = ReactPropTypes;\n      return ReactPropTypes;\n    };\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(1));\n  /***/\n},\n/* 32 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n  /* WEBPACK VAR INJECTION */\n\n  (function (process) {\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n    /**\n     * Copyright (c) 2013-present, Facebook, Inc.\n     *\n     * This source code is licensed under the MIT license found in the\n     * LICENSE file in the root directory of this source tree.\n     */\n\n\n    if (process.env.NODE_ENV !== 'production') {\n      var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n\n      var isValidElement = function isValidElement(object) {\n        return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n      }; // By explicitly using `prop-types` you are opting into new development behavior.\n      // http://fb.me/prop-types-in-prod\n\n\n      var throwOnDirectAccess = true;\n      module.exports = __webpack_require__(31)(isValidElement, throwOnDirectAccess);\n    } else {\n      // By explicitly using `prop-types` you are opting into new production behavior.\n      // http://fb.me/prop-types-in-prod\n      module.exports = __webpack_require__(30)();\n    }\n    /* WEBPACK VAR INJECTION */\n\n  }).call(exports, __webpack_require__(1));\n  /***/\n},\n/* 33 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  \"use strict\";\n\n  var __WEBPACK_AMD_DEFINE_RESULT__;\n\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }; //  Ramda v0.22.1\n  //  https://github.com/ramda/ramda\n  //  (c) 2013-2016 Scott Sauyet, Michael Hurley, and David Chambers\n  //  Ramda may be freely distributed under the MIT license.\n\n\n  ;\n  (function () {\n    'use strict';\n    /**\n       * A special placeholder value used to specify \"gaps\" within curried functions,\n       * allowing partial application of any combination of arguments, regardless of\n       * their positions.\n       *\n       * If `g` is a curried ternary function and `_` is `R.__`, the following are\n       * equivalent:\n       *\n       *   - `g(1, 2, 3)`\n       *   - `g(_, 2, 3)(1)`\n       *   - `g(_, _, 3)(1)(2)`\n       *   - `g(_, _, 3)(1, 2)`\n       *   - `g(_, 2, _)(1, 3)`\n       *   - `g(_, 2)(1)(3)`\n       *   - `g(_, 2)(1, 3)`\n       *   - `g(_, 2)(_, 3)(1)`\n       *\n       * @constant\n       * @memberOf R\n       * @since v0.6.0\n       * @category Function\n       * @example\n       *\n       *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n       *      greet('Alice'); //=> 'Hello, Alice!'\n       */\n\n    var __ = {\n      '@@functional/placeholder': true\n    };\n    /* eslint-disable no-unused-vars */\n\n    var _arity = function _arity(n, fn) {\n      /* eslint-disable no-unused-vars */\n      switch (n) {\n        case 0:\n          return function () {\n            return fn.apply(this, arguments);\n          };\n\n        case 1:\n          return function (a0) {\n            return fn.apply(this, arguments);\n          };\n\n        case 2:\n          return function (a0, a1) {\n            return fn.apply(this, arguments);\n          };\n\n        case 3:\n          return function (a0, a1, a2) {\n            return fn.apply(this, arguments);\n          };\n\n        case 4:\n          return function (a0, a1, a2, a3) {\n            return fn.apply(this, arguments);\n          };\n\n        case 5:\n          return function (a0, a1, a2, a3, a4) {\n            return fn.apply(this, arguments);\n          };\n\n        case 6:\n          return function (a0, a1, a2, a3, a4, a5) {\n            return fn.apply(this, arguments);\n          };\n\n        case 7:\n          return function (a0, a1, a2, a3, a4, a5, a6) {\n            return fn.apply(this, arguments);\n          };\n\n        case 8:\n          return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n            return fn.apply(this, arguments);\n          };\n\n        case 9:\n          return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n            return fn.apply(this, arguments);\n          };\n\n        case 10:\n          return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n            return fn.apply(this, arguments);\n          };\n\n        default:\n          throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n      }\n    };\n\n    var _arrayFromIterator = function _arrayFromIterator(iter) {\n      var list = [];\n      var next;\n\n      while (!(next = iter.next()).done) {\n        list.push(next.value);\n      }\n\n      return list;\n    };\n\n    var _arrayOf = function _arrayOf() {\n      return Array.prototype.slice.call(arguments);\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n      return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n      return function () {\n        return !f.apply(this, arguments);\n      };\n    };\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n\n\n    var _concat = function _concat(set1, set2) {\n      set1 = set1 || [];\n      set2 = set2 || [];\n      var idx;\n      var len1 = set1.length;\n      var len2 = set2.length;\n      var result = [];\n      idx = 0;\n\n      while (idx < len1) {\n        result[result.length] = set1[idx];\n        idx += 1;\n      }\n\n      idx = 0;\n\n      while (idx < len2) {\n        result[result.length] = set2[idx];\n        idx += 1;\n      }\n\n      return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n      var idx = 0;\n      var len = list.length;\n\n      while (idx < len) {\n        if (pred(x, list[idx])) {\n          return true;\n        }\n\n        idx += 1;\n      }\n\n      return false;\n    };\n\n    var _filter = function _filter(fn, list) {\n      var idx = 0;\n      var len = list.length;\n      var result = [];\n\n      while (idx < len) {\n        if (fn(list[idx])) {\n          result[result.length] = list[idx];\n        }\n\n        idx += 1;\n      }\n\n      return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n      return {\n        '@@transducer/value': x,\n        '@@transducer/reduced': true\n      };\n    }; // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n\n\n    var _functionName = function _functionName(f) {\n      // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n      var match = String(f).match(/^function (\\w*)/);\n      return match == null ? '' : match[1];\n    };\n\n    var _has = function _has(prop, obj) {\n      return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n      return x;\n    };\n\n    var _isArguments = function () {\n      var toString = Object.prototype.toString;\n      return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n        return toString.call(x) === '[object Arguments]';\n      } : function _isArguments(x) {\n        return _has('callee', x);\n      };\n    }();\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n\n\n    var _isArray = Array.isArray || function _isArray(val) {\n      return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    var _isFunction = function _isFunction(x) {\n      return Object.prototype.toString.call(x) === '[object Function]';\n    };\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n\n\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n      return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n      return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isObject = function _isObject(x) {\n      return Object.prototype.toString.call(x) === '[object Object]';\n    };\n\n    var _isPlaceholder = function _isPlaceholder(a) {\n      return a != null && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object' && a['@@functional/placeholder'] === true;\n    };\n\n    var _isRegExp = function _isRegExp(x) {\n      return Object.prototype.toString.call(x) === '[object RegExp]';\n    };\n\n    var _isString = function _isString(x) {\n      return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n      return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, functor) {\n      var idx = 0;\n      var len = functor.length;\n      var result = Array(len);\n\n      while (idx < len) {\n        result[idx] = fn(functor[idx]);\n        idx += 1;\n      }\n\n      return result;\n    }; // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\n    var _objectAssign = function _objectAssign(target) {\n      if (target == null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n      var idx = 1;\n      var length = arguments.length;\n\n      while (idx < length) {\n        var source = arguments[idx];\n\n        if (source != null) {\n          for (var nextKey in source) {\n            if (_has(nextKey, source)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n\n        idx += 1;\n      }\n\n      return output;\n    };\n\n    var _of = function _of(x) {\n      return [x];\n    };\n\n    var _pipe = function _pipe(f, g) {\n      return function () {\n        return g.call(this, f.apply(this, arguments));\n      };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n      return function () {\n        var ctx = this;\n        return f.apply(ctx, arguments).then(function (x) {\n          return g.call(ctx, x);\n        });\n      };\n    }; // \\b matches word boundary; [\\b] matches backspace\n\n\n    var _quote = function _quote(s) {\n      var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n      .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n      return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n      return x && x['@@transducer/reduced'] ? x : {\n        '@@transducer/value': x,\n        '@@transducer/reduced': true\n      };\n    };\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n\n\n    var _slice = function _slice(args, from, to) {\n      switch (arguments.length) {\n        case 1:\n          return _slice(args, 0, args.length);\n\n        case 2:\n          return _slice(args, from, args.length);\n\n        default:\n          var list = [];\n          var idx = 0;\n          var len = Math.max(0, Math.min(args.length, to) - from);\n\n          while (idx < len) {\n            list[idx] = args[from + idx];\n            idx += 1;\n          }\n\n          return list;\n      }\n    };\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n\n\n    var _toISOString = function () {\n      var pad = function pad(n) {\n        return (n < 10 ? '0' : '') + n;\n      };\n\n      return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n        return d.toISOString();\n      } : function _toISOString(d) {\n        return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n      };\n    }();\n\n    var _xfBase = {\n      init: function init() {\n        return this.xf['@@transducer/init']();\n      },\n      result: function result(_result) {\n        return this.xf['@@transducer/result'](_result);\n      }\n    };\n\n    var _xwrap = function () {\n      function XWrap(fn) {\n        this.f = fn;\n      }\n\n      XWrap.prototype['@@transducer/init'] = function () {\n        throw new Error('init not implemented on XWrap');\n      };\n\n      XWrap.prototype['@@transducer/result'] = function (acc) {\n        return acc;\n      };\n\n      XWrap.prototype['@@transducer/step'] = function (acc, x) {\n        return this.f(acc, x);\n      };\n\n      return function _xwrap(fn) {\n        return new XWrap(fn);\n      };\n    }();\n\n    var _aperture = function _aperture(n, list) {\n      var idx = 0;\n      var limit = list.length - (n - 1);\n      var acc = new Array(limit >= 0 ? limit : 0);\n\n      while (idx < limit) {\n        acc[idx] = _slice(list, idx, idx + n);\n        idx += 1;\n      }\n\n      return acc;\n    };\n\n    var _assign = typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it\n     * will default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n\n\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n      return function () {\n        var length = arguments.length;\n\n        if (length === 0) {\n          return fn();\n        }\n\n        var obj = arguments[length - 1];\n        return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n      };\n    };\n    /**\n     * Optimized internal one-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n\n\n    var _curry1 = function _curry1(fn) {\n      return function f1(a) {\n        if (arguments.length === 0 || _isPlaceholder(a)) {\n          return f1;\n        } else {\n          return fn.apply(this, arguments);\n        }\n      };\n    };\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n\n\n    var _curry2 = function _curry2(fn) {\n      return function f2(a, b) {\n        switch (arguments.length) {\n          case 0:\n            return f2;\n\n          case 1:\n            return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n              return fn(a, _b);\n            });\n\n          default:\n            return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n              return fn(_a, b);\n            }) : _isPlaceholder(b) ? _curry1(function (_b) {\n              return fn(a, _b);\n            }) : fn(a, b);\n        }\n      };\n    };\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n\n\n    var _curry3 = function _curry3(fn) {\n      return function f3(a, b, c) {\n        switch (arguments.length) {\n          case 0:\n            return f3;\n\n          case 1:\n            return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n              return fn(a, _b, _c);\n            });\n\n          case 2:\n            return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n              return fn(_a, b, _c);\n            }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n              return fn(a, _b, _c);\n            }) : _curry1(function (_c) {\n              return fn(a, b, _c);\n            });\n\n          default:\n            return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n              return fn(_a, _b, c);\n            }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n              return fn(_a, b, _c);\n            }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n              return fn(a, _b, _c);\n            }) : _isPlaceholder(a) ? _curry1(function (_a) {\n              return fn(_a, b, c);\n            }) : _isPlaceholder(b) ? _curry1(function (_b) {\n              return fn(a, _b, c);\n            }) : _isPlaceholder(c) ? _curry1(function (_c) {\n              return fn(a, b, _c);\n            }) : fn(a, b, c);\n        }\n      };\n    };\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @param {Array} received An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n\n\n    var _curryN = function _curryN(length, received, fn) {\n      return function () {\n        var combined = [];\n        var argsIdx = 0;\n        var left = length;\n        var combinedIdx = 0;\n\n        while (combinedIdx < received.length || argsIdx < arguments.length) {\n          var result;\n\n          if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n            result = received[combinedIdx];\n          } else {\n            result = arguments[argsIdx];\n            argsIdx += 1;\n          }\n\n          combined[combinedIdx] = result;\n\n          if (!_isPlaceholder(result)) {\n            left -= 1;\n          }\n\n          combinedIdx += 1;\n        }\n\n        return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n      };\n    };\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n\n\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n      return function () {\n        var length = arguments.length;\n\n        if (length === 0) {\n          return fn();\n        }\n\n        var obj = arguments[length - 1];\n\n        if (!_isArray(obj)) {\n          var args = _slice(arguments, 0, length - 1);\n\n          if (typeof obj[methodname] === 'function') {\n            return obj[methodname].apply(obj, args);\n          }\n\n          if (_isTransformer(obj)) {\n            var transducer = xf.apply(null, args);\n            return transducer(obj);\n          }\n        }\n\n        return fn.apply(this, arguments);\n      };\n    };\n\n    var _dropLastWhile = function dropLastWhile(pred, list) {\n      var idx = list.length - 1;\n\n      while (idx >= 0 && pred(list[idx])) {\n        idx -= 1;\n      }\n\n      return _slice(list, 0, idx + 1);\n    };\n\n    var _xall = function () {\n      function XAll(f, xf) {\n        this.xf = xf;\n        this.f = f;\n        this.all = true;\n      }\n\n      XAll.prototype['@@transducer/init'] = _xfBase.init;\n\n      XAll.prototype['@@transducer/result'] = function (result) {\n        if (this.all) {\n          result = this.xf['@@transducer/step'](result, true);\n        }\n\n        return this.xf['@@transducer/result'](result);\n      };\n\n      XAll.prototype['@@transducer/step'] = function (result, input) {\n        if (!this.f(input)) {\n          this.all = false;\n          result = _reduced(this.xf['@@transducer/step'](result, false));\n        }\n\n        return result;\n      };\n\n      return _curry2(function _xall(f, xf) {\n        return new XAll(f, xf);\n      });\n    }();\n\n    var _xany = function () {\n      function XAny(f, xf) {\n        this.xf = xf;\n        this.f = f;\n        this.any = false;\n      }\n\n      XAny.prototype['@@transducer/init'] = _xfBase.init;\n\n      XAny.prototype['@@transducer/result'] = function (result) {\n        if (!this.any) {\n          result = this.xf['@@transducer/step'](result, false);\n        }\n\n        return this.xf['@@transducer/result'](result);\n      };\n\n      XAny.prototype['@@transducer/step'] = function (result, input) {\n        if (this.f(input)) {\n          this.any = true;\n          result = _reduced(this.xf['@@transducer/step'](result, true));\n        }\n\n        return result;\n      };\n\n      return _curry2(function _xany(f, xf) {\n        return new XAny(f, xf);\n      });\n    }();\n\n    var _xaperture = function () {\n      function XAperture(n, xf) {\n        this.xf = xf;\n        this.pos = 0;\n        this.full = false;\n        this.acc = new Array(n);\n      }\n\n      XAperture.prototype['@@transducer/init'] = _xfBase.init;\n\n      XAperture.prototype['@@transducer/result'] = function (result) {\n        this.acc = null;\n        return this.xf['@@transducer/result'](result);\n      };\n\n      XAperture.prototype['@@transducer/step'] = function (result, input) {\n        this.store(input);\n        return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n      };\n\n      XAperture.prototype.store = function (input) {\n        this.acc[this.pos] = input;\n        this.pos += 1;\n\n        if (this.pos === this.acc.length) {\n          this.pos = 0;\n          this.full = true;\n        }\n      };\n\n      XAperture.prototype.getCopy = function () {\n        return _concat(_slice(this.acc, this.pos), _slice(this.acc, 0, this.pos));\n      };\n\n      return _curry2(function _xaperture(n, xf) {\n        return new XAperture(n, xf);\n      });\n    }();\n\n    var _xdrop = function () {\n      function XDrop(n, xf) {\n        this.xf = xf;\n        this.n = n;\n      }\n\n      XDrop.prototype['@@transducer/init'] = _xfBase.init;\n      XDrop.prototype['@@transducer/result'] = _xfBase.result;\n\n      XDrop.prototype['@@transducer/step'] = function (result, input) {\n        if (this.n > 0) {\n          this.n -= 1;\n          return result;\n        }\n\n        return this.xf['@@transducer/step'](result, input);\n      };\n\n      return _curry2(function _xdrop(n, xf) {\n        return new XDrop(n, xf);\n      });\n    }();\n\n    var _xdropLast = function () {\n      function XDropLast(n, xf) {\n        this.xf = xf;\n        this.pos = 0;\n        this.full = false;\n        this.acc = new Array(n);\n      }\n\n      XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n\n      XDropLast.prototype['@@transducer/result'] = function (result) {\n        this.acc = null;\n        return this.xf['@@transducer/result'](result);\n      };\n\n      XDropLast.prototype['@@transducer/step'] = function (result, input) {\n        if (this.full) {\n          result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n        }\n\n        this.store(input);\n        return result;\n      };\n\n      XDropLast.prototype.store = function (input) {\n        this.acc[this.pos] = input;\n        this.pos += 1;\n\n        if (this.pos === this.acc.length) {\n          this.pos = 0;\n          this.full = true;\n        }\n      };\n\n      return _curry2(function _xdropLast(n, xf) {\n        return new XDropLast(n, xf);\n      });\n    }();\n\n    var _xdropRepeatsWith = function () {\n      function XDropRepeatsWith(pred, xf) {\n        this.xf = xf;\n        this.pred = pred;\n        this.lastValue = undefined;\n        this.seenFirstValue = false;\n      }\n\n      XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n        return this.xf['@@transducer/init']();\n      };\n\n      XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n        return this.xf['@@transducer/result'](result);\n      };\n\n      XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n        var sameAsLast = false;\n\n        if (!this.seenFirstValue) {\n          this.seenFirstValue = true;\n        } else if (this.pred(this.lastValue, input)) {\n          sameAsLast = true;\n        }\n\n        this.lastValue = input;\n        return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n      };\n\n      return _curry2(function _xdropRepeatsWith(pred, xf) {\n        return new XDropRepeatsWith(pred, xf);\n      });\n    }();\n\n    var _xdropWhile = function () {\n      function XDropWhile(f, xf) {\n        this.xf = xf;\n        this.f = f;\n      }\n\n      XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n      XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n      XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n        if (this.f) {\n          if (this.f(input)) {\n            return result;\n          }\n\n          this.f = null;\n        }\n\n        return this.xf['@@transducer/step'](result, input);\n      };\n\n      return _curry2(function _xdropWhile(f, xf) {\n        return new XDropWhile(f, xf);\n      });\n    }();\n\n    var _xfilter = function () {\n      function XFilter(f, xf) {\n        this.xf = xf;\n        this.f = f;\n      }\n\n      XFilter.prototype['@@transducer/init'] = _xfBase.init;\n      XFilter.prototype['@@transducer/result'] = _xfBase.result;\n\n      XFilter.prototype['@@transducer/step'] = function (result, input) {\n        return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n      };\n\n      return _curry2(function _xfilter(f, xf) {\n        return new XFilter(f, xf);\n      });\n    }();\n\n    var _xfind = function () {\n      function XFind(f, xf) {\n        this.xf = xf;\n        this.f = f;\n        this.found = false;\n      }\n\n      XFind.prototype['@@transducer/init'] = _xfBase.init;\n\n      XFind.prototype['@@transducer/result'] = function (result) {\n        if (!this.found) {\n          result = this.xf['@@transducer/step'](result, void 0);\n        }\n\n        return this.xf['@@transducer/result'](result);\n      };\n\n      XFind.prototype['@@transducer/step'] = function (result, input) {\n        if (this.f(input)) {\n          this.found = true;\n          result = _reduced(this.xf['@@transducer/step'](result, input));\n        }\n\n        return result;\n      };\n\n      return _curry2(function _xfind(f, xf) {\n        return new XFind(f, xf);\n      });\n    }();\n\n    var _xfindIndex = function () {\n      function XFindIndex(f, xf) {\n        this.xf = xf;\n        this.f = f;\n        this.idx = -1;\n        this.found = false;\n      }\n\n      XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n      XFindIndex.prototype['@@transducer/result'] = function (result) {\n        if (!this.found) {\n          result = this.xf['@@transducer/step'](result, -1);\n        }\n\n        return this.xf['@@transducer/result'](result);\n      };\n\n      XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n        this.idx += 1;\n\n        if (this.f(input)) {\n          this.found = true;\n          result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n        }\n\n        return result;\n      };\n\n      return _curry2(function _xfindIndex(f, xf) {\n        return new XFindIndex(f, xf);\n      });\n    }();\n\n    var _xfindLast = function () {\n      function XFindLast(f, xf) {\n        this.xf = xf;\n        this.f = f;\n      }\n\n      XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n\n      XFindLast.prototype['@@transducer/result'] = function (result) {\n        return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n      };\n\n      XFindLast.prototype['@@transducer/step'] = function (result, input) {\n        if (this.f(input)) {\n          this.last = input;\n        }\n\n        return result;\n      };\n\n      return _curry2(function _xfindLast(f, xf) {\n        return new XFindLast(f, xf);\n      });\n    }();\n\n    var _xfindLastIndex = function () {\n      function XFindLastIndex(f, xf) {\n        this.xf = xf;\n        this.f = f;\n        this.idx = -1;\n        this.lastIdx = -1;\n      }\n\n      XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n\n      XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n        return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n      };\n\n      XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n        this.idx += 1;\n\n        if (this.f(input)) {\n          this.lastIdx = this.idx;\n        }\n\n        return result;\n      };\n\n      return _curry2(function _xfindLastIndex(f, xf) {\n        return new XFindLastIndex(f, xf);\n      });\n    }();\n\n    var _xmap = function () {\n      function XMap(f, xf) {\n        this.xf = xf;\n        this.f = f;\n      }\n\n      XMap.prototype['@@transducer/init'] = _xfBase.init;\n      XMap.prototype['@@transducer/result'] = _xfBase.result;\n\n      XMap.prototype['@@transducer/step'] = function (result, input) {\n        return this.xf['@@transducer/step'](result, this.f(input));\n      };\n\n      return _curry2(function _xmap(f, xf) {\n        return new XMap(f, xf);\n      });\n    }();\n\n    var _xreduceBy = function () {\n      function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n        this.valueFn = valueFn;\n        this.valueAcc = valueAcc;\n        this.keyFn = keyFn;\n        this.xf = xf;\n        this.inputs = {};\n      }\n\n      XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n\n      XReduceBy.prototype['@@transducer/result'] = function (result) {\n        var key;\n\n        for (key in this.inputs) {\n          if (_has(key, this.inputs)) {\n            result = this.xf['@@transducer/step'](result, this.inputs[key]);\n\n            if (result['@@transducer/reduced']) {\n              result = result['@@transducer/value'];\n              break;\n            }\n          }\n        }\n\n        this.inputs = null;\n        return this.xf['@@transducer/result'](result);\n      };\n\n      XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n        var key = this.keyFn(input);\n        this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n        this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n        return result;\n      };\n\n      return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n        return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n      });\n    }();\n\n    var _xtake = function () {\n      function XTake(n, xf) {\n        this.xf = xf;\n        this.n = n;\n        this.i = 0;\n      }\n\n      XTake.prototype['@@transducer/init'] = _xfBase.init;\n      XTake.prototype['@@transducer/result'] = _xfBase.result;\n\n      XTake.prototype['@@transducer/step'] = function (result, input) {\n        this.i += 1;\n        var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n        return this.i >= this.n ? _reduced(ret) : ret;\n      };\n\n      return _curry2(function _xtake(n, xf) {\n        return new XTake(n, xf);\n      });\n    }();\n\n    var _xtakeWhile = function () {\n      function XTakeWhile(f, xf) {\n        this.xf = xf;\n        this.f = f;\n      }\n\n      XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n      XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n\n      XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n        return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n      };\n\n      return _curry2(function _xtakeWhile(f, xf) {\n        return new XTakeWhile(f, xf);\n      });\n    }();\n    /**\n     * Adds two values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n\n\n    var add = _curry2(function add(a, b) {\n      return Number(a) + Number(b);\n    });\n    /**\n     * Applies a function to the value at the given index of an array, returning a\n     * new copy of the array with the element at the given index replaced with the\n     * result of the function application.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @see R.update\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n\n\n    var adjust = _curry3(function adjust(fn, idx, list) {\n      if (idx >= list.length || idx < -list.length) {\n        return list;\n      }\n\n      var start = idx < 0 ? list.length : 0;\n\n      var _idx = start + idx;\n\n      var _list = _concat(list);\n\n      _list[_idx] = fn(list[_idx]);\n      return _list;\n    });\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if\n     * there are any that don't.\n     *\n     * Dispatches to the `all` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n\n\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n      var idx = 0;\n\n      while (idx < list.length) {\n        if (!fn(list[idx])) {\n          return false;\n        }\n\n        idx += 1;\n      }\n\n      return true;\n    }));\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator) in\n     * other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n\n\n    var always = _curry1(function always(val) {\n      return function () {\n        return val;\n      };\n    });\n    /**\n     * Returns `true` if both arguments are `true`; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if both arguments are `true`, `false` otherwise\n     * @see R.both\n     * @example\n     *\n     *      R.and(true, true); //=> true\n     *      R.and(true, false); //=> false\n     *      R.and(false, true); //=> false\n     *      R.and(false, false); //=> false\n     */\n\n\n    var and = _curry2(function and(a, b) {\n      return a && b;\n    });\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n\n\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n      var idx = 0;\n\n      while (idx < list.length) {\n        if (fn(list[idx])) {\n          return true;\n        }\n\n        idx += 1;\n      }\n\n      return false;\n    }));\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements If `n` is\n     * greater than the length of the list, an empty list is returned.\n     *\n     * Dispatches to the `aperture` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @see R.transduce\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n\n\n    var aperture = _curry2(_dispatchable('aperture', _xaperture, _aperture));\n    /**\n     * Returns a new list containing the contents of the given list, followed by\n     * the given element.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n\n\n    var append = _curry2(function append(el, list) {\n      return _concat(list, [el]);\n    });\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should be a\n     * bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n\n\n    var apply = _curry2(function apply(fn, args) {\n      return fn.apply(this, args);\n    });\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value. Note that this copies and flattens prototype\n     * properties onto the new object as well. All non-primitive properties are\n     * copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n\n\n    var assoc = _curry3(function assoc(prop, val, obj) {\n      var result = {};\n\n      for (var p in obj) {\n        result[p] = obj[p];\n      }\n\n      result[prop] = val;\n      return result;\n    });\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes required\n     * to create the given path, and placing the specific value at the tail end of\n     * that path. Note that this copies and flattens prototype properties onto the\n     * new object as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n\n\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n      switch (path.length) {\n        case 0:\n          return val;\n\n        case 1:\n          return assoc(path[0], val, obj);\n\n        default:\n          return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n      }\n    });\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @category Object\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     * @see R.partial\n     * @example\n     *\n     *      var log = R.bind(console.log, console);\n     *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n     *      // logs {a: 2}\n     */\n\n\n    var bind = _curry2(function bind(fn, thisObj) {\n      return _arity(fn.length, function () {\n        return fn.apply(thisObj, arguments);\n      });\n    });\n    /**\n     * Restricts a number to be within a range.\n     *\n     * Also works for other ordered types such as Strings and Dates.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a -> a\n     * @param {Number} minimum number\n     * @param {Number} maximum number\n     * @param {Number} value to be clamped\n     * @return {Number} Returns the clamped value\n     * @example\n     *\n     *      R.clamp(1, 10, -1) // => 1\n     *      R.clamp(1, 10, 11) // => 10\n     *      R.clamp(1, 10, 4)  // => 4\n     */\n\n\n    var clamp = _curry3(function clamp(min, max, value) {\n      if (min > max) {\n        throw new Error('min must not be greater than max in clamp(min, max, value)');\n      }\n\n      return value < min ? min : value > max ? max : value;\n    });\n    /**\n     * Makes a comparator function out of a function that reports whether the first\n     * element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator((a, b) => a.age < b.age);\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n\n\n    var comparator = _curry1(function comparator(pred) {\n      return function (a, b) {\n        return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n      };\n    });\n    /**\n     * Returns a curried equivalent of the provided function, with the specified\n     * arity. The curried function has two unusual capabilities. First, its\n     * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var sumArgs = (...args) => R.sum(args);\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n\n\n    var curryN = _curry2(function curryN(length, fn) {\n      if (length === 1) {\n        return _curry1(fn);\n      }\n\n      return _arity(length, _curryN(length, [], fn));\n    });\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n\n\n    var dec = add(-1);\n    /**\n     * Returns the second argument if it is not `null`, `undefined` or `NaN`\n     * otherwise the first argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = R.defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     *      defaultTo42(parseInt('string')); //=> 42\n     */\n\n    var defaultTo = _curry2(function defaultTo(d, v) {\n      return v == null || v !== v ? d : v;\n    });\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n     * @example\n     *\n     *      var cmp = (x, y) => x.a === y.a;\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n\n\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n      var out = [];\n      var idx = 0;\n      var firstLen = first.length;\n\n      while (idx < firstLen) {\n        if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n          out.push(first[idx]);\n        }\n\n        idx += 1;\n      }\n\n      return out;\n    });\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n\n\n    var dissoc = _curry2(function dissoc(prop, obj) {\n      var result = {};\n\n      for (var p in obj) {\n        if (p !== prop) {\n          result[p] = obj[p];\n        }\n      }\n\n      return result;\n    });\n    /**\n     * Makes a shallow clone of an object, omitting the property at the given path.\n     * Note that this copies and flattens prototype properties onto the new object\n     * as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.11.0\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n\n\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n      switch (path.length) {\n        case 0:\n          return obj;\n\n        case 1:\n          return dissoc(path[0], obj);\n\n        default:\n          var head = path[0];\n\n          var tail = _slice(path, 1);\n\n          return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n      }\n    });\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n\n\n    var divide = _curry2(function divide(a, b) {\n      return a / b;\n    });\n    /**\n     * Returns a new list excluding the leading elements of a given list which\n     * satisfy the supplied predicate function. It passes each value to the supplied\n     * predicate function, skipping elements while the predicate function returns\n     * `true`. The predicate function is applied to one argument: *(value)*.\n     *\n     * Dispatches to the `dropWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var lteTwo = x => x <= 2;\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n\n\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n      var idx = 0;\n      var len = list.length;\n\n      while (idx < len && pred(list[idx])) {\n        idx += 1;\n      }\n\n      return _slice(list, idx);\n    }));\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n     * types are supported if they define `<Type>.empty` and/or\n     * `<Type>.prototype.empty`.\n     *\n     * Dispatches to the `empty` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    // else\n\n\n    var empty = _curry1(function empty(x) {\n      return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n        return arguments;\n      }() : // else\n      void 0;\n    });\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`,\n     * according to the `transformation` functions. All non-primitive properties\n     * are copied by reference.\n     *\n     * A `transformation` function will not be invoked if its corresponding key\n     * does not exist in the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n\n\n    var evolve = _curry2(function evolve(transformations, object) {\n      var result = {};\n      var transformation, key, type;\n\n      for (key in object) {\n        transformation = transformations[key];\n        type = typeof transformation === 'undefined' ? 'undefined' : _typeof(transformation);\n        result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n      }\n\n      return result;\n    });\n    /**\n     * Returns the first element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `find` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n\n\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n      var idx = 0;\n      var len = list.length;\n\n      while (idx < len) {\n        if (fn(list[idx])) {\n          return list[idx];\n        }\n\n        idx += 1;\n      }\n    }));\n    /**\n     * Returns the index of the first element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n\n\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n      var idx = 0;\n      var len = list.length;\n\n      while (idx < len) {\n        if (fn(list[idx])) {\n          return idx;\n        }\n\n        idx += 1;\n      }\n\n      return -1;\n    }));\n    /**\n     * Returns the last element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `findLast` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n\n\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n      var idx = list.length - 1;\n\n      while (idx >= 0) {\n        if (fn(list[idx])) {\n          return list[idx];\n        }\n\n        idx -= 1;\n      }\n    }));\n    /**\n     * Returns the index of the last element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findLastIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n\n\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n      var idx = list.length - 1;\n\n      while (idx >= 0) {\n        if (fn(list[idx])) {\n          return idx;\n        }\n\n        idx -= 1;\n      }\n\n      return -1;\n    }));\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each\n     * element in the list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.forEach` method. For more\n     * details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n     * the original array. In some libraries this function is named `each`.\n     *\n     * Dispatches to the `forEach` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @see R.addIndex\n     * @example\n     *\n     *      var printXPlusFive = x => console.log(x + 5);\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      // logs 6\n     *      // logs 7\n     *      // logs 8\n     */\n\n\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n      var len = list.length;\n      var idx = 0;\n\n      while (idx < len) {\n        fn(list[idx]);\n        idx += 1;\n      }\n\n      return list;\n    }));\n    /**\n     * Creates a new object from a list key-value pairs. If a key appears in\n     * multiple pairs, the rightmost pair is included in the object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs, R.pair\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n\n\n    var fromPairs = _curry1(function fromPairs(pairs) {\n      var result = {};\n      var idx = 0;\n\n      while (idx < pairs.length) {\n        result[pairs[idx][0]] = pairs[idx][1];\n        idx += 1;\n      }\n\n      return result;\n    });\n    /**\n     * Takes a list and returns a list of lists where each sublist's elements are\n     * all \"equal\" according to the provided equality function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.21.0\n     * @category List\n     * @sig ((a, a) → Boolean) → [a] → [[a]]\n     * @param {Function} fn Function for determining whether two given (adjacent)\n     *        elements should be in the same group\n     * @param {Array} list The array to group. Also accepts a string, which will be\n     *        treated as a list of characters.\n     * @return {List} A list that contains sublists of equal elements,\n     *         whose concatenations are equal to the original list.\n     * @example\n     *\n     * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n     * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n     *\n     * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n     * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n     *\n     * R.groupWith(R.eqBy(isVowel), 'aestiou')\n     * //=> ['ae', 'st', 'iou']\n     */\n\n\n    var groupWith = _curry2(function (fn, list) {\n      var res = [];\n      var idx = 0;\n      var len = list.length;\n\n      while (idx < len) {\n        var nextidx = idx + 1;\n\n        while (nextidx < len && fn(list[idx], list[nextidx])) {\n          nextidx += 1;\n        }\n\n        res.push(list.slice(idx, nextidx));\n        idx = nextidx;\n      }\n\n      return res;\n    });\n    /**\n     * Returns `true` if the first argument is greater than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n\n\n    var gt = _curry2(function gt(a, b) {\n      return a > b;\n    });\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n\n\n    var gte = _curry2(function gte(a, b) {\n      return a >= b;\n    });\n    /**\n     * Returns whether or not an object has an own property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n\n\n    var has = _curry2(_has);\n    /**\n     * Returns whether or not an object or its prototype chain has a property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n\n\n    var hasIn = _curry2(function hasIn(prop, obj) {\n      return prop in obj;\n    });\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n\n\n    var identical = _curry2(function identical(a, b) {\n      // SameValue algorithm\n      if (a === b) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        return a !== 0 || 1 / a === 1 / b;\n      } else {\n        // Step 6.a: NaN == NaN\n        return a !== a && b !== b;\n      }\n    });\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good\n     * as a default or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n\n\n    var identity = _curry1(_identity);\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse`\n     * function depending upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @see R.unless, R.when\n     * @example\n     *\n     *      var incCount = R.ifElse(\n     *        R.has('count'),\n     *        R.over(R.lensProp('count'), R.inc),\n     *        R.assoc('count', 1)\n     *      );\n     *      incCount({});           //=> { count: 1 }\n     *      incCount({ count: 1 }); //=> { count: 2 }\n     */\n\n\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n      return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n        return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n      });\n    });\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n\n\n    var inc = add(1);\n    /**\n     * Inserts the supplied element into the list, at index `index`. _Note that\n     * this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n\n    var insert = _curry3(function insert(idx, elt, list) {\n      idx = idx < list.length && idx >= 0 ? idx : list.length;\n\n      var result = _slice(list);\n\n      result.splice(idx, 0, elt);\n      return result;\n    });\n    /**\n     * Inserts the sub-list into the list, at index `index`. _Note that this is not\n     * destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n\n\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n      idx = idx < list.length && idx >= 0 ? idx : list.length;\n      return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * Dispatches to the `intersperse` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n\n\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n      var out = [];\n      var idx = 0;\n      var length = list.length;\n\n      while (idx < length) {\n        if (idx === length - 1) {\n          out.push(list[idx]);\n        } else {\n          out.push(list[idx], separator);\n        }\n\n        idx += 1;\n      }\n\n      return out;\n    }));\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor. This\n     * function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n\n\n    var is = _curry2(function is(Ctor, val) {\n      return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n\n\n    var isArrayLike = _curry1(function isArrayLike(x) {\n      if (_isArray(x)) {\n        return true;\n      }\n\n      if (!x) {\n        return false;\n      }\n\n      if ((typeof x === 'undefined' ? 'undefined' : _typeof(x)) !== 'object') {\n        return false;\n      }\n\n      if (_isString(x)) {\n        return false;\n      }\n\n      if (x.nodeType === 1) {\n        return !!x.length;\n      }\n\n      if (x.length === 0) {\n        return true;\n      }\n\n      if (x.length > 0) {\n        return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n      }\n\n      return false;\n    });\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n\n\n    var isNil = _curry1(function isNil(x) {\n      return x == null;\n    });\n    /**\n     * Returns a list containing the names of all the enumerable own properties of\n     * the supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    // Safari bug\n\n\n    var keys = function () {\n      // cover IE < 9 keys issues\n      var hasEnumBug = !{\n        toString: null\n      }.propertyIsEnumerable('toString');\n      var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString']; // Safari bug\n\n      var hasArgsEnumBug = function () {\n        'use strict';\n\n        return arguments.propertyIsEnumerable('length');\n      }();\n\n      var contains = function contains(list, item) {\n        var idx = 0;\n\n        while (idx < list.length) {\n          if (list[idx] === item) {\n            return true;\n          }\n\n          idx += 1;\n        }\n\n        return false;\n      };\n\n      return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\n        return Object(obj) !== obj ? [] : Object.keys(obj);\n      }) : _curry1(function keys(obj) {\n        if (Object(obj) !== obj) {\n          return [];\n        }\n\n        var prop, nIdx;\n        var ks = [];\n\n        var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n\n        for (prop in obj) {\n          if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n            ks[ks.length] = prop;\n          }\n        }\n\n        if (hasEnumBug) {\n          nIdx = nonEnumerableProps.length - 1;\n\n          while (nIdx >= 0) {\n            prop = nonEnumerableProps[nIdx];\n\n            if (_has(prop, obj) && !contains(ks, prop)) {\n              ks[ks.length] = prop;\n            }\n\n            nIdx -= 1;\n          }\n        }\n\n        return ks;\n      });\n    }();\n    /**\n     * Returns a list containing the names of all the properties of the supplied\n     * object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n\n\n    var keysIn = _curry1(function keysIn(obj) {\n      var prop;\n      var ks = [];\n\n      for (prop in obj) {\n        ks[ks.length] = prop;\n      }\n\n      return ks;\n    });\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n\n\n    var length = _curry1(function length(list) {\n      return list != null && _isNumber(list.length) ? list.length : NaN;\n    });\n    /**\n     * Returns `true` if the first argument is less than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n\n\n    var lt = _curry2(function lt(a, b) {\n      return a < b;\n    });\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n\n\n    var lte = _curry2(function lte(a, b) {\n      return a <= b;\n    });\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from left to right, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var appender = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n\n\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n      var idx = 0;\n      var len = list.length;\n      var result = [];\n      var tuple = [acc];\n\n      while (idx < len) {\n        tuple = fn(tuple[0], list[idx]);\n        result[idx] = tuple[1];\n        idx += 1;\n      }\n\n      return [tuple[0], result];\n    });\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from right to left, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n\n\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n      var idx = list.length - 1;\n      var result = [];\n      var tuple = [acc];\n\n      while (idx >= 0) {\n        tuple = fn(tuple[0], list[idx]);\n        result[idx] = tuple[1];\n        idx -= 1;\n      }\n\n      return [tuple[0], result];\n    });\n    /**\n     * Tests a regular expression against a String. Note that this function will\n     * return an empty array when there are no matches. This differs from\n     * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @see R.test\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n\n\n    var match = _curry2(function match(rx, str) {\n      return str.match(rx) || [];\n    });\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the\n     * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n\n\n    var mathMod = _curry2(function mathMod(m, p) {\n      if (!_isInteger(m)) {\n        return NaN;\n      }\n\n      if (!_isInteger(p) || p < 1) {\n        return NaN;\n      }\n\n      return (m % p + p) % p;\n    });\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n\n\n    var max = _curry2(function max(a, b) {\n      return b > a ? b : a;\n    });\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.maxBy(square, -3, 2); //=> -3\n     *\n     *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n     *      R.reduce(R.maxBy(square), 0, []); //=> 0\n     */\n\n\n    var maxBy = _curry3(function maxBy(f, a, b) {\n      return f(b) > f(a) ? b : a;\n    });\n    /**\n     * Create a new object with the own properties of the first object merged with\n     * the own properties of the second object. If a key exists in both objects,\n     * the value from the second object will be used.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.mergeWith, R.mergeWithKey\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n\n\n    var merge = _curry2(function merge(l, r) {\n      return _assign({}, l, r);\n    });\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n\n\n    var mergeAll = _curry1(function mergeAll(list) {\n      return _assign.apply(null, [{}].concat(list));\n    });\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the key\n     * and the values associated with the key in each object, with the result being\n     * used as the value associated with the key in the returned object. The key\n     * will be excluded from the returned object if the resulting value is\n     * `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWith\n     * @example\n     *\n     *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n     *      R.mergeWithKey(concatValues,\n     *                     { a: true, thing: 'foo', values: [10, 20] },\n     *                     { b: true, thing: 'bar', values: [15, 35] });\n     *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n     */\n\n\n    var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {\n      var result = {};\n      var k;\n\n      for (k in l) {\n        if (_has(k, l)) {\n          result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n        }\n      }\n\n      for (k in r) {\n        if (_has(k, r) && !_has(k, result)) {\n          result[k] = r[k];\n        }\n      }\n\n      return result;\n    });\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n\n\n    var min = _curry2(function min(a, b) {\n      return b < a ? b : a;\n    });\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.minBy(square, -3, 2); //=> 2\n     *\n     *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n     *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n     */\n\n\n    var minBy = _curry3(function minBy(f, a, b) {\n      return f(b) < f(a) ? b : a;\n    });\n    /**\n     * Divides the first parameter by the second and returns the remainder. Note\n     * that this function preserves the JavaScript-style behavior for modulo. For\n     * mathematical modulo see `mathMod`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n\n\n    var modulo = _curry2(function modulo(a, b) {\n      return a % b;\n    });\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n\n\n    var multiply = _curry2(function multiply(a, b) {\n      return a * b;\n    });\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly `n` parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = (a, b) => [a, b];\n     *\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n\n\n    var nAry = _curry2(function nAry(n, fn) {\n      switch (n) {\n        case 0:\n          return function () {\n            return fn.call(this);\n          };\n\n        case 1:\n          return function (a0) {\n            return fn.call(this, a0);\n          };\n\n        case 2:\n          return function (a0, a1) {\n            return fn.call(this, a0, a1);\n          };\n\n        case 3:\n          return function (a0, a1, a2) {\n            return fn.call(this, a0, a1, a2);\n          };\n\n        case 4:\n          return function (a0, a1, a2, a3) {\n            return fn.call(this, a0, a1, a2, a3);\n          };\n\n        case 5:\n          return function (a0, a1, a2, a3, a4) {\n            return fn.call(this, a0, a1, a2, a3, a4);\n          };\n\n        case 6:\n          return function (a0, a1, a2, a3, a4, a5) {\n            return fn.call(this, a0, a1, a2, a3, a4, a5);\n          };\n\n        case 7:\n          return function (a0, a1, a2, a3, a4, a5, a6) {\n            return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n          };\n\n        case 8:\n          return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n            return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n          };\n\n        case 9:\n          return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n            return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n          };\n\n        case 10:\n          return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n            return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n          };\n\n        default:\n          throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n      }\n    });\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n\n\n    var negate = _curry1(function negate(n) {\n      return -n;\n    });\n    /**\n     * Returns `true` if no elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n     *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n     */\n\n\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); //=> true\n     *      R.not(1); //=> false\n     */\n\n\n    var not = _curry1(function not(a) {\n      return !a;\n    });\n    /**\n     * Returns the nth element of the given list or string. If n is negative the\n     * element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth(2, 'abc'); //=> 'c'\n     *      R.nth(3, 'abc'); //=> ''\n     */\n\n\n    var nth = _curry2(function nth(offset, list) {\n      var idx = offset < 0 ? list.length + offset : offset;\n      return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n\n\n    var nthArg = _curry1(function nthArg(n) {\n      var arity = n < 0 ? 1 : n + 1;\n      return curryN(arity, function () {\n        return nth(n, arguments);\n      });\n    });\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @see R.pair\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.objOf('must'),\n     *        R.map(R.objOf('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n\n\n    var objOf = _curry2(function objOf(key, val) {\n      var obj = {};\n      obj[key] = val;\n      return obj;\n    });\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n\n\n    var of = _curry1(_of);\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of\n     * `fn` such that `fn` can only ever be called once, no matter how many times\n     * the returned function is invoked. The first value calculated is returned in\n     * subsequent invocations.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(x => x + 1);\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n\n\n    var once = _curry1(function once(fn) {\n      var called = false;\n      var result;\n      return _arity(fn.length, function () {\n        if (called) {\n          return result;\n        }\n\n        called = true;\n        result = fn.apply(this, arguments);\n        return result;\n      });\n    });\n    /**\n     * Returns `true` if one or both of its arguments are `true`. Returns `false`\n     * if both arguments are `false`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if one or both arguments are `true`, `false` otherwise\n     * @see R.either\n     * @example\n     *\n     *      R.or(true, true); //=> true\n     *      R.or(true, false); //=> true\n     *      R.or(false, true); //=> true\n     *      R.or(false, false); //=> false\n     */\n\n\n    var or = _curry2(function or(a, b) {\n      return a || b;\n    });\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the result of applying the given function to\n     * the focused value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    // `Identity` is a functor that holds a single value, where `map` simply\n    // transforms the held value with the provided function.\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n\n\n    var over = function () {\n      // `Identity` is a functor that holds a single value, where `map` simply\n      // transforms the held value with the provided function.\n      var Identity = function Identity(x) {\n        return {\n          value: x,\n          map: function map(f) {\n            return Identity(f(x));\n          }\n        };\n      };\n\n      return _curry3(function over(lens, f, x) {\n        // The value returned by the getter function is first transformed with `f`,\n        // then set as the value of an `Identity`. This is then mapped over with the\n        // setter function of the lens.\n        return lens(function (y) {\n          return Identity(f(y));\n        })(x).value;\n      });\n    }();\n    /**\n     * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category List\n     * @sig a -> b -> (a,b)\n     * @param {*} fst\n     * @param {*} snd\n     * @return {Array}\n     * @see R.objOf, R.of\n     * @example\n     *\n     *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n     */\n\n\n    var pair = _curry2(function pair(fst, snd) {\n      return [fst, snd];\n    });\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path`.\n     * @see R.prop\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n\n\n    var path = _curry2(function path(paths, obj) {\n      var val = obj;\n      var idx = 0;\n\n      while (idx < paths.length) {\n        if (val == null) {\n          return;\n        }\n\n        val = val[paths[idx]];\n        idx += 1;\n      }\n\n      return val;\n    });\n    /**\n     * If the given, non-null object has a value at the given path, returns the\n     * value at that path. Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig a -> [String] -> Object -> a\n     * @param {*} d The default value.\n     * @param {Array} p The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path` of the supplied object or the default value.\n     * @example\n     *\n     *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n     */\n\n\n    var pathOr = _curry3(function pathOr(d, p, obj) {\n      return defaultTo(d, path(p, obj));\n    });\n    /**\n     * Returns `true` if the specified object property at given path satisfies the\n     * given predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Logic\n     * @sig (a -> Boolean) -> [String] -> Object -> Boolean\n     * @param {Function} pred\n     * @param {Array} propPath\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propSatisfies, R.path\n     * @example\n     *\n     *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n     */\n\n\n    var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {\n      return propPath.length > 0 && pred(path(propPath, obj));\n    });\n    /**\n     * Returns a partial copy of an object containing only the keys specified. If\n     * the key does not exist, the property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit, R.props\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n\n\n    var pick = _curry2(function pick(names, obj) {\n      var result = {};\n      var idx = 0;\n\n      while (idx < names.length) {\n        if (names[idx] in obj) {\n          result[names[idx]] = obj[names[idx]];\n        }\n\n        idx += 1;\n      }\n\n      return result;\n    });\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for\n     * properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n\n\n    var pickAll = _curry2(function pickAll(names, obj) {\n      var result = {};\n      var idx = 0;\n      var len = names.length;\n\n      while (idx < len) {\n        var name = names[idx];\n        result[name] = obj[name];\n        idx += 1;\n      }\n\n      return result;\n    });\n    /**\n     * Returns a partial copy of an object containing only the keys that satisfy\n     * the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick, R.filter\n     * @example\n     *\n     *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n\n\n    var pickBy = _curry2(function pickBy(test, obj) {\n      var result = {};\n\n      for (var prop in obj) {\n        if (test(obj[prop], prop, obj)) {\n          result[prop] = obj[prop];\n        }\n      }\n\n      return result;\n    });\n    /**\n     * Returns a new list with the given element at the front, followed by the\n     * contents of the list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n\n\n    var prepend = _curry2(function prepend(el, list) {\n      return _concat([el], list);\n    });\n    /**\n     * Returns a function that when supplied an object returns the indicated\n     * property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @see R.path\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n\n\n    var prop = _curry2(function prop(p, obj) {\n      return obj[p];\n    });\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is, R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n\n\n    var propIs = _curry3(function propIs(type, name, obj) {\n      return is(type, obj[name]);\n    });\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property. Otherwise returns the provided default\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n\n\n    var propOr = _curry3(function propOr(val, p, obj) {\n      return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq, R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n\n\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n      return pred(obj[name]);\n    });\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n\n\n    var props = _curry2(function props(ps, obj) {\n      var len = ps.length;\n      var out = [];\n      var idx = 0;\n\n      while (idx < len) {\n        out[idx] = obj[ps[idx]];\n        idx += 1;\n      }\n\n      return out;\n    });\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n\n\n    var range = _curry2(function range(from, to) {\n      if (!(_isNumber(from) && _isNumber(to))) {\n        throw new TypeError('Both arguments to range must be numbers');\n      }\n\n      var result = [];\n      var n = from;\n\n      while (n < to) {\n        result.push(n);\n        n += 1;\n      }\n\n      return result;\n    });\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = (acc, pair) => acc.concat(pair);\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n\n\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n      var idx = list.length - 1;\n\n      while (idx >= 0) {\n        acc = fn(acc, list[idx]);\n        idx -= 1;\n      }\n\n      return acc;\n    });\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the reduce\n     * and transduce functions. The returned value should be considered a black\n     * box: the internal structure is not guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above. For instance, it is not currently supported by reduceRight.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category List\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @see R.reduce, R.transduce\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n\n\n    var reduced = _curry1(_reduced);\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements. _Note that this is not destructive_: it returns a copy of\n     * the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n\n\n    var remove = _curry3(function remove(start, count, list) {\n      return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n\n\n    var replace = _curry3(function replace(regex, replacement, str) {\n      return str.replace(regex, replacement);\n    });\n    /**\n     * Returns a new list or string with the elements or characters in reverse\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {Array|String}\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     *\n     *      R.reverse('abc');      //=> 'cba'\n     *      R.reverse('ab');       //=> 'ba'\n     *      R.reverse('a');        //=> 'a'\n     *      R.reverse('');         //=> ''\n     */\n\n\n    var reverse = _curry1(function reverse(list) {\n      return _isString(list) ? list.split('').reverse().join('') : _slice(list).reverse();\n    });\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values\n     * from the left\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n\n\n    var scan = _curry3(function scan(fn, acc, list) {\n      var idx = 0;\n      var len = list.length;\n      var result = [acc];\n\n      while (idx < len) {\n        acc = fn(acc, list[idx]);\n        result[idx + 1] = acc;\n        idx += 1;\n      }\n\n      return result;\n    });\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n\n\n    var set = _curry3(function set(lens, v, x) {\n      return over(lens, always(v), x);\n    });\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * Dispatches to the `slice` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n\n\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n      return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n    /**\n     * Returns a copy of the list, sorted according to the comparator function,\n     * which should accept two values at a time and return a negative number if the\n     * first value is smaller, a positive number if it's larger, and zero if they\n     * are equal. Please note that this is a **copy** of the list. It does not\n     * modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n\n\n    var sort = _curry2(function sort(comparator, list) {\n      return _slice(list).sort(comparator);\n    });\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(R.prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n\n\n    var sortBy = _curry2(function sortBy(fn, list) {\n      return _slice(list).sort(function (a, b) {\n        var aa = fn(a);\n        var bb = fn(b);\n        return aa < bb ? -1 : aa > bb ? 1 : 0;\n      });\n    });\n    /**\n     * Splits a given list or string at a given index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig Number -> [a] -> [[a], [a]]\n     * @sig Number -> String -> [String, String]\n     * @param {Number} index The index where the array/string is split.\n     * @param {Array|String} array The array/string to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n     *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n     *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n     */\n\n\n    var splitAt = _curry2(function splitAt(index, array) {\n      return [slice(0, index, array), slice(index, length(array), array)];\n    });\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n\n\n    var splitEvery = _curry2(function splitEvery(n, list) {\n      if (n <= 0) {\n        throw new Error('First argument to splitEvery must be a positive integer');\n      }\n\n      var result = [];\n      var idx = 0;\n\n      while (idx < list.length) {\n        result.push(slice(idx, idx += n, list));\n      }\n\n      return result;\n    });\n    /**\n     * Takes a list and a predicate and returns a pair of lists with the following properties:\n     *\n     *  - the result of concatenating the two output lists is equivalent to the input list;\n     *  - none of the elements of the first output list satisfies the predicate; and\n     *  - if the second output list is non-empty, its first element satisfies the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n     * @param {Function} pred The predicate that determines where the array is split.\n     * @param {Array} list The array to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n     */\n\n\n    var splitWhen = _curry2(function splitWhen(pred, list) {\n      var idx = 0;\n      var len = list.length;\n      var prefix = [];\n\n      while (idx < len && !pred(list[idx])) {\n        prefix.push(list[idx]);\n        idx += 1;\n      }\n\n      return [prefix, _slice(list, idx)];\n    });\n    /**\n     * Subtracts its second argument from its first argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n\n\n    var subtract = _curry2(function subtract(a, b) {\n      return Number(a) - Number(b);\n    });\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * Dispatches to the `slice` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.head, R.init, R.last\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n\n\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * Dispatches to the `take` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n\n\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n      return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing\n     * each value to the supplied predicate function, and terminating when the\n     * predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile, R.addIndex\n     * @example\n     *\n     *      var isNotOne = x => x !== 1;\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n\n\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n      var idx = list.length - 1;\n\n      while (idx >= 0 && fn(list[idx])) {\n        idx -= 1;\n      }\n\n      return _slice(list, idx + 1, Infinity);\n    });\n    /**\n     * Returns a new list containing the first `n` elements of a given list,\n     * passing each value to the supplied predicate function, and terminating when\n     * the predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * Dispatches to the `takeWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isNotFour = x => x !== 4;\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n     */\n\n\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n      var idx = 0;\n      var len = list.length;\n\n      while (idx < len && fn(list[idx])) {\n        idx += 1;\n      }\n\n      return _slice(list, 0, idx);\n    }));\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = x => console.log('x is ' + x);\n     *      R.tap(sayX, 100); //=> 100\n     *      // logs 'x is 100'\n     */\n\n\n    var tap = _curry2(function tap(fn, x) {\n      fn(x);\n      return x;\n    });\n    /**\n     * Calls an input function `n` times, returning an array containing the results\n     * of those function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0`\n     * and is gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.3\n     * @category List\n     * @sig (Number -> a) -> Number -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n\n\n    var times = _curry2(function times(fn, n) {\n      var len = Number(n);\n      var idx = 0;\n      var list;\n\n      if (len < 0 || isNaN(len)) {\n        throw new RangeError('n must be a non-negative number');\n      }\n\n      list = new Array(len);\n\n      while (idx < len) {\n        list[idx] = fn(idx);\n        idx += 1;\n      }\n\n      return list;\n    });\n    /**\n     * Converts an object into an array of key, value arrays. Only the object's\n     * own properties are used.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n\n\n    var toPairs = _curry1(function toPairs(obj) {\n      var pairs = [];\n\n      for (var prop in obj) {\n        if (_has(prop, obj)) {\n          pairs[pairs.length] = [prop, obj[prop]];\n        }\n      }\n\n      return pairs;\n    });\n    /**\n     * Converts an object into an array of key, value arrays. The object's own\n     * properties and prototype properties are used. Note that the order of the\n     * output array is not guaranteed to be consistent across different JS\n     * platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n\n\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n      var pairs = [];\n\n      for (var prop in obj) {\n        pairs[pairs.length] = [prop, obj[prop]];\n      }\n\n      return pairs;\n    });\n    /**\n     * Transposes the rows and columns of a 2D list.\n     * When passed a list of `n` lists of length `x`,\n     * returns a list of `x` lists of length `n`.\n     *\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig [[a]] -> [[a]]\n     * @param {Array} list A 2D list\n     * @return {Array} A 2D list\n     * @example\n     *\n     *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n     *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     *\n     * If some of the rows are shorter than the following rows, their elements are skipped:\n     *\n     *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n     */\n\n\n    var transpose = _curry1(function transpose(outerlist) {\n      var i = 0;\n      var result = [];\n\n      while (i < outerlist.length) {\n        var innerlist = outerlist[i];\n        var j = 0;\n\n        while (j < innerlist.length) {\n          if (typeof result[j] === 'undefined') {\n            result[j] = [];\n          }\n\n          result[j].push(innerlist[j]);\n          j += 1;\n        }\n\n        i += 1;\n      }\n\n      return result;\n    });\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n\n\n    var trim = function () {\n      var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n      var zeroWidth = '\\u200B';\n      var hasProtoTrim = typeof String.prototype.trim === 'function';\n\n      if (!hasProtoTrim || ws.trim() || !zeroWidth.trim()) {\n        return _curry1(function trim(str) {\n          var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n          var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n          return str.replace(beginRx, '').replace(endRx, '');\n        });\n      } else {\n        return _curry1(function trim(str) {\n          return str.trim();\n        });\n      }\n    }();\n    /**\n     * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n     * function evaluates the `tryer`; if it does not throw, it simply returns the\n     * result. If the `tryer` *does* throw, the returned function evaluates the\n     * `catcher` function and returns its result. Note that for effective\n     * composition with this function, both the `tryer` and `catcher` functions\n     * must return the same type of results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Function\n     * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n     * @param {Function} tryer The function that may throw.\n     * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n     * @return {Function} A new function that will catch exceptions and send then to the catcher.\n     * @example\n     *\n     *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n     *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n     */\n\n\n    var tryCatch = _curry2(function _tryCatch(tryer, catcher) {\n      return _arity(tryer.length, function () {\n        try {\n          return tryer.apply(this, arguments);\n        } catch (e) {\n          return catcher.apply(this, _concat([e], arguments));\n        }\n      });\n    });\n    /**\n     * Gives a single-word string description of the (native) type of a value,\n     * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n     * attempt to distinguish user Object types any further, reporting them all as\n     * 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n\n\n    var type = _curry1(function type(val) {\n      return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns a\n     * function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function which\n     * takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n\n\n    var unapply = _curry1(function unapply(fn) {\n      return function () {\n        return fn(_slice(arguments));\n      };\n    });\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 1 parameter. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n\n\n    var unary = _curry1(function unary(fn) {\n      return nAry(1, fn);\n    });\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = a => b => c => d => a + b + c + d;\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n     */\n\n\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n      return curryN(depth, function () {\n        var currentDepth = 1;\n        var value = fn;\n        var idx = 0;\n        var endIdx;\n\n        while (currentDepth <= depth && typeof value === 'function') {\n          endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n          value = value.apply(this, _slice(arguments, idx, endIdx));\n          currentDepth += 1;\n          idx = endIdx;\n        }\n\n        return value;\n      });\n    });\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns\n     * either false to stop iteration or an array of length 2 containing the value\n     * to add to the resulting list and the seed to be used in the next call to the\n     * iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = n => n > 50 ? false : [-n, n + 10];\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n\n\n    var unfold = _curry2(function unfold(fn, seed) {\n      var pair = fn(seed);\n      var result = [];\n\n      while (pair && pair.length) {\n        result[result.length] = pair[0];\n        pair = fn(pair[1]);\n      }\n\n      return result;\n    });\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied predicate to\n     * two list elements. Prefers the first item if two items compare equal based\n     * on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = R.eqBy(String);\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n\n\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n      var idx = 0;\n      var len = list.length;\n      var result = [];\n      var item;\n\n      while (idx < len) {\n        item = list[idx];\n\n        if (!_containsWith(pred, item, result)) {\n          result[result.length] = item;\n        }\n\n        idx += 1;\n      }\n\n      return result;\n    });\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is not satisfied, the function will return the result of\n     * calling the `whenFalseFn` function with the same argument. If the predicate\n     * is satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred        A predicate function\n     * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n     *                               to a falsy value.\n     * @param {*}        x           An object to test with the `pred` function and\n     *                               pass to `whenFalseFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n     * @see R.ifElse, R.when\n     * @example\n     *\n     *      // coerceArray :: (a|[a]) -> [a]\n     *      var coerceArray = R.unless(R.isArrayLike, R.of);\n     *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\n     *      coerceArray(1);         //=> [1]\n     */\n\n\n    var unless = _curry3(function unless(pred, whenFalseFn, x) {\n      return pred(x) ? x : whenFalseFn(x);\n    });\n    /**\n     * Takes a predicate, a transformation function, and an initial value,\n     * and returns a value of the same type as the initial value.\n     * It does so by applying the transformation until the predicate is satisfied,\n     * at which point it returns the satisfactory value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred A predicate function\n     * @param {Function} fn The iterator function\n     * @param {*} init Initial value\n     * @return {*} Final value that satisfies predicate\n     * @example\n     *\n     *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n     */\n\n\n    var until = _curry3(function until(pred, fn, init) {\n      var val = init;\n\n      while (!pred(val)) {\n        val = fn(val);\n      }\n\n      return val;\n    });\n    /**\n     * Returns a new copy of the array with the element at the provided index\n     * replaced with the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @see R.adjust\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n\n\n    var update = _curry3(function update(idx, x, list) {\n      return adjust(always(x), idx, list);\n    });\n    /**\n     * Accepts a function `fn` and a list of transformer functions and returns a\n     * new curried function. When the new function is invoked, it calls the\n     * function `fn` with parameters consisting of the result of calling each\n     * supplied handler on successive arguments to the new function.\n     *\n     * If more arguments are passed to the returned function than transformer\n     * functions, those arguments are passed directly to `fn` as additional\n     * parameters. If you expect additional arguments that don't need to be\n     * transformed, although you can ignore them, it's best to pass an identity\n     * function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {Array} transformers A list of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n     */\n\n\n    var useWith = _curry2(function useWith(fn, transformers) {\n      return curryN(transformers.length, function () {\n        var args = [];\n        var idx = 0;\n\n        while (idx < transformers.length) {\n          args.push(transformers[idx].call(this, arguments[idx]));\n          idx += 1;\n        }\n\n        return fn.apply(this, args.concat(_slice(arguments, transformers.length)));\n      });\n    });\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across different\n     * JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n\n\n    var values = _curry1(function values(obj) {\n      var props = keys(obj);\n      var len = props.length;\n      var vals = [];\n      var idx = 0;\n\n      while (idx < len) {\n        vals[idx] = obj[props[idx]];\n        idx += 1;\n      }\n\n      return vals;\n    });\n    /**\n     * Returns a list of all the properties, including prototype properties, of the\n     * supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n\n\n    var valuesIn = _curry1(function valuesIn(obj) {\n      var prop;\n      var vs = [];\n\n      for (prop in obj) {\n        vs[vs.length] = obj[prop];\n      }\n\n      return vs;\n    });\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    // `Const` is a functor that effectively ignores the function given to `map`.\n    // Using `Const` effectively ignores the setter function of the `lens`,\n    // leaving the value returned by the getter function unmodified.\n\n\n    var view = function () {\n      // `Const` is a functor that effectively ignores the function given to `map`.\n      var Const = function Const(x) {\n        return {\n          value: x,\n          map: function map() {\n            return this;\n          }\n        };\n      };\n\n      return _curry2(function view(lens, x) {\n        // Using `Const` effectively ignores the setter function of the `lens`,\n        // leaving the value returned by the getter function unmodified.\n        return lens(Const)(x).value;\n      });\n    }();\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is satisfied, the function will return the result of calling\n     * the `whenTrueFn` function with the same argument. If the predicate is not\n     * satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred       A predicate function\n     * @param {Function} whenTrueFn A function to invoke when the `condition`\n     *                              evaluates to a truthy value.\n     * @param {*}        x          An object to test with the `pred` function and\n     *                              pass to `whenTrueFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n     * @see R.ifElse, R.unless\n     * @example\n     *\n     *      // truncate :: String -> String\n     *      var truncate = R.when(\n     *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n     *        R.pipe(R.take(10), R.append('…'), R.join(''))\n     *      );\n     *      truncate('12345');         //=> '12345'\n     *      truncate('0123456789ABC'); //=> '0123456789…'\n     */\n\n\n    var when = _curry3(function when(pred, whenTrueFn, x) {\n      return pred(x) ? whenTrueFn(x) : x;\n    });\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of the\n     * test object. `where` returns true if all the predicates return true, false\n     * otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = where({\n     *        a: equals('foo'),\n     *        b: complement(equals('bar')),\n     *        x: gt(__, 10),\n     *        y: lt(__, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n\n\n    var where = _curry2(function where(spec, testObj) {\n      for (var prop in spec) {\n        if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the\n     * parameters, or do other processing either before the internal function is\n     * called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @deprecated since v0.22.0\n     * @example\n     *\n     *      var greet = name => 'Hello ' + name;\n     *\n     *      var shoutedGreet = R.wrap(greet, (gr, name) => gr(name).toUpperCase());\n     *\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n\n\n    var wrap = _curry2(function wrap(fn, wrapper) {\n      return curryN(fn.length, function () {\n        return wrapper.apply(this, _concat([fn], arguments));\n      });\n    });\n    /**\n     * Creates a new list out of the two supplied by creating each possible pair\n     * from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n\n\n    var xprod = _curry2(function xprod(a, b) {\n      // = xprodWith(prepend); (takes about 3 times as long...)\n      var idx = 0;\n      var ilen = a.length;\n      var j;\n      var jlen = b.length;\n      var result = [];\n\n      while (idx < ilen) {\n        j = 0;\n\n        while (j < jlen) {\n          result[result.length] = [a[idx], b[j]];\n          j += 1;\n        }\n\n        idx += 1;\n      }\n\n      return result;\n    });\n    /**\n     * Creates a new list out of the two supplied by pairing up equally-positioned\n     * items from both lists. The returned list is truncated to the length of the\n     * shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n\n\n    var zip = _curry2(function zip(a, b) {\n      var rv = [];\n      var idx = 0;\n      var len = Math.min(a.length, b.length);\n\n      while (idx < len) {\n        rv[idx] = [a[idx], b[idx]];\n        idx += 1;\n      }\n\n      return rv;\n    });\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     * Key/value pairing is truncated to the length of the shorter of the two lists.\n     * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n\n\n    var zipObj = _curry2(function zipObj(keys, values) {\n      var idx = 0;\n      var len = Math.min(keys.length, values.length);\n      var out = {};\n\n      while (idx < len) {\n        out[keys[idx]] = values[idx];\n        idx += 1;\n      }\n\n      return out;\n    });\n    /**\n     * Creates a new list out of the two supplied by applying the function to each\n     * equally-positioned pair in the lists. The returned list is truncated to the\n     * length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = (x, y) => {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n\n\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n      var rv = [];\n      var idx = 0;\n      var len = Math.min(a.length, b.length);\n\n      while (idx < len) {\n        rv[idx] = fn(a[idx], b[idx]);\n        idx += 1;\n      }\n\n      return rv;\n    });\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n\n\n    var F = always(false);\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n\n    var T = always(true);\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @param {Boolean} deep Whether or not to perform deep cloning.\n     * @return {*} The copied value.\n     */\n\n    var _clone = function _clone(value, refFrom, refTo, deep) {\n      var copy = function copy(copiedValue) {\n        var len = refFrom.length;\n        var idx = 0;\n\n        while (idx < len) {\n          if (value === refFrom[idx]) {\n            return refTo[idx];\n          }\n\n          idx += 1;\n        }\n\n        refFrom[idx + 1] = value;\n        refTo[idx + 1] = copiedValue;\n\n        for (var key in value) {\n          copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n        }\n\n        return copiedValue;\n      };\n\n      switch (type(value)) {\n        case 'Object':\n          return copy({});\n\n        case 'Array':\n          return copy([]);\n\n        case 'Date':\n          return new Date(value.valueOf());\n\n        case 'RegExp':\n          return _cloneRegExp(value);\n\n        default:\n          return value;\n      }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n      return _curry2(function (fn, args) {\n        return _arity(Math.max(0, fn.length - args.length), function () {\n          return fn.apply(this, concat(args, arguments));\n        });\n      });\n    };\n\n    var _dropLast = function dropLast(n, xs) {\n      return take(n < xs.length ? xs.length - n : 0, xs);\n    }; // Values of other types are only equal if identical.\n\n\n    var _equals = function _equals(a, b, stackA, stackB) {\n      if (identical(a, b)) {\n        return true;\n      }\n\n      if (type(a) !== type(b)) {\n        return false;\n      }\n\n      if (a == null || b == null) {\n        return false;\n      }\n\n      if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n        return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n      }\n\n      switch (type(a)) {\n        case 'Arguments':\n        case 'Array':\n        case 'Object':\n          if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n            return a === b;\n          }\n\n          break;\n\n        case 'Boolean':\n        case 'Number':\n        case 'String':\n          if (!((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === (typeof b === 'undefined' ? 'undefined' : _typeof(b)) && identical(a.valueOf(), b.valueOf()))) {\n            return false;\n          }\n\n          break;\n\n        case 'Date':\n          if (!identical(a.valueOf(), b.valueOf())) {\n            return false;\n          }\n\n          break;\n\n        case 'Error':\n          return a.name === b.name && a.message === b.message;\n\n        case 'RegExp':\n          if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n            return false;\n          }\n\n          break;\n\n        case 'Map':\n        case 'Set':\n          if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n            return false;\n          }\n\n          break;\n\n        case 'Int8Array':\n        case 'Uint8Array':\n        case 'Uint8ClampedArray':\n        case 'Int16Array':\n        case 'Uint16Array':\n        case 'Int32Array':\n        case 'Uint32Array':\n        case 'Float32Array':\n        case 'Float64Array':\n          break;\n\n        case 'ArrayBuffer':\n          break;\n\n        default:\n          // Values of other types are only equal if identical.\n          return false;\n      }\n\n      var keysA = keys(a);\n\n      if (keysA.length !== keys(b).length) {\n        return false;\n      }\n\n      var idx = stackA.length - 1;\n\n      while (idx >= 0) {\n        if (stackA[idx] === a) {\n          return stackB[idx] === b;\n        }\n\n        idx -= 1;\n      }\n\n      stackA.push(a);\n      stackB.push(b);\n      idx = keysA.length - 1;\n\n      while (idx >= 0) {\n        var key = keysA[idx];\n\n        if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n          return false;\n        }\n\n        idx -= 1;\n      }\n\n      stackA.pop();\n      stackB.pop();\n      return true;\n    };\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive\n     * function based on the flag passed in.\n     *\n     * @private\n     */\n\n\n    var _makeFlat = function _makeFlat(recursive) {\n      return function flatt(list) {\n        var value, jlen, j;\n        var result = [];\n        var idx = 0;\n        var ilen = list.length;\n\n        while (idx < ilen) {\n          if (isArrayLike(list[idx])) {\n            value = recursive ? flatt(list[idx]) : list[idx];\n            j = 0;\n            jlen = value.length;\n\n            while (j < jlen) {\n              result[result.length] = value[j];\n              j += 1;\n            }\n          } else {\n            result[result.length] = list[idx];\n          }\n\n          idx += 1;\n        }\n\n        return result;\n      };\n    };\n\n    var _reduce = function () {\n      function _arrayReduce(xf, acc, list) {\n        var idx = 0;\n        var len = list.length;\n\n        while (idx < len) {\n          acc = xf['@@transducer/step'](acc, list[idx]);\n\n          if (acc && acc['@@transducer/reduced']) {\n            acc = acc['@@transducer/value'];\n            break;\n          }\n\n          idx += 1;\n        }\n\n        return xf['@@transducer/result'](acc);\n      }\n\n      function _iterableReduce(xf, acc, iter) {\n        var step = iter.next();\n\n        while (!step.done) {\n          acc = xf['@@transducer/step'](acc, step.value);\n\n          if (acc && acc['@@transducer/reduced']) {\n            acc = acc['@@transducer/value'];\n            break;\n          }\n\n          step = iter.next();\n        }\n\n        return xf['@@transducer/result'](acc);\n      }\n\n      function _methodReduce(xf, acc, obj) {\n        return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n      }\n\n      var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n      return function _reduce(fn, acc, list) {\n        if (typeof fn === 'function') {\n          fn = _xwrap(fn);\n        }\n\n        if (isArrayLike(list)) {\n          return _arrayReduce(fn, acc, list);\n        }\n\n        if (typeof list.reduce === 'function') {\n          return _methodReduce(fn, acc, list);\n        }\n\n        if (list[symIterator] != null) {\n          return _iterableReduce(fn, acc, list[symIterator]());\n        }\n\n        if (typeof list.next === 'function') {\n          return _iterableReduce(fn, acc, list);\n        }\n\n        throw new TypeError('reduce: list must be array or iterable');\n      };\n    }();\n\n    var _stepCat = function () {\n      var _stepCatArray = {\n        '@@transducer/init': Array,\n        '@@transducer/step': function transducerStep(xs, x) {\n          xs.push(x);\n          return xs;\n        },\n        '@@transducer/result': _identity\n      };\n      var _stepCatString = {\n        '@@transducer/init': String,\n        '@@transducer/step': function transducerStep(a, b) {\n          return a + b;\n        },\n        '@@transducer/result': _identity\n      };\n      var _stepCatObject = {\n        '@@transducer/init': Object,\n        '@@transducer/step': function transducerStep(result, input) {\n          return _assign(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);\n        },\n        '@@transducer/result': _identity\n      };\n      return function _stepCat(obj) {\n        if (_isTransformer(obj)) {\n          return obj;\n        }\n\n        if (isArrayLike(obj)) {\n          return _stepCatArray;\n        }\n\n        if (typeof obj === 'string') {\n          return _stepCatString;\n        }\n\n        if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n          return _stepCatObject;\n        }\n\n        throw new Error('Cannot create transformer for ' + obj);\n      };\n    }();\n\n    var _xdropLastWhile = function () {\n      function XDropLastWhile(fn, xf) {\n        this.f = fn;\n        this.retained = [];\n        this.xf = xf;\n      }\n\n      XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n\n      XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n        this.retained = null;\n        return this.xf['@@transducer/result'](result);\n      };\n\n      XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n        return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n      };\n\n      XDropLastWhile.prototype.flush = function (result, input) {\n        result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n        this.retained = [];\n        return this.xf['@@transducer/step'](result, input);\n      };\n\n      XDropLastWhile.prototype.retain = function (result, input) {\n        this.retained.push(input);\n        return result;\n      };\n\n      return _curry2(function _xdropLastWhile(fn, xf) {\n        return new XDropLastWhile(fn, xf);\n      });\n    }();\n    /**\n     * Creates a new list iteration function from an existing one by adding two new\n     * parameters to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that\n     * more closely resembles `Array.prototype.map`. Note that this will only work\n     * for functions in which the iteration callback function is the first\n     * parameter, and where the list is the last parameter. (This latter might be\n     * unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n\n\n    var addIndex = _curry1(function addIndex(fn) {\n      return curryN(fn.length, function () {\n        var idx = 0;\n        var origFn = arguments[0];\n        var list = arguments[arguments.length - 1];\n\n        var args = _slice(arguments);\n\n        args[0] = function () {\n          var result = origFn.apply(this, _concat(arguments, [idx, list]));\n          idx += 1;\n          return result;\n        };\n\n        return fn.apply(this, args);\n      });\n    });\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 2 parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n\n\n    var binary = _curry1(function binary(fn) {\n      return nAry(2, fn);\n    });\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are not\n     * copied, but assigned by their reference.\n     *\n     * Dispatches to a `clone` method if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n\n\n    var clone = _curry1(function clone(value) {\n      return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n    });\n    /**\n     * Returns a curried equivalent of the provided function. The curried function\n     * has two unusual capabilities. First, its arguments needn't be provided one\n     * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n\n\n    var curry = _curry1(function curry(fn) {\n      return curryN(fn.length, fn);\n    });\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * Dispatches to the `drop` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take, R.transduce\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n\n\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n      return slice(Math.max(0, n), Infinity, xs);\n    }));\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n\n\n    var dropLast = _curry2(_dispatchable('dropLast', _xdropLast, _dropLast));\n    /**\n     * Returns a new list excluding all the tailing elements of a given list which\n     * satisfy the supplied predicate function. It passes each value from the right\n     * to the supplied predicate function, skipping elements while the predicate\n     * function returns `true`. The predicate function is applied to one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile, R.addIndex\n     * @example\n     *\n     *      var lteThree = x => x <= 3;\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n     */\n\n\n    var dropLastWhile = _curry2(_dispatchable('dropLastWhile', _xdropLastWhile, _dropLastWhile));\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n     * cyclical data structures.\n     *\n     * Dispatches symmetrically to the `equals` methods of both arguments, if\n     * present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n\n\n    var equals = _curry2(function equals(a, b) {\n      return _equals(a, b, [], []);\n    });\n    /**\n     * Takes a predicate and a \"filterable\", and returns a new filterable of the\n     * same type containing the members of the given filterable which satisfy the\n     * given predicate.\n     *\n     * Dispatches to the `filter` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.reject, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    // else\n\n\n    var filter = _curry2(_dispatchable('filter', _xfilter, function (pred, filterable) {\n      return _isObject(filterable) ? _reduce(function (acc, key) {\n        if (pred(filterable[key])) {\n          acc[key] = filterable[key];\n        }\n\n        return acc;\n      }, {}, keys(filterable)) : // else\n      _filter(pred, filterable);\n    }));\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays)\n     * and putting them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n\n\n    var flatten = _curry1(_makeFlat(true));\n    /**\n     * Returns a new function much like the supplied one, except that the first two\n     * arguments' order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n\n\n    var flip = _curry1(function flip(fn) {\n      return curry(function (a, b) {\n        var args = _slice(arguments);\n\n        args[0] = b;\n        args[1] = a;\n        return fn.apply(this, args);\n      });\n    });\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {*}\n     * @see R.tail, R.init, R.last\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n\n\n    var head = nth(0);\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.last, R.head, R.tail\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n\n    var init = slice(0, -1);\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @return {Array} A new list containing those elements common to both lists.\n     * @see R.intersection\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n      var lookupList, filteredList;\n\n      if (list1.length > list2.length) {\n        lookupList = list1;\n        filteredList = list2;\n      } else {\n        lookupList = list2;\n        filteredList = list1;\n      }\n\n      var results = [];\n      var idx = 0;\n\n      while (idx < filteredList.length) {\n        if (_containsWith(pred, filteredList[idx], lookupList)) {\n          results[results.length] = filteredList[idx];\n        }\n\n        idx += 1;\n      }\n\n      return uniqWith(pred, results);\n    });\n    /**\n     * Transforms the items of the list with the transducer and appends the\n     * transformed items to the accumulator using an appropriate iterator function\n     * based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated\n     * items will be appended to arrays and concatenated to strings. Objects will\n     * be merged directly or 2-item arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity\n     * reducing iterator function, step, 0-arity initial value function, init, and\n     * 1-arity result extraction function result. The step function is used as the\n     * iterator function in reduce. The result function is used to convert the\n     * final accumulator into the return type and in most cases is R.identity. The\n     * init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n\n\n    var into = _curry3(function into(acc, xf, list) {\n      return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n    });\n    /**\n     * Same as R.invertObj, however this accounts for objects with duplicate values\n     * by putting the values into an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n\n\n    var invert = _curry1(function invert(obj) {\n      var props = keys(obj);\n      var len = props.length;\n      var idx = 0;\n      var out = {};\n\n      while (idx < len) {\n        var key = props[idx];\n        var val = obj[key];\n        var list = _has(val, out) ? out[val] : out[val] = [];\n        list[list.length] = key;\n        idx += 1;\n      }\n\n      return out;\n    });\n    /**\n     * Returns a new object with the keys of the given object as values, and the\n     * values of the given object, which are coerced to strings, as keys. Note\n     * that the last key found is preferred when handling the same value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n\n\n    var invertObj = _curry1(function invertObj(obj) {\n      var props = keys(obj);\n      var len = props.length;\n      var idx = 0;\n      var out = {};\n\n      while (idx < len) {\n        var key = props[idx];\n        out[obj[key]] = key;\n        idx += 1;\n      }\n\n      return out;\n    });\n    /**\n     * Returns `true` if the given value is its type's empty value; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig a -> Boolean\n     * @param {*} x\n     * @return {Boolean}\n     * @see R.empty\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty({});          //=> true\n     *      R.isEmpty({length: 0}); //=> false\n     */\n\n\n    var isEmpty = _curry1(function isEmpty(x) {\n      return x != null && equals(x, empty(x));\n    });\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.init, R.head, R.tail\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n\n\n    var last = nth(-1);\n    /**\n     * Returns the position of the last occurrence of an item in an array, or -1 if\n     * the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n      if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n        return xs.lastIndexOf(target);\n      } else {\n        var idx = xs.length - 1;\n\n        while (idx >= 0) {\n          if (equals(xs[idx], target)) {\n            return idx;\n          }\n\n          idx -= 1;\n        }\n\n        return -1;\n      }\n    });\n    /**\n     * Takes a function and\n     * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n     * applies the function to each of the functor's values, and returns\n     * a functor of the same shape.\n     *\n     * Ramda provides suitable `map` implementations for `Array` and `Object`,\n     * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n     *\n     * Dispatches to the `map` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * Also treats functions as functors and will compose them together.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Functor f => (a -> b) -> f a -> f b\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @see R.transduce, R.addIndex\n     * @example\n     *\n     *      var double = x => x * 2;\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     *\n     *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n     */\n\n\n    var map = _curry2(_dispatchable('map', _xmap, function map(fn, functor) {\n      switch (Object.prototype.toString.call(functor)) {\n        case '[object Function]':\n          return curryN(functor.length, function () {\n            return fn.call(this, functor.apply(this, arguments));\n          });\n\n        case '[object Object]':\n          return _reduce(function (acc, key) {\n            acc[key] = fn(functor[key]);\n            return acc;\n          }, {}, keys(functor));\n\n        default:\n          return _map(fn, functor);\n      }\n    }));\n    /**\n     * An Object-specific version of `map`. The function is applied to three\n     * arguments: *(value, key, obj)*. If only the value is significant, use\n     * `map` instead.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig ((*, String, Object) -> *) -> Object -> Object\n     * @param {Function} fn\n     * @param {Object} obj\n     * @return {Object}\n     * @see R.map\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n\n\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n      return _reduce(function (acc, key) {\n        acc[key] = fn(obj[key], key, obj);\n        return acc;\n      }, {}, keys(obj));\n    });\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the values\n     * associated with the key in each object, with the result being used as the\n     * value associated with the key in the returned object. The key will be\n     * excluded from the returned object if the resulting value is `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWithKey\n     * @example\n     *\n     *      R.mergeWith(R.concat,\n     *                  { a: true, values: [10, 20] },\n     *                  { b: true, values: [15, 35] });\n     *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n     */\n\n\n    var mergeWith = _curry3(function mergeWith(fn, l, r) {\n      return mergeWithKey(function (_, _l, _r) {\n        return fn(_l, _r);\n      }, l, r);\n    });\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided initially followed by the arguments provided to `g`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partialRight\n     * @example\n     *\n     *      var multiply = (a, b) => a * b;\n     *      var double = R.partial(multiply, [2]);\n     *      double(2); //=> 4\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var sayHello = R.partial(greet, ['Hello']);\n     *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n\n\n    var partial = _createPartialApplicator(_concat);\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided to `g` followed by the arguments provided initially.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partial\n     * @example\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n\n\n    var partialRight = _createPartialApplicator(flip(_concat));\n    /**\n     * Determines whether a nested path on an object has a specific value, in\n     * `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n\n\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n      return equals(path(_path, obj), val);\n    });\n    /**\n     * Returns a new list by plucking the same named property off all objects in\n     * the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @see R.props\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n\n\n    var pluck = _curry2(function pluck(p, list) {\n      return map(prop(p), list);\n    });\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n\n\n    var project = useWith(_map, [pickAll, identity]);\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n\n    var propEq = _curry3(function propEq(name, val, obj) {\n      return equals(val, obj[name]);\n    });\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It may use\n     * `R.reduced` to shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     *\n     * Dispatches to the `reduce` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduced, R.addIndex\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var plus = (a, b) => a + b;\n     *\n     *      R.reduce(plus, 10, numbers); //=> 16\n     */\n\n\n    var reduce = _curry3(_reduce);\n    /**\n     * Groups the elements of the list according to the result of calling\n     * the String-returning function `keyFn` on each element and reduces the elements\n     * of each group to a single value via the reducer function `valueFn`.\n     *\n     * This function is basically a more general `groupBy` function.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n     * @param {Function} valueFn The function that reduces the elements of each group to a single\n     *        value. Receives two values, accumulator for a particular group and the current element.\n     * @param {*} acc The (initial) accumulator value for each group.\n     * @param {Function} keyFn The function that maps the list's element into a key.\n     * @param {Array} list The array to group.\n     * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n     *         `valueFn` for elements which produced that key when passed to `keyFn`.\n     * @see R.groupBy, R.reduce\n     * @example\n     *\n     *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n     *      var namesByGrade = reduceToNamesBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Lucy', score: 92},\n     *                      {name: 'Drew', score: 85},\n     *                      // ...\n     *                      {name: 'Bart', score: 62}];\n     *      namesByGrade(students);\n     *      // {\n     *      //   'A': ['Lucy'],\n     *      //   'B': ['Drew']\n     *      //   // ...,\n     *      //   'F': ['Bart']\n     *      // }\n     */\n\n\n    var reduceBy = _curryN(4, [], _dispatchable('reduceBy', _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n      return _reduce(function (acc, elt) {\n        var key = keyFn(elt);\n        acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n        return acc;\n      }, {}, list);\n    }));\n    /**\n     * Like `reduce`, `reduceWhile` returns a single item by iterating through\n     * the list, successively calling the iterator function. `reduceWhile` also\n     * takes a predicate that is evaluated before each step. If the predicate returns\n     * `false`, it \"short-circuits\" the iteration and returns the current value\n     * of the accumulator.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.22.0\n     * @category List\n     * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n     * @param {Function} pred The predicate. It is passed the accumulator and the\n     *        current element.\n     * @param {Function} fn The iterator function. Receives two values, the\n     *        accumulator and the current element.\n     * @param {*} a The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduce, R.reduced\n     * @example\n     *\n     *      var isOdd = (acc, x) => x % 2 === 1;\n     *      var xs = [1, 3, 5, 60, 777, 800];\n     *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n     *\n     *      var ys = [2, 4, 6]\n     *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n     */\n\n\n    var reduceWhile = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n      return _reduce(function (acc, x) {\n        return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n      }, a, list);\n    });\n    /**\n     * The complement of `filter`.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.filter, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isOdd = (n) => n % 2 === 1;\n     *\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n\n\n    var reject = _curry2(function reject(pred, filterable) {\n      return filter(_complement(pred), filterable);\n    });\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n\n\n    var repeat = _curry2(function repeat(value, n) {\n      return times(always(value), n);\n    });\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n\n\n    var sum = reduce(add, 0);\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n\n    var takeLast = _curry2(function takeLast(n, xs) {\n      return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single\n     * item by iterating through the list, successively calling the transformed\n     * iterator function and passing it an accumulator value and the current value\n     * from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be\n     * wrapped as a transformer to initialize the transducer. A transformer can be\n     * passed directly in place of an iterator function. In both cases, iteration\n     * may be stopped early with the `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a\n     * transformer and can be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result\n     * extraction function, result. The step function is used as the iterator\n     * function in reduce. The result function is used to convert the final\n     * accumulator into the return type and in most cases is R.identity. The init\n     * function can be used to provide an initial accumulator, but is ignored by\n     * transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduce, R.reduced, R.into\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n\n\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n      return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list. Duplication is determined according to the value returned by\n     * applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n      return uniqWith(pred, _concat(list1, list2));\n    });\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n\n\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n      return where(map(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n      var preservingReduced = function preservingReduced(xf) {\n        return {\n          '@@transducer/init': _xfBase.init,\n          '@@transducer/result': function transducerResult(result) {\n            return xf['@@transducer/result'](result);\n          },\n          '@@transducer/step': function transducerStep(result, input) {\n            var ret = xf['@@transducer/step'](result, input);\n            return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n          }\n        };\n      };\n\n      return function _xcat(xf) {\n        var rxf = preservingReduced(xf);\n        return {\n          '@@transducer/init': _xfBase.init,\n          '@@transducer/result': function transducerResult(result) {\n            return rxf['@@transducer/result'](result);\n          },\n          '@@transducer/step': function transducerStep(result, input) {\n            return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n          }\n        };\n      };\n    }(); // Array.prototype.indexOf doesn't exist below IE9\n    // manually crawl the list to distinguish between +0 and -0\n    // NaN\n    // non-zero numbers can utilise Set\n    // all these types can utilise Set\n    // null can utilise Set\n    // anything else not covered above, defer to R.equals\n\n\n    var _indexOf = function _indexOf(list, a, idx) {\n      var inf, item; // Array.prototype.indexOf doesn't exist below IE9\n\n      if (typeof list.indexOf === 'function') {\n        switch (typeof a === 'undefined' ? 'undefined' : _typeof(a)) {\n          case 'number':\n            if (a === 0) {\n              // manually crawl the list to distinguish between +0 and -0\n              inf = 1 / a;\n\n              while (idx < list.length) {\n                item = list[idx];\n\n                if (item === 0 && 1 / item === inf) {\n                  return idx;\n                }\n\n                idx += 1;\n              }\n\n              return -1;\n            } else if (a !== a) {\n              // NaN\n              while (idx < list.length) {\n                item = list[idx];\n\n                if (typeof item === 'number' && item !== item) {\n                  return idx;\n                }\n\n                idx += 1;\n              }\n\n              return -1;\n            } // non-zero numbers can utilise Set\n\n\n            return list.indexOf(a, idx);\n          // all these types can utilise Set\n\n          case 'string':\n          case 'boolean':\n          case 'function':\n          case 'undefined':\n            return list.indexOf(a, idx);\n\n          case 'object':\n            if (a === null) {\n              // null can utilise Set\n              return list.indexOf(a, idx);\n            }\n\n        }\n      } // anything else not covered above, defer to R.equals\n\n\n      while (idx < list.length) {\n        if (equals(list[idx], a)) {\n          return idx;\n        }\n\n        idx += 1;\n      }\n\n      return -1;\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n      return map(f, _flatCat(xf));\n    });\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if every one of the provided predicates is satisfied\n     * by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.anyPass\n     * @example\n     *\n     *      var isQueen = R.propEq('rank', 'Q');\n     *      var isSpade = R.propEq('suit', '♠︎');\n     *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n     *\n     *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n     *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n     */\n\n\n    var allPass = _curry1(function allPass(preds) {\n      return curryN(reduce(max, 0, pluck('length', preds)), function () {\n        var idx = 0;\n        var len = preds.length;\n\n        while (idx < len) {\n          if (!preds[idx].apply(this, arguments)) {\n            return false;\n          }\n\n          idx += 1;\n        }\n\n        return true;\n      });\n    });\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if at least one of the provided predicates is\n     * satisfied by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.allPass\n     * @example\n     *\n     *      var gte = R.anyPass([R.gt, R.equals]);\n     *\n     *      gte(3, 2); //=> true\n     *      gte(2, 2); //=> true\n     *      gte(2, 3); //=> false\n     */\n\n\n    var anyPass = _curry1(function anyPass(preds) {\n      return curryN(reduce(max, 0, pluck('length', preds)), function () {\n        var idx = 0;\n        var len = preds.length;\n\n        while (idx < len) {\n          if (preds[idx].apply(this, arguments)) {\n            return true;\n          }\n\n          idx += 1;\n        }\n\n        return false;\n      });\n    });\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * Dispatches to the `ap` method of the second argument, if present. Also\n     * treats curried functions as applicatives.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig [a -> b] -> [a] -> [b]\n     * @sig Apply f => f (a -> b) -> f a -> f b\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    // else\n\n\n    var ap = _curry2(function ap(applicative, fn) {\n      return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? function (x) {\n        return applicative(x)(fn(x));\n      } : // else\n      _reduce(function (acc, f) {\n        return _concat(acc, map(f, fn));\n      }, [], applicative);\n    });\n    /**\n     * Given a spec object recursively mapping properties to functions, creates a\n     * function producing an object of the same structure, by mapping each property\n     * to the result of calling its associated function with the supplied arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Function\n     * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n     * @param {Object} spec an object recursively mapping properties to functions for\n     *        producing the values for these properties.\n     * @return {Function} A function that returns an object of the same structure\n     * as `spec', with each property set to the value returned by calling its\n     * associated function with the supplied arguments.\n     * @see R.converge, R.juxt\n     * @example\n     *\n     *      var getMetrics = R.applySpec({\n     *                                      sum: R.add,\n     *                                      nested: { mul: R.multiply }\n     *                                   });\n     *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n     */\n\n\n    var applySpec = _curry1(function applySpec(spec) {\n      spec = map(function (v) {\n        return typeof v == 'function' ? v : applySpec(v);\n      }, spec);\n      return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n        var args = arguments;\n        return map(function (f) {\n          return apply(f, args);\n        }, spec);\n      });\n    });\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right branch\n     * produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call, [\n     *                                  R.pipe(R.prop('indent'), indentN),\n     *                                  R.prop('value')\n     *                              ]);\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n\n\n    var call = curry(function call(fn) {\n      return fn.apply(this, _slice(arguments, 1));\n    });\n    /**\n     * `chain` maps a function over a list and concatenates the results. `chain`\n     * is also known as `flatMap` in some libraries\n     *\n     * Dispatches to the `chain` method of the second argument, if present,\n     * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig Chain m => (a -> m b) -> m a -> m b\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = n => [n, n];\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, monad) {\n      if (typeof monad === 'function') {\n        return function () {\n          return monad.call(this, fn.apply(this, arguments)).apply(this, arguments);\n        };\n      }\n\n      return _makeFlat(false)(map(fn, monad));\n    }));\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the arguments\n     * to `fn` are applied to each of the predicates in turn until one returns a\n     * \"truthy\" value, at which point `fn` returns the result of applying its\n     * arguments to the corresponding transformer. If none of the predicates\n     * matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n\n\n    var cond = _curry1(function cond(pairs) {\n      var arity = reduce(max, 0, map(function (pair) {\n        return pair[0].length;\n      }, pairs));\n      return _arity(arity, function () {\n        var idx = 0;\n\n        while (idx < pairs.length) {\n          if (pairs[idx][0].apply(this, arguments)) {\n            return pairs[idx][1].apply(this, arguments);\n          }\n\n          idx += 1;\n        }\n      });\n    });\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type. The arity of the function\n     * returned is specified to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = () => {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n\n\n    var constructN = _curry2(function constructN(n, Fn) {\n      if (n > 10) {\n        throw new Error('Constructor with greater than ten arguments');\n      }\n\n      if (n === 0) {\n        return function () {\n          return new Fn();\n        };\n      }\n\n      return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n        switch (arguments.length) {\n          case 1:\n            return new Fn($0);\n\n          case 2:\n            return new Fn($0, $1);\n\n          case 3:\n            return new Fn($0, $1, $2);\n\n          case 4:\n            return new Fn($0, $1, $2, $3);\n\n          case 5:\n            return new Fn($0, $1, $2, $3, $4);\n\n          case 6:\n            return new Fn($0, $1, $2, $3, $4, $5);\n\n          case 7:\n            return new Fn($0, $1, $2, $3, $4, $5, $6);\n\n          case 8:\n            return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n\n          case 9:\n            return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n\n          case 10:\n            return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n        }\n      }));\n    });\n    /**\n     * Accepts a converging function and a list of branching functions and returns\n     * a new function. When invoked, this new function is applied to some\n     * arguments, each branching function is applied to those same arguments. The\n     * results of each branching function are passed as arguments to the converging\n     * function to produce the return value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.2\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {Array} functions A list of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = (a, b) => a + b;\n     *      var multiply = (a, b) => a * b;\n     *      var subtract = (a, b) => a - b;\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, [add, subtract])(1, 2); //=> -3\n     *\n     *      var add3 = (a, b, c) => a + b + c;\n     *      R.converge(add3, [multiply, add, subtract])(1, 2); //=> 4\n     */\n\n\n    var converge = _curry2(function converge(after, fns) {\n      return curryN(reduce(max, 0, pluck('length', fns)), function () {\n        var args = arguments;\n        var context = this;\n        return after.apply(context, _map(function (fn) {\n          return fn.apply(context, args);\n        }, fns));\n      });\n    });\n    /**\n     * Counts the elements of a list according to how many match each value of a\n     * key generated by the supplied function. Returns an object mapping the keys\n     * produced by `fn` to the number of occurrences in the list. Note that all\n     * keys are coerced to strings because of how JavaScript objects work.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n\n\n    var countBy = reduceBy(function (acc, elem) {\n      return acc + 1;\n    }, 0);\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements. The\n     * first element in a series of equal element is the one being preserved.\n     *\n     * Dispatches to the `dropRepeatsWith` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n     */\n\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n      var result = [];\n      var idx = 1;\n      var len = list.length;\n\n      if (len !== 0) {\n        result[0] = list[0];\n\n        while (idx < len) {\n          if (!pred(last(result), list[idx])) {\n            result[result.length] = list[idx];\n          }\n\n          idx += 1;\n        }\n      }\n\n      return result;\n    }));\n    /**\n     * Takes a function and two values in its domain and returns `true` if the\n     * values map to the same value in the codomain; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Relation\n     * @sig (a -> b) -> a -> a -> Boolean\n     * @param {Function} f\n     * @param {*} x\n     * @param {*} y\n     * @return {Boolean}\n     * @example\n     *\n     *      R.eqBy(Math.abs, 5, -5); //=> true\n     */\n\n\n    var eqBy = _curry3(function eqBy(f, x, y) {\n      return equals(f(x), f(y));\n    });\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms, for\n     * the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n\n\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n      return equals(obj1[prop], obj2[prop]);\n    });\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of\n     * calling a String-returning function on each element, and grouping the\n     * results according to values returned.\n     *\n     * Dispatches to the `groupBy` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @see R.transduce\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n\n\n    var groupBy = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {\n      if (acc == null) {\n        acc = [];\n      }\n\n      acc.push(item);\n      return acc;\n    }, null)));\n    /**\n     * Given a function that generates a key, turns a list of objects into an\n     * object indexing the objects by the given key. Note that if multiple\n     * objects generate the same value for the indexing key only the last value\n     * will be included in the generated object.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} array The array of objects to index\n     * @return {Object} An object indexing each array element by the given property.\n     * @example\n     *\n     *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n     *      R.indexBy(R.prop('id'), list);\n     *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n     */\n\n\n    var indexBy = reduceBy(function (acc, elem) {\n      return elem;\n    }, null);\n    /**\n     * Returns the position of the first occurrence of an item in an array, or -1\n     * if the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n\n    var indexOf = _curry2(function indexOf(target, xs) {\n      return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n    /**\n     * juxt applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Function\n     * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n     * @param {Array} fns An array of functions\n     * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n     * @see R.applySpec\n     * @example\n     *\n     *      var getRange = R.juxt([Math.min, Math.max]);\n     *      getRange(3, 4, 9, -3); //=> [-3, 9]\n     */\n\n\n    var juxt = _curry1(function juxt(fns) {\n      return converge(_arrayOf, fns);\n    });\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n\n\n    var lens = _curry2(function lens(getter, setter) {\n      return function (toFunctorFn) {\n        return function (target) {\n          return map(function (focus) {\n            return setter(focus, target);\n          }, toFunctorFn(getter(target)));\n        };\n      };\n    });\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n\n\n    var lensIndex = _curry1(function lensIndex(n) {\n      return lens(nth(n), update(n));\n    });\n    /**\n     * Returns a lens whose focus is the specified path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig [String] -> Lens s a\n     * @param {Array} path The path to use.\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xyLens = R.lensPath(['x', 'y']);\n     *\n     *      R.view(xyLens, {x: {y: 2, z: 3}});            //=> 2\n     *      R.set(xyLens, 4, {x: {y: 2, z: 3}});          //=> {x: {y: 4, z: 3}}\n     *      R.over(xyLens, R.negate, {x: {y: 2, z: 3}});  //=> {x: {y: -2, z: 3}}\n     */\n\n\n    var lensPath = _curry1(function lensPath(p) {\n      return lens(path(p), assocPath(p));\n    });\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n\n\n    var lensProp = _curry1(function lensProp(k) {\n      return lens(prop(k), assoc(k));\n    });\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n     * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.lift, R.ap\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, (...args) => R.sum(args)));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n\n\n    var liftN = _curry2(function liftN(arity, fn) {\n      var lifted = curryN(arity, fn);\n      return curryN(arity, function () {\n        return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n      });\n    });\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n\n\n    var mean = _curry1(function mean(list) {\n      return sum(list) / list.length;\n    });\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n\n\n    var median = _curry1(function median(list) {\n      var len = list.length;\n\n      if (len === 0) {\n        return NaN;\n      }\n\n      var width = 2 - len % 2;\n      var idx = (len - width) / 2;\n      return mean(_slice(list).sort(function (a, b) {\n        return a < b ? -1 : a > b ? 1 : 0;\n      }).slice(idx, idx + width));\n    });\n    /**\n     * Takes a predicate and a list or other \"filterable\" object and returns the\n     * pair of filterable objects of the same type of elements which do and do not\n     * satisfy, the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n     * @param {Function} pred A predicate to determine which side the element belongs to.\n     * @param {Array} filterable the list (or other filterable) to partition.\n     * @return {Array} An array, containing first the subset of elements that satisfy the\n     *         predicate, and second the subset of elements that do not satisfy.\n     * @see R.filter, R.reject\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     *\n     *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n     *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n     */\n\n\n    var partition = juxt([filter, reject]);\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * **Note:** The result of pipe is not automatically curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n\n    var pipe = function pipe() {\n      if (arguments.length === 0) {\n        throw new Error('pipe requires at least one argument');\n      }\n\n      return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining functions\n     * must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n\n\n    var pipeP = function pipeP() {\n      if (arguments.length === 0) {\n        throw new Error('pipeP requires at least one argument');\n      }\n\n      return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n\n\n    var product = reduce(multiply, 1);\n    /**\n     * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n     * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n     * Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n     * @param {Function} of\n     * @param {*} traversable\n     * @return {*}\n     * @see R.traverse\n     * @example\n     *\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     *\n     *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n     *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n     */\n\n    var sequence = _curry2(function sequence(of, traversable) {\n      return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (acc, x) {\n        return ap(map(prepend, x), acc);\n      }, of([]), traversable);\n    });\n    /**\n     * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n     * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n     * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n     * into an Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n     * @param {Function} of\n     * @param {Function} f\n     * @param {*} traversable\n     * @return {*}\n     * @see R.sequence\n     * @example\n     *\n     *      // Returns `Nothing` if the given divisor is `0`\n     *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n     *\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n     */\n\n\n    var traverse = _curry3(function traverse(of, f, traversable) {\n      return sequence(of, map(f, traversable));\n    });\n    /**\n     * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n     * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig Chain c => c (c a) -> c a\n     * @param {*} list\n     * @return {*}\n     * @see R.flatten, R.chain\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n\n\n    var unnest = chain(_identity);\n\n    var _contains = function _contains(a, list) {\n      return _indexOf(list, a, 0) >= 0;\n    }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n    var _toString = function _toString(x, seen) {\n      var recur = function recur(y) {\n        var xs = seen.concat([x]);\n        return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n      }; //  mapPairs :: (Object, [String]) -> [String]\n\n\n      var mapPairs = function mapPairs(obj, keys) {\n        return _map(function (k) {\n          return _quote(k) + ': ' + recur(obj[k]);\n        }, keys.slice().sort());\n      };\n\n      switch (Object.prototype.toString.call(x)) {\n        case '[object Arguments]':\n          return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n\n        case '[object Array]':\n          return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n            return /^\\d+$/.test(k);\n          }, keys(x)))).join(', ') + ']';\n\n        case '[object Boolean]':\n          return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n\n        case '[object Date]':\n          return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n\n        case '[object Null]':\n          return 'null';\n\n        case '[object Number]':\n          return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n\n        case '[object String]':\n          return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n\n        case '[object Undefined]':\n          return 'undefined';\n\n        default:\n          if (typeof x.toString === 'function') {\n            var repr = x.toString();\n\n            if (repr !== '[object Object]') {\n              return repr;\n            }\n          }\n\n          return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n      }\n    };\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * **Note:** The result of compose is not automatically curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n\n\n    var compose = function compose() {\n      if (arguments.length === 0) {\n        throw new Error('compose requires at least one argument');\n      }\n\n      return pipe.apply(this, reverse(arguments));\n    };\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.pipeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n\n\n    var composeK = function composeK() {\n      return compose.apply(this, prepend(identity, map(chain, arguments)));\n    };\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n\n\n    var composeP = function composeP() {\n      if (arguments.length === 0) {\n        throw new Error('composeP requires at least one argument');\n      }\n\n      return pipeP.apply(this, reverse(arguments));\n    };\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = config => {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n\n\n    var construct = _curry1(function construct(Fn) {\n      return constructN(Fn.length, Fn);\n    });\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n     * least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     * @see R.any\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n\n\n    var contains = _curry2(_contains);\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n\n\n    var difference = _curry2(function difference(first, second) {\n      var out = [];\n      var idx = 0;\n      var firstLen = first.length;\n\n      while (idx < firstLen) {\n        if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n          out[out.length] = first[idx];\n        }\n\n        idx += 1;\n      }\n\n      return out;\n    });\n    /**\n     * Returns a new list without any consecutively repeating elements. `R.equals`\n     * is used to determine equality.\n     *\n     * Dispatches to the `dropRepeats` method of the first argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n\n\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n     * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.liftN\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry((a, b, c) => a + b + c));\n     *\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry((a, b, c, d, e) => a + b + c + d + e));\n     *\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n\n\n    var lift = _curry1(function lift(fn) {\n      return liftN(fn.length, fn);\n    });\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n\n\n    var omit = _curry2(function omit(names, obj) {\n      var result = {};\n\n      for (var prop in obj) {\n        if (!_contains(prop, names)) {\n          result[prop] = obj[prop];\n        }\n      }\n\n      return result;\n    });\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.composeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n\n\n    var pipeK = function pipeK() {\n      return composeK.apply(this, reverse(arguments));\n    };\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n\n\n    var toString = _curry1(function toString(val) {\n      return _toString(val, []);\n    });\n    /**\n     * Returns a new list without values in the first argument.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The values to be removed from `list2`.\n     * @param {Array} list2 The array to remove values from.\n     * @return {Array} The new array without values in `list1`.\n     * @see R.transduce\n     * @example\n     *\n     *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n     */\n\n\n    var without = _curry2(function (xs, list) {\n      return reject(flip(_contains)(xs), list);\n    }); // A simple Set type that honours R.equals semantics\n\n    /* globals Set */\n    // until we figure out why jsdoc chokes on this\n    // @param item The item to add to the Set\n    // @returns {boolean} true if the item did not exist prior, otherwise false\n    //\n    //\n    // @param item The item to check for existence in the Set\n    // @returns {boolean} true if the item exists in the Set, otherwise false\n    //\n    //\n    // Combines the logic for checking whether an item is a member of the set and\n    // for adding a new item to the set.\n    //\n    // @param item       The item to check or add to the Set instance.\n    // @param shouldAdd  If true, the item will be added to the set if it doesn't\n    //                   already exist.\n    // @param set        The set instance to check or add to.\n    // @return {boolean} true if the item already existed, otherwise false.\n    //\n    // distinguish between +0 and -0\n    // these types can all utilise the native Set\n    // set._items['boolean'] holds a two element array\n    // representing [ falseExists, trueExists ]\n    // compare functions for reference equality\n\n    /* falls through */\n    // reduce the search size of heterogeneous sets by creating buckets\n    // for each type.\n    // scan through all previously applied items\n\n\n    var _Set = function () {\n      function _Set() {\n        /* globals Set */\n        this._nativeSet = typeof Set === 'function' ? new Set() : null;\n        this._items = {};\n      } // until we figure out why jsdoc chokes on this\n      // @param item The item to add to the Set\n      // @returns {boolean} true if the item did not exist prior, otherwise false\n      //\n\n\n      _Set.prototype.add = function (item) {\n        return !hasOrAdd(item, true, this);\n      }; //\n      // @param item The item to check for existence in the Set\n      // @returns {boolean} true if the item exists in the Set, otherwise false\n      //\n\n\n      _Set.prototype.has = function (item) {\n        return hasOrAdd(item, false, this);\n      }; //\n      // Combines the logic for checking whether an item is a member of the set and\n      // for adding a new item to the set.\n      //\n      // @param item       The item to check or add to the Set instance.\n      // @param shouldAdd  If true, the item will be added to the set if it doesn't\n      //                   already exist.\n      // @param set        The set instance to check or add to.\n      // @return {boolean} true if the item already existed, otherwise false.\n      //\n\n\n      function hasOrAdd(item, shouldAdd, set) {\n        var type = typeof item === 'undefined' ? 'undefined' : _typeof(item);\n        var prevSize, newSize;\n\n        switch (type) {\n          case 'string':\n          case 'number':\n            // distinguish between +0 and -0\n            if (item === 0 && 1 / item === -Infinity) {\n              if (set._items['-0']) {\n                return true;\n              } else {\n                if (shouldAdd) {\n                  set._items['-0'] = true;\n                }\n\n                return false;\n              }\n            } // these types can all utilise the native Set\n\n\n            if (set._nativeSet !== null) {\n              if (shouldAdd) {\n                prevSize = set._nativeSet.size;\n\n                set._nativeSet.add(item);\n\n                newSize = set._nativeSet.size;\n                return newSize === prevSize;\n              } else {\n                return set._nativeSet.has(item);\n              }\n            } else {\n              if (!(type in set._items)) {\n                if (shouldAdd) {\n                  set._items[type] = {};\n                  set._items[type][item] = true;\n                }\n\n                return false;\n              } else if (item in set._items[type]) {\n                return true;\n              } else {\n                if (shouldAdd) {\n                  set._items[type][item] = true;\n                }\n\n                return false;\n              }\n            }\n\n          case 'boolean':\n            // set._items['boolean'] holds a two element array\n            // representing [ falseExists, trueExists ]\n            if (type in set._items) {\n              var bIdx = item ? 1 : 0;\n\n              if (set._items[type][bIdx]) {\n                return true;\n              } else {\n                if (shouldAdd) {\n                  set._items[type][bIdx] = true;\n                }\n\n                return false;\n              }\n            } else {\n              if (shouldAdd) {\n                set._items[type] = item ? [false, true] : [true, false];\n              }\n\n              return false;\n            }\n\n          case 'function':\n            // compare functions for reference equality\n            if (set._nativeSet !== null) {\n              if (shouldAdd) {\n                prevSize = set._nativeSet.size;\n\n                set._nativeSet.add(item);\n\n                newSize = set._nativeSet.size;\n                return newSize > prevSize;\n              } else {\n                return set._nativeSet.has(item);\n              }\n            } else {\n              if (!(type in set._items)) {\n                if (shouldAdd) {\n                  set._items[type] = [item];\n                }\n\n                return false;\n              }\n\n              if (!_contains(item, set._items[type])) {\n                if (shouldAdd) {\n                  set._items[type].push(item);\n                }\n\n                return false;\n              }\n\n              return true;\n            }\n\n          case 'undefined':\n            if (set._items[type]) {\n              return true;\n            } else {\n              if (shouldAdd) {\n                set._items[type] = true;\n              }\n\n              return false;\n            }\n\n          case 'object':\n            if (item === null) {\n              if (!set._items['null']) {\n                if (shouldAdd) {\n                  set._items['null'] = true;\n                }\n\n                return false;\n              }\n\n              return true;\n            }\n\n          /* falls through */\n\n          default:\n            // reduce the search size of heterogeneous sets by creating buckets\n            // for each type.\n            type = Object.prototype.toString.call(item);\n\n            if (!(type in set._items)) {\n              if (shouldAdd) {\n                set._items[type] = [item];\n              }\n\n              return false;\n            } // scan through all previously applied items\n\n\n            if (!_contains(item, set._items[type])) {\n              if (shouldAdd) {\n                set._items[type].push(item);\n              }\n\n              return false;\n            }\n\n            return true;\n        }\n      }\n\n      return _Set;\n    }();\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation,\n     * returning the result of the first function if it is false-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * false-y value.\n     *\n     * In addition to functions, `R.both` also accepts any fantasy-land compatible\n     * applicative functor.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n\n\n    var both = _curry2(function both(f, g) {\n      return _isFunction(f) ? function _both() {\n        return f.apply(this, arguments) && g.apply(this, arguments);\n      } : lift(and)(f, g);\n    });\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * `R.complement` will work on all other functors as well.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n\n\n    var complement = lift(not);\n    /**\n     * Returns the result of concatenating the given lists or strings.\n     *\n     * Note: `R.concat` expects both arguments to be of the same type,\n     * unlike the native `Array.prototype.concat` method. It will throw\n     * an error if you `concat` an Array with a non-Array value.\n     *\n     * Dispatches to the `concat` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @sig String -> String -> String\n     * @param {Array|String} a\n     * @param {Array|String} b\n     * @return {Array|String}\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n\n    var concat = _curry2(function concat(a, b) {\n      if (a == null || !_isFunction(a.concat)) {\n        throw new TypeError(toString(a) + ' does not have a method named \"concat\"');\n      }\n\n      if (_isArray(a) && !_isArray(b)) {\n        throw new TypeError(toString(b) + ' is not an array');\n      }\n\n      return a.concat(b);\n    });\n    /**\n     * A function wrapping calls to the two functions in an `||` operation,\n     * returning the result of the first function if it is truth-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * truth-y value.\n     *\n     * In addition to functions, `R.either` also accepts any fantasy-land compatible\n     * applicative functor.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n\n\n    var either = _curry2(function either(f, g) {\n      return _isFunction(f) ? function _either() {\n        return f.apply(this, arguments) || g.apply(this, arguments);\n      } : lift(or)(f, g);\n    });\n    /**\n     * Turns a named method with a specified arity into a function that can be\n     * called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {String} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n\n\n    var invoker = _curry2(function invoker(arity, method) {\n      return curryN(arity + 1, function () {\n        var target = arguments[arity];\n\n        if (target != null && _isFunction(target[method])) {\n          return target[method].apply(target, _slice(arguments, 0, arity));\n        }\n\n        throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n      });\n    });\n    /**\n     * Returns a string made by inserting the `separator` between each element and\n     * concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n\n\n    var join = invoker(1, 'join');\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn`\n     * for a given argument set and returns the result. Subsequent calls to the\n     * memoized `fn` with the same argument set will not result in an additional\n     * call to `fn`; instead, the cached result for that set of arguments will be\n     * returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(n => {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n\n    var memoize = _curry1(function memoize(fn) {\n      var cache = {};\n      return _arity(fn.length, function () {\n        var key = toString(arguments);\n\n        if (!_has(key, cache)) {\n          cache[key] = fn.apply(this, arguments);\n        }\n\n        return cache[key];\n      });\n    });\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig (String | RegExp) -> String -> [String]\n     * @param {String|RegExp} sep The pattern.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n\n\n    var split = invoker(1, 'split');\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n     * @example\n     *\n     *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n     *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n     */\n\n    var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {\n      return concat(difference(list1, list2), difference(list2, list1));\n    });\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both. Duplication is determined according to the value\n     * returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifference, R.difference, R.differenceWith\n     * @example\n     *\n     *      var eqA = R.eqBy(R.prop('a'));\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n     *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n     *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n     */\n\n\n    var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n      return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n    });\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @see R.match\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n\n\n    var test = _curry2(function test(pattern, str) {\n      if (!_isRegExp(pattern)) {\n        throw new TypeError('\\u2018test\\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\n      }\n\n      return _cloneRegExp(pattern).test(str);\n    });\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n\n\n    var toLower = invoker(0, 'toLowerCase');\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n\n    var toUpper = invoker(0, 'toUpperCase');\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied function to\n     * each list element. Prefers the first item if the supplied function produces\n     * the same value on two items. `R.equals` is used for comparison.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n\n    var uniqBy = _curry2(function uniqBy(fn, list) {\n      var set = new _Set();\n      var result = [];\n      var idx = 0;\n      var appliedItem, item;\n\n      while (idx < list.length) {\n        item = list[idx];\n        appliedItem = fn(item);\n\n        if (set.add(appliedItem)) {\n          result.push(item);\n        }\n\n        idx += 1;\n      }\n\n      return result;\n    });\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list. `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n\n\n    var uniq = uniqBy(identity);\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @see R.intersectionWith\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n\n    var intersection = _curry2(function intersection(list1, list2) {\n      var lookupList, filteredList;\n\n      if (list1.length > list2.length) {\n        lookupList = list1;\n        filteredList = list2;\n      } else {\n        lookupList = list2;\n        filteredList = list1;\n      }\n\n      return uniq(_filter(flip(_contains)(lookupList), filteredList));\n    });\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n\n\n    var union = _curry2(compose(uniq, _concat));\n\n    var R = {\n      F: F,\n      T: T,\n      __: __,\n      add: add,\n      addIndex: addIndex,\n      adjust: adjust,\n      all: all,\n      allPass: allPass,\n      always: always,\n      and: and,\n      any: any,\n      anyPass: anyPass,\n      ap: ap,\n      aperture: aperture,\n      append: append,\n      apply: apply,\n      applySpec: applySpec,\n      assoc: assoc,\n      assocPath: assocPath,\n      binary: binary,\n      bind: bind,\n      both: both,\n      call: call,\n      chain: chain,\n      clamp: clamp,\n      clone: clone,\n      comparator: comparator,\n      complement: complement,\n      compose: compose,\n      composeK: composeK,\n      composeP: composeP,\n      concat: concat,\n      cond: cond,\n      construct: construct,\n      constructN: constructN,\n      contains: contains,\n      converge: converge,\n      countBy: countBy,\n      curry: curry,\n      curryN: curryN,\n      dec: dec,\n      defaultTo: defaultTo,\n      difference: difference,\n      differenceWith: differenceWith,\n      dissoc: dissoc,\n      dissocPath: dissocPath,\n      divide: divide,\n      drop: drop,\n      dropLast: dropLast,\n      dropLastWhile: dropLastWhile,\n      dropRepeats: dropRepeats,\n      dropRepeatsWith: dropRepeatsWith,\n      dropWhile: dropWhile,\n      either: either,\n      empty: empty,\n      eqBy: eqBy,\n      eqProps: eqProps,\n      equals: equals,\n      evolve: evolve,\n      filter: filter,\n      find: find,\n      findIndex: findIndex,\n      findLast: findLast,\n      findLastIndex: findLastIndex,\n      flatten: flatten,\n      flip: flip,\n      forEach: forEach,\n      fromPairs: fromPairs,\n      groupBy: groupBy,\n      groupWith: groupWith,\n      gt: gt,\n      gte: gte,\n      has: has,\n      hasIn: hasIn,\n      head: head,\n      identical: identical,\n      identity: identity,\n      ifElse: ifElse,\n      inc: inc,\n      indexBy: indexBy,\n      indexOf: indexOf,\n      init: init,\n      insert: insert,\n      insertAll: insertAll,\n      intersection: intersection,\n      intersectionWith: intersectionWith,\n      intersperse: intersperse,\n      into: into,\n      invert: invert,\n      invertObj: invertObj,\n      invoker: invoker,\n      is: is,\n      isArrayLike: isArrayLike,\n      isEmpty: isEmpty,\n      isNil: isNil,\n      join: join,\n      juxt: juxt,\n      keys: keys,\n      keysIn: keysIn,\n      last: last,\n      lastIndexOf: lastIndexOf,\n      length: length,\n      lens: lens,\n      lensIndex: lensIndex,\n      lensPath: lensPath,\n      lensProp: lensProp,\n      lift: lift,\n      liftN: liftN,\n      lt: lt,\n      lte: lte,\n      map: map,\n      mapAccum: mapAccum,\n      mapAccumRight: mapAccumRight,\n      mapObjIndexed: mapObjIndexed,\n      match: match,\n      mathMod: mathMod,\n      max: max,\n      maxBy: maxBy,\n      mean: mean,\n      median: median,\n      memoize: memoize,\n      merge: merge,\n      mergeAll: mergeAll,\n      mergeWith: mergeWith,\n      mergeWithKey: mergeWithKey,\n      min: min,\n      minBy: minBy,\n      modulo: modulo,\n      multiply: multiply,\n      nAry: nAry,\n      negate: negate,\n      none: none,\n      not: not,\n      nth: nth,\n      nthArg: nthArg,\n      objOf: objOf,\n      of: of,\n      omit: omit,\n      once: once,\n      or: or,\n      over: over,\n      pair: pair,\n      partial: partial,\n      partialRight: partialRight,\n      partition: partition,\n      path: path,\n      pathEq: pathEq,\n      pathOr: pathOr,\n      pathSatisfies: pathSatisfies,\n      pick: pick,\n      pickAll: pickAll,\n      pickBy: pickBy,\n      pipe: pipe,\n      pipeK: pipeK,\n      pipeP: pipeP,\n      pluck: pluck,\n      prepend: prepend,\n      product: product,\n      project: project,\n      prop: prop,\n      propEq: propEq,\n      propIs: propIs,\n      propOr: propOr,\n      propSatisfies: propSatisfies,\n      props: props,\n      range: range,\n      reduce: reduce,\n      reduceBy: reduceBy,\n      reduceRight: reduceRight,\n      reduceWhile: reduceWhile,\n      reduced: reduced,\n      reject: reject,\n      remove: remove,\n      repeat: repeat,\n      replace: replace,\n      reverse: reverse,\n      scan: scan,\n      sequence: sequence,\n      set: set,\n      slice: slice,\n      sort: sort,\n      sortBy: sortBy,\n      split: split,\n      splitAt: splitAt,\n      splitEvery: splitEvery,\n      splitWhen: splitWhen,\n      subtract: subtract,\n      sum: sum,\n      symmetricDifference: symmetricDifference,\n      symmetricDifferenceWith: symmetricDifferenceWith,\n      tail: tail,\n      take: take,\n      takeLast: takeLast,\n      takeLastWhile: takeLastWhile,\n      takeWhile: takeWhile,\n      tap: tap,\n      test: test,\n      times: times,\n      toLower: toLower,\n      toPairs: toPairs,\n      toPairsIn: toPairsIn,\n      toString: toString,\n      toUpper: toUpper,\n      transduce: transduce,\n      transpose: transpose,\n      traverse: traverse,\n      trim: trim,\n      tryCatch: tryCatch,\n      type: type,\n      unapply: unapply,\n      unary: unary,\n      uncurryN: uncurryN,\n      unfold: unfold,\n      union: union,\n      unionWith: unionWith,\n      uniq: uniq,\n      uniqBy: uniqBy,\n      uniqWith: uniqWith,\n      unless: unless,\n      unnest: unnest,\n      until: until,\n      update: update,\n      useWith: useWith,\n      values: values,\n      valuesIn: valuesIn,\n      view: view,\n      when: when,\n      where: where,\n      whereEq: whereEq,\n      without: without,\n      wrap: wrap,\n      xprod: xprod,\n      zip: zip,\n      zipObj: zipObj,\n      zipWith: zipWith\n    };\n    /* eslint-env amd */\n\n    /* TEST_ENTRY_POINT */\n\n    if ((false ? 'undefined' : _typeof(exports)) === 'object') {\n      module.exports = R;\n    } else if (true) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n        return R;\n      }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {\n      this.R = R;\n    }\n  }).call(undefined);\n  /***/\n},\n/* 34 */\n\n/***/\nfunction (module, exports) {\n  module.exports = require(\"react\");\n  /***/\n},\n/* 35 */\n\n/***/\nfunction (module, exports) {\n  module.exports = require(\"react-dom\");\n  /***/\n},\n/* 36 */\n\n/***/\nfunction (module, exports, __webpack_require__) {\n  module.exports = __webpack_require__(9);\n  /***/\n}\n/******/\n]);","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/react-website-v1-master/node_modules/react-shadow/dist/react-shadow.js"],"names":["module","exports","modules","installedModules","__webpack_require__","moduleId","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","_typeof","Symbol","iterator","obj","constructor","bind","toString","isArray","val","isArrayBuffer","isFormData","FormData","isArrayBufferView","result","ArrayBuffer","isView","buffer","isString","isNumber","isUndefined","isObject","isDate","isFile","isBlob","isFunction","isStream","pipe","isURLSearchParams","URLSearchParams","trim","str","replace","isStandardBrowserEnv","window","document","createElement","forEach","fn","length","key","merge","assignValue","arguments","extend","a","b","thisArg","process","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","nextTick","args","Array","push","Item","array","apply","title","browser","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","validateFormat","format","NODE_ENV","undefined","invariant","condition","f","error","argIndex","framesToPop","ReactPropTypesSecret","utils","settle","buildURL","parseHeaders","isURLSameOrigin","createError","btoa","xhrAdapter","config","Promise","dispatchXhrRequest","resolve","reject","requestData","data","requestHeaders","headers","request","XMLHttpRequest","loadEvent","xDomain","XDomainRequest","url","onprogress","handleProgress","ontimeout","handleTimeout","auth","username","password","Authorization","open","method","toUpperCase","params","paramsSerializer","handleLoad","readyState","status","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","response","statusText","onerror","handleError","cookies","xsrfValue","withCredentials","xsrfCookieName","read","xsrfHeaderName","setRequestHeader","toLowerCase","onDownloadProgress","addEventListener","onUploadProgress","upload","send","enhanceError","message","code","wrap","warning","printWarning","_len","_key","console","x","indexOf","_len2","_key2","withContext","_extends","assign","target","source","_createClass","defineProperties","props","descriptor","writable","Constructor","protoProps","staticProps","_axios","_react","_react2","_interopRequireDefault","_propTypes","_propTypes2","_reactDom","_ramda","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","includeMap","extensions","tag","attrs","type","defaultContextTypes","router","throwError","fetchInclude","memoize","then","catch","contextTypes","_class2","_temp3","createContextProvider","context","_class","_temp","_PureComponent","ContextProvider","getPrototypeOf","getChildContext","componentDidCatch","render","children","PureComponent","propTypes","node","isRequired","childContextTypes","_Component","ShadowDOM","_ref","_temp2","_this2","_ret","state","resolving","WrappedComponent","componentDidMount","_this3","_props","mode","boundaryMode","delegatesFocus","findDOMNode","root","attachShadow","createShadowRoot","include","container","wrapContainer","setState","attachIncludes","componentDidUpdate","componentWillUnmount","unmountComponentAtNode","_this4","child","nodeName","_this5","groupedFiles","groupBy","file","extension","map","path","split","pop","includeFiles","keys","nodeData","find","model","includes","files","containerElement","setAttribute","all","fileData","innerHTML","reduce","xs","fileDatum","appendChild","validate","_this6","Children","only","childProps","dissoc","className","classNames","Component","oneOfType","string","oneOf","bool","defaultProps","Axios","createInstance","defaultConfig","axios","promises","spread","defaults","InterceptorManager","dispatchRequest","isAbsoluteURL","combineURLs","interceptors","baseURL","chain","promise","unshiftRequestInterceptors","interceptor","unshift","fulfilled","rejected","pushResponseInterceptors","shift","forEachMethodNoData","forEachMethodWithData","handlers","use","eject","id","forEachHandler","h","transformData","transformRequest","common","cleanHeaderConfig","adapter","onFulfilled","transformResponse","onRejected","validateStatus","fns","transform","normalizeHeaderName","PROTECTION_PREFIX","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","JSON","stringify","parse","patch","post","put","maxContentLength","chars","E","input","String","output","block","charCode","idx","charAt","charCodeAt","encode","encodeURIComponent","serializedParams","parts","serialize","parseValue","v","toISOString","join","relativeURL","standardBrowserEnv","write","expires","domain","secure","cookie","Date","toGMTString","match","RegExp","decodeURIComponent","remove","now","nonStandardBrowserEnv","test","msie","navigator","userAgent","urlParsingNode","originURL","resolveURL","href","protocol","host","search","hash","hostname","port","pathname","location","requestURL","parsed","normalizedName","processHeader","parser","line","substr","callback","arr","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","toObject","shouldUseNative","test1","getOwnPropertyNames","test2","fromCharCode","order2","test3","letter","err","from","to","symbols","loggedTypeFailures","checkPropTypes","typeSpecs","values","componentName","getStack","typeSpecName","ex","stack","shim","propName","propFullName","secret","getShim","ReactPropTypes","func","number","symbol","any","arrayOf","element","instanceOf","objectOf","shape","exact","PropTypes","isValidElement","throwOnDirectAccess","ITERATOR_SYMBOL","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","iteratorFn","ANONYMOUS","createPrimitiveTypeChecker","createAnyTypeChecker","createArrayOfTypeChecker","createElementTypeChecker","createInstanceTypeChecker","createNodeChecker","createObjectOfTypeChecker","createEnumTypeChecker","createUnionTypeChecker","createShapeTypeChecker","createStrictShapeTypeChecker","is","y","PropTypeError","createChainableTypeChecker","manualPropTypeCallCache","manualPropTypeWarningCount","checkType","cacheKey","chainedCheckType","expectedType","propValue","propType","getPropType","preciseType","getPreciseType","typeChecker","expectedClass","expectedClassName","actualClassName","getClassName","expectedValues","valuesString","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","isNode","shapeTypes","allKeys","every","step","entries","next","done","entry","isSymbol","REACT_ELEMENT_TYPE","for","$$typeof","__WEBPACK_AMD_DEFINE_RESULT__","__","_arity","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","_arrayFromIterator","iter","list","_arrayOf","slice","_cloneRegExp","pattern","global","ignoreCase","multiline","sticky","unicode","_complement","_concat","set1","set2","len1","len2","_containsWith","pred","_filter","_forceReduced","_functionName","_has","prop","_identity","_isArguments","_isArray","_isFunction","_isInteger","Number","isInteger","_isNumber","_isObject","_isPlaceholder","_isRegExp","_isString","_isTransformer","_map","functor","_objectAssign","nextKey","_of","_pipe","g","_pipeP","ctx","_quote","escaped","_reduced","_slice","Math","max","min","_toISOString","pad","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_xfBase","init","xf","_result","_xwrap","XWrap","acc","_aperture","limit","_assign","_checkForMethod","methodname","_curry1","f1","_curry2","f2","_b","_a","_curry3","f3","_c","_curryN","received","combined","argsIdx","left","combinedIdx","_dispatchable","transducer","_dropLastWhile","dropLastWhile","_xall","XAll","_xany","XAny","_xaperture","XAperture","pos","full","store","getCopy","_xdrop","XDrop","_xdropLast","XDropLast","_xdropRepeatsWith","XDropRepeatsWith","lastValue","seenFirstValue","sameAsLast","_xdropWhile","XDropWhile","_xfilter","XFilter","_xfind","XFind","found","_xfindIndex","XFindIndex","_xfindLast","XFindLast","last","_xfindLastIndex","XFindLastIndex","lastIdx","_xmap","XMap","_xreduceBy","XReduceBy","valueFn","valueAcc","keyFn","inputs","_xtake","XTake","ret","_xtakeWhile","XTakeWhile","add","adjust","start","_idx","_list","always","and","aperture","append","el","assoc","assocPath","thisObj","clamp","comparator","curryN","dec","defaultTo","differenceWith","first","second","out","firstLen","dissocPath","head","tail","divide","dropWhile","empty","evolve","transformations","transformation","findIndex","findLast","findLastIndex","fromPairs","pairs","groupWith","res","nextidx","gt","gte","has","hasIn","identical","identity","ifElse","onTrue","onFalse","_ifElse","inc","insert","elt","splice","insertAll","elts","intersperse","separator","Ctor","isArrayLike","nodeType","isNil","hasEnumBug","nonEnumerableProps","hasArgsEnumBug","contains","item","nIdx","ks","checkArgsLength","keysIn","NaN","lt","lte","mapAccum","tuple","mapAccumRight","rx","mathMod","maxBy","r","mergeAll","mergeWithKey","k","minBy","modulo","multiply","nAry","negate","none","not","nth","offset","nthArg","arity","objOf","of","called","or","over","Identity","lens","pair","fst","snd","paths","pathOr","pathSatisfies","propPath","pick","names","pickAll","pickBy","prepend","propIs","propOr","propSatisfies","ps","range","reduceRight","reduced","count","regex","replacement","reverse","scan","set","fromIndex","toIndex","sort","sortBy","aa","bb","splitAt","index","splitEvery","splitWhen","prefix","subtract","Infinity","take","takeLastWhile","takeWhile","tap","times","isNaN","RangeError","toPairs","toPairsIn","transpose","outerlist","innerlist","j","ws","zeroWidth","hasProtoTrim","beginRx","endRx","tryCatch","_tryCatch","tryer","catcher","unapply","unary","uncurryN","depth","currentDepth","endIdx","unfold","seed","uniqWith","unless","whenFalseFn","until","update","useWith","transformers","vals","valuesIn","vs","view","Const","when","whenTrueFn","where","spec","testObj","wrapper","xprod","ilen","jlen","zip","rv","zipObj","zipWith","F","T","_clone","refFrom","refTo","deep","copy","copiedValue","valueOf","_createPartialApplicator","_dropLast","dropLast","_equals","stackA","stackB","equals","keysA","_makeFlat","recursive","flatt","_reduce","_arrayReduce","_iterableReduce","_methodReduce","symIterator","_stepCat","_stepCatArray","transducerStep","_stepCatString","_stepCatObject","_xdropLastWhile","XDropLastWhile","retained","retain","flush","addIndex","origFn","binary","clone","curry","drop","filter","filterable","flatten","flip","intersectionWith","list1","list2","lookupList","filteredList","results","into","invert","invertObj","isEmpty","lastIndexOf","mapObjIndexed","mergeWith","_","_l","_r","partial","partialRight","pathEq","_path","pluck","project","propEq","reduceBy","reduceWhile","_reduceWhile","repeat","sum","takeLast","transduce","unionWith","whereEq","_flatCat","preservingReduced","transducerResult","_xcat","rxf","_indexOf","inf","_xchain","allPass","preds","anyPass","ap","applicative","applySpec","monad","cond","constructN","Fn","$0","$1","$2","$3","$4","$5","$6","$7","$8","$9","converge","after","countBy","elem","dropRepeatsWith","eqBy","eqProps","obj1","obj2","indexBy","juxt","setter","toFunctorFn","focus","lensIndex","lensPath","lensProp","liftN","lifted","mean","median","width","partition","pipeP","product","sequence","traversable","traverse","unnest","_contains","_toString","seen","recur","mapPairs","repr","compose","composeK","composeP","construct","difference","dropRepeats","lift","omit","pipeK","without","_Set","_nativeSet","Set","_items","hasOrAdd","shouldAdd","prevSize","newSize","size","bIdx","both","_both","complement","either","_either","invoker","cache","symmetricDifference","symmetricDifferenceWith","toLower","toUpper","uniqBy","appliedItem","uniq","intersection","union","R","require"],"mappings":"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","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 36);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar bind = __webpack_require__(7);\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return typeof FormData !== 'undefined' && val instanceof FormData;\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = val && val.buffer && val.buffer instanceof ArrayBuffer;\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object';\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  typeof document.createElement -> undefined\n */\nfunction isStandardBrowserEnv() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined' && typeof document.createElement === 'function';\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' && !isArray(obj)) {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge() /* obj1, obj2, obj3, ... */{\n  var result = {};\n  function assignValue(val, key) {\n    if (_typeof(result[key]) === 'object' && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {\n      result[key] = merge(result[key], val);\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n})();\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while (len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n    return [];\n};\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n    return '/';\n};\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function () {\n    return 0;\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(0);\nvar settle = __webpack_require__(16);\nvar buildURL = __webpack_require__(20);\nvar parseHeaders = __webpack_require__(26);\nvar isURLSameOrigin = __webpack_require__(24);\nvar createError = __webpack_require__(6);\nvar btoa = typeof window !== 'undefined' && window.btoa || __webpack_require__(19);\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n    var loadEvent = 'onreadystatechange';\n    var xDomain = false;\n\n    // For IE 8/9 CORS support\n    // Only supports POST and GET calls and doesn't returns the response headers.\n    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.\n    if (process.env.NODE_ENV !== 'test' && typeof window !== 'undefined' && window.XDomainRequest && !('withCredentials' in request) && !isURLSameOrigin(config.url)) {\n      request = new window.XDomainRequest();\n      loadEvent = 'onload';\n      xDomain = true;\n      request.onprogress = function handleProgress() {};\n      request.ontimeout = function handleTimeout() {};\n    }\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password || '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request[loadEvent] = function handleLoad() {\n      if (!request || request.readyState !== 4 && !xDomain) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      if (request.status === 0) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        // IE sends 1223 instead of 204 (https://github.com/mzabriskie/axios/issues/201)\n        status: request.status === 1223 ? 204 : request.status,\n        statusText: request.status === 1223 ? 'No Content' : request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED'));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      var cookies = __webpack_require__(22);\n\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ? cookies.read(config.xsrfCookieName) : undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (config.withCredentials) {\n      request.withCredentials = true;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        if (request.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (requestData === undefined) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar enhanceError = __webpack_require__(15);\n\n/**\n * Create an Error with the specified message, config, error code, and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n @ @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, response);\n};\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n\n\nvar emptyFunction = __webpack_require__(2);\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar warning = emptyFunction;\n\nif (process.env.NODE_ENV !== 'production') {\n  var printWarning = function printWarning(format) {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var argIndex = 0;\n    var message = 'Warning: ' + format.replace(/%s/g, function () {\n      return args[argIndex++];\n    });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n\n  warning = function warning(condition, format) {\n    if (format === undefined) {\n      throw new Error('`warning(condition, format, ...args)` requires a warning ' + 'message argument');\n    }\n\n    if (format.indexOf('Failed Composite propType: ') === 0) {\n      return; // Ignore CompositeComponent proptype check.\n    }\n\n    if (!condition) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      printWarning.apply(undefined, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withContext = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _axios = __webpack_require__(10);\n\nvar _react = __webpack_require__(34);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = __webpack_require__(32);\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactDom = __webpack_require__(35);\n\nvar _ramda = __webpack_require__(33);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @constant includeMap\n * @type {Object}\n */\nvar includeMap = [{ extensions: ['js'], tag: 'script', attrs: { type: 'text/javascript' } }, { extensions: ['css'], tag: 'style', attrs: {} }];\n\n/**\n * @constant defaultContextTypes\n * @type {Object}\n */\nvar defaultContextTypes = {\n  router: _propTypes2.default.object\n};\n\n/**\n * @method throwError\n * @param {String} message\n * @throws {Error}\n * @return {void}\n */\nvar throwError = function throwError(message) {\n  throw new Error('ReactShadow: ' + message + '.');\n};\n\n/**\n * @method fetchInclude\n * @param {String} document\n * @return {Promise}\n */\nvar fetchInclude = (0, _ramda.memoize)(function (document) {\n\n  return new Promise(function (resolve) {\n    (0, _axios.get)(document).then(function (response) {\n      return response.data;\n    }).then(resolve).catch(function () {\n      return resolve('');\n    });\n  });\n});\n\n/**\n * @method withContext\n * @param {Object} contextTypes\n * @return {ShadowDOM}\n */\nvar withContext = exports.withContext = function withContext(contextTypes) {\n  var _class2, _temp3;\n\n  /**\n   * @method createContextProvider\n   * @param {Object} context\n   * @return {ContextProvider}\n   */\n  var createContextProvider = function createContextProvider(context) {\n    var _class, _temp;\n\n    /**\n     * @class ContextProvider\n     * @extends {Component}\n     */\n    return _temp = _class = function (_PureComponent) {\n      _inherits(ContextProvider, _PureComponent);\n\n      function ContextProvider() {\n        _classCallCheck(this, ContextProvider);\n\n        return _possibleConstructorReturn(this, (ContextProvider.__proto__ || Object.getPrototypeOf(ContextProvider)).apply(this, arguments));\n      }\n\n      _createClass(ContextProvider, [{\n        key: 'getChildContext',\n\n\n        /**\n         * @method getChildContext\n         * @return {Object}\n         */\n\n\n        /**\n         * @constant propTypes\n         * @type {Object}\n         */\n        value: function getChildContext() {\n          return context;\n        }\n\n        /**\n         * @method componentDidCatch\n         * @param {String} error\n         * @return {void}\n         */\n\n\n        /**\n         * @constant childContextTypes\n         * @type {Object}\n         */\n\n      }, {\n        key: 'componentDidCatch',\n        value: function componentDidCatch(error) {\n          throwError(error);\n        }\n\n        /**\n         * @method render\n         * @return {XML}\n         */\n\n      }, {\n        key: 'render',\n        value: function render() {\n          return this.props.children;\n        }\n      }]);\n\n      return ContextProvider;\n    }(_react.PureComponent), _class.propTypes = {\n      children: _propTypes2.default.node.isRequired\n    }, _class.childContextTypes = contextTypes, _temp;\n  };\n\n  /**\n   * @class ShadowDOM\n   * @extends Component\n   */\n  return _temp3 = _class2 = function (_Component) {\n    _inherits(ShadowDOM, _Component);\n\n    function ShadowDOM() {\n      var _ref;\n\n      var _temp2, _this2, _ret;\n\n      _classCallCheck(this, ShadowDOM);\n\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _ret = (_temp2 = (_this2 = _possibleConstructorReturn(this, (_ref = ShadowDOM.__proto__ || Object.getPrototypeOf(ShadowDOM)).call.apply(_ref, [this].concat(args))), _this2), _this2.state = { resolving: false }, _this2.ContextProvider = createContextProvider(_this2.context), _this2.WrappedComponent = _this2.props.children, _temp2), _possibleConstructorReturn(_this2, _ret);\n    }\n\n    /**\n     * @constant contextTypes\n     * @type {Object}\n     */\n\n\n    /**\n     * @constant propTypes\n     * @type {Object}\n     */\n\n\n    /**\n     * @constant defaultProps\n     * @type {Object}\n     */\n\n\n    /**\n     * @constant state\n     * @type {Object}\n     */\n\n\n    /**\n     * @constant ContextProvider\n     * @type {ContextProvider}\n     */\n\n\n    /**\n     * @constant WrappedComponent\n     * @type {Object}\n     */\n\n\n    _createClass(ShadowDOM, [{\n      key: 'componentDidMount',\n\n\n      /**\n       * @method componentDidMount\n       * @return {void}\n       */\n      value: function componentDidMount() {\n        var _this3 = this;\n\n        var _props = this.props,\n            mode = _props.boundaryMode,\n            delegatesFocus = _props.delegatesFocus;\n\n        // Create the shadow root and take the CSS documents from props.\n\n        var node = (0, _reactDom.findDOMNode)(this);\n        var root = node.attachShadow ? node.attachShadow({ mode: mode, delegatesFocus: delegatesFocus }) : node.createShadowRoot();\n        var include = [].concat(this.props.include);\n        var container = this.wrapContainer();\n\n        // Render the passed in component to the shadow root, and then `setState` if there\n        // are no CSS documents to be resolved.\n        (0, _reactDom.render)(container, root);\n\n        include.length === 0 ? this.setState({ root: root }) : (this.setState({ root: root, resolving: true }), this.attachIncludes(include).then(function () {\n          return _this3.setState({ resolving: false });\n        }));\n      }\n\n      /**\n       * @method componentDidUpdate\n       * @return {void}\n       */\n\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n\n        // Updates consist of simply rendering the container element into the shadow root again, as\n        // the `this.wrapContainer()` element contains the passed in component's children.\n        (0, _reactDom.render)(this.wrapContainer(), this.state.root);\n      }\n\n      /**\n       * @method componentWillUnmount\n       * @return {void}\n       */\n\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        (0, _reactDom.unmountComponentAtNode)(this.state.root);\n      }\n\n      /**\n       * @method wrapContainer\n       * @return {Object}\n       */\n\n    }, {\n      key: 'wrapContainer',\n      value: function wrapContainer() {\n        var _this4 = this;\n\n        // Wrap children in a container if it's an array of children, otherwise simply render the single child\n        // which is a valid `ReactElement` instance.\n        var children = this.props.children.props.children;\n\n        var child = children.length ? _react2.default.createElement(\n          this.props.nodeName,\n          null,\n          children\n        ) : children;\n        var ContextProvider = this.ContextProvider;\n\n        /**\n         * @method getChildContext\n         * @return {Object}\n         */\n        ContextProvider.prototype.getChildContext = function () {\n          return _this4.context;\n        };\n\n        return _react2.default.createElement(\n          ContextProvider,\n          null,\n          child\n        );\n      }\n\n      /**\n       * @method attachIncludes\n       * @param include {Array}\n       * @return {void}\n       */\n\n    }, {\n      key: 'attachIncludes',\n      value: function attachIncludes(include) {\n        var _this5 = this;\n\n        // Group all of the includes by their extension.\n        var groupedFiles = (0, _ramda.groupBy)(function (file) {\n          return file.extension;\n        })(include.map(function (path) {\n          return { path: path, extension: path.split('.').pop() };\n        }));\n        var includeFiles = Object.keys(groupedFiles).map(function (extension) {\n\n          var nodeData = includeMap.find(function (model) {\n            return model.extensions.includes(extension);\n          });\n          var files = groupedFiles[extension].map(function (model) {\n            return model.path;\n          });\n\n          !nodeData && throwError('Files with extension of \"' + extension + '\" are unsupported');\n\n          var containerElement = document.createElement(nodeData.tag);\n\n          // Apply all of the attributes defined in the `includeMap` to the node.\n          Object.keys(nodeData.attrs).map(function (key) {\n            return containerElement.setAttribute(key, nodeData.attrs[key]);\n          });\n\n          // Load each file individually and then concatenate them.\n          return Promise.all(files.map(fetchInclude)).then(function (fileData) {\n            containerElement.innerHTML = fileData.reduce(function (xs, fileDatum) {\n              return xs + ' ' + fileDatum;\n            }).trim();\n            containerElement.innerHTML.length && _this5.state.root.appendChild(containerElement);\n          });\n        });\n\n        return Promise.all(includeFiles);\n      }\n\n      /**\n       * @method validate\n       * @return {Boolean|void}\n       */\n\n    }, {\n      key: 'validate',\n      value: function validate() {\n\n        // Ensure that the passed child isn't an array of children.\n        Array.isArray(this.props.children) && throwError('You must pass a single child rather than multiple children');\n\n        if (typeof this.props.children.type !== 'string') {\n\n          // Ensure that the passed child has a valid node name.\n          throwError('Immediate descendant of <ShadowDOM /> must be a HTML node, rather than a React component');\n        }\n\n        return true;\n      }\n\n      /**\n       * @method render\n       * @return {XML}\n       */\n\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this6 = this;\n\n        return this.validate() && function () {\n\n          // Props from the passed component, minus `children` as that's handled by `componentDidMount`.\n          var child = _react.Children.only(_this6.props.children);\n          var childProps = (0, _ramda.dissoc)('children', child.props);\n          var className = _this6.state.resolving ? 'resolving' : 'resolved';\n          var classNames = ((childProps.className ? childProps.className : '') + ' ' + className).trim();\n          var props = _extends({}, childProps, { className: classNames });\n\n          return _react2.default.createElement(child.type, props);\n        }();\n      }\n    }]);\n\n    return ShadowDOM;\n  }(_react.Component), _class2.contextTypes = contextTypes, _class2.propTypes = {\n    children: _propTypes2.default.node.isRequired,\n    include: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.array]),\n    nodeName: _propTypes2.default.string,\n    boundaryMode: _propTypes2.default.oneOf(['open', 'closed']),\n    delegatesFocus: _propTypes2.default.bool\n  }, _class2.defaultProps = {\n    include: [],\n    nodeName: 'span',\n    boundaryMode: 'open',\n    delegatesFocus: false\n  }, _temp3;\n};\n\nexports.default = withContext(defaultContextTypes);\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(11);\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\nvar bind = __webpack_require__(7);\nvar Axios = __webpack_require__(12);\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance();\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(defaultConfig) {\n  return createInstance(defaultConfig);\n};\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(27);\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar defaults = __webpack_require__(18);\nvar utils = __webpack_require__(0);\nvar InterceptorManager = __webpack_require__(13);\nvar dispatchRequest = __webpack_require__(14);\nvar isAbsoluteURL = __webpack_require__(23);\nvar combineURLs = __webpack_require__(21);\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n */\nfunction Axios(defaultConfig) {\n  this.defaults = utils.merge(defaults, defaultConfig);\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, this.defaults, { method: 'get' }, config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function (url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar utils = __webpack_require__(0);\nvar transformData = __webpack_require__(17);\n\n/**\n * Dispatch a request to the server using whichever adapter\n * is supported by the current environment.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(config.data, config.headers, config.transformRequest);\n\n  // Flatten headers\n  config.headers = utils.merge(config.headers.common || {}, config.headers[config.method] || {}, config.headers || {});\n\n  utils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch', 'common'], function cleanHeaderConfig(method) {\n    delete config.headers[method];\n  });\n\n  var adapter;\n\n  if (typeof config.adapter === 'function') {\n    // For custom adapter support\n    adapter = config.adapter;\n  } else if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(5);\n  } else if (typeof process !== 'undefined') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(5);\n  }\n\n  return Promise.resolve(config)\n  // Wrap synchronous adapter errors and pass configuration\n  .then(adapter).then(function onFulfilled(response) {\n    // Transform response data\n    response.data = transformData(response.data, response.headers, config.transformResponse);\n\n    return response;\n  }, function onRejected(error) {\n    // Transform response data\n    if (error && error.response) {\n      error.response.data = transformData(error.response.data, error.response.headers, config.transformResponse);\n    }\n\n    return Promise.reject(error);\n  });\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n @ @param {Object} [response] The response.\n * @returns {Error} The error.\n */\n\nmodule.exports = function enhanceError(error, config, code, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.response = response;\n  return error;\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar createError = __webpack_require__(6);\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError('Request failed with status code ' + response.status, response.config, null, response));\n  }\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\nvar normalizeHeaderName = __webpack_require__(25);\n\nvar PROTECTION_PREFIX = /^\\)\\]\\}',?\\n/;\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nmodule.exports = {\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) || utils.isArrayBuffer(data) || utils.isStream(data) || utils.isFile(data) || utils.isBlob(data)) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      data = data.replace(PROTECTION_PREFIX, '');\n      try {\n        data = JSON.parse(data);\n      } catch (e) {/* Ignore */}\n    }\n    return data;\n  }],\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    },\n    patch: utils.merge(DEFAULT_CONTENT_TYPE),\n    post: utils.merge(DEFAULT_CONTENT_TYPE),\n    put: utils.merge(DEFAULT_CONTENT_TYPE)\n  },\n\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction E() {\n  this.message = 'String contains an invalid character';\n}\nE.prototype = new Error();\nE.prototype.code = 5;\nE.prototype.name = 'InvalidCharacterError';\n\nfunction btoa(input) {\n  var str = String(input);\n  var output = '';\n  for (\n  // initialize result and counter\n  var block, charCode, idx = 0, map = chars;\n  // if the next str index does not exist:\n  //   change the mapping table to \"=\"\n  //   check if d has no fractional digits\n  str.charAt(idx | 0) || (map = '=', idx % 1);\n  // \"8 - idx % 1 * 8\" generates the sequence 2, 4, 6, 8\n  output += map.charAt(63 & block >> 8 - idx % 1 * 8)) {\n    charCode = str.charCodeAt(idx += 3 / 4);\n    if (charCode > 0xFF) {\n      throw new E();\n    }\n    block = block << 8 | charCode;\n  }\n  return output;\n}\n\nmodule.exports = btoa;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nfunction encode(val) {\n  return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      }\n\n      if (!utils.isArray(val)) {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\n\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '');\n};\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = utils.isStandardBrowserEnv() ?\n\n// Standard browser envs support document.cookie\nfunction standardBrowserEnv() {\n  return {\n    write: function write(name, value, expires, path, domain, secure) {\n      var cookie = [];\n      cookie.push(name + '=' + encodeURIComponent(value));\n\n      if (utils.isNumber(expires)) {\n        cookie.push('expires=' + new Date(expires).toGMTString());\n      }\n\n      if (utils.isString(path)) {\n        cookie.push('path=' + path);\n      }\n\n      if (utils.isString(domain)) {\n        cookie.push('domain=' + domain);\n      }\n\n      if (secure === true) {\n        cookie.push('secure');\n      }\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read: function read(name) {\n      var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return match ? decodeURIComponent(match[3]) : null;\n    },\n\n    remove: function remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  };\n}() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return {\n    write: function write() {},\n    read: function read() {\n      return null;\n    },\n    remove: function remove() {}\n  };\n}();\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\n\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return (/^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url)\n  );\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = utils.isStandardBrowserEnv() ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\nfunction standardBrowserEnv() {\n  var msie = /(msie|trident)/i.test(navigator.userAgent);\n  var urlParsingNode = document.createElement('a');\n  var originURL;\n\n  /**\n  * Parse a URL to discover it's components\n  *\n  * @param {String} url The URL to be parsed\n  * @returns {Object}\n  */\n  function resolveURL(url) {\n    var href = url;\n\n    if (msie) {\n      // IE needs attribute set twice to normalize properties\n      urlParsingNode.setAttribute('href', href);\n      href = urlParsingNode.href;\n    }\n\n    urlParsingNode.setAttribute('href', href);\n\n    // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n    return {\n      href: urlParsingNode.href,\n      protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n      host: urlParsingNode.host,\n      search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n      hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n      hostname: urlParsingNode.hostname,\n      port: urlParsingNode.port,\n      pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n    };\n  }\n\n  originURL = resolveURL(window.location.href);\n\n  /**\n  * Determine if a URL shares the same origin as the current location\n  *\n  * @param {String} requestURL The URL to test\n  * @returns {boolean} True if URL shares the same origin, otherwise false\n  */\n  return function isURLSameOrigin(requestURL) {\n    var parsed = utils.isString(requestURL) ? resolveURL(requestURL) : requestURL;\n    return parsed.protocol === originURL.protocol && parsed.host === originURL.host;\n  };\n}() :\n\n// Non standard browser envs (web workers, react-native) lack needed support.\nfunction nonStandardBrowserEnv() {\n  return function isURLSameOrigin() {\n    return true;\n  };\n}();\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar utils = __webpack_require__(0);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) {\n    return parsed;\n  }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\n\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = __webpack_require__(3);\n  var warning = __webpack_require__(8);\n  var ReactPropTypesSecret = __webpack_require__(4);\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, _typeof(typeSpecs[typeSpecName]));\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error === 'undefined' ? 'undefined' : _typeof(error));\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar emptyFunction = __webpack_require__(2);\nvar invariant = __webpack_require__(3);\nvar ReactPropTypesSecret = __webpack_require__(4);\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar emptyFunction = __webpack_require__(2);\nvar invariant = __webpack_require__(3);\nvar warning = __webpack_require__(8);\nvar assign = __webpack_require__(28);\n\nvar ReactPropTypesSecret = __webpack_require__(4);\nvar checkPropTypes = __webpack_require__(29);\n\nmodule.exports = function (isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message) {\n    this.message = message;\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (!manualPropTypeCallCache[cacheKey] &&\n          // Avoid spamming the console because they are often not actionable except for lib authors\n          manualPropTypeWarningCount < 3) {\n            warning(false, 'You are manually calling a React.PropTypes validation ' + 'function for the `%s` prop on `%s`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.', propFullName, componentName);\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunction.thatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOf, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues);\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + propValue + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (propValue.hasOwnProperty(key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunction.thatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        warning(false, 'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received %s at index %s.', getPostfixForTypeWarning(checker), i);\n        return emptyFunction.thatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {\n          return null;\n        }\n      }\n\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          continue;\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from\n      // props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (!checker) {\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue)) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue === 'undefined' ? 'undefined' : _typeof(propValue);\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element') || 0xeac7;\n\n  var isValidElement = function isValidElement(object) {\n    return (typeof object === 'undefined' ? 'undefined' : _typeof(object)) === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = __webpack_require__(31)(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = __webpack_require__(30)();\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nvar __WEBPACK_AMD_DEFINE_RESULT__;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n//  Ramda v0.22.1\n//  https://github.com/ramda/ramda\n//  (c) 2013-2016 Scott Sauyet, Michael Hurley, and David Chambers\n//  Ramda may be freely distributed under the MIT license.\n\n;(function () {\n\n    'use strict';\n\n    /**\n       * A special placeholder value used to specify \"gaps\" within curried functions,\n       * allowing partial application of any combination of arguments, regardless of\n       * their positions.\n       *\n       * If `g` is a curried ternary function and `_` is `R.__`, the following are\n       * equivalent:\n       *\n       *   - `g(1, 2, 3)`\n       *   - `g(_, 2, 3)(1)`\n       *   - `g(_, _, 3)(1)(2)`\n       *   - `g(_, _, 3)(1, 2)`\n       *   - `g(_, 2, _)(1, 3)`\n       *   - `g(_, 2)(1)(3)`\n       *   - `g(_, 2)(1, 3)`\n       *   - `g(_, 2)(_, 3)(1)`\n       *\n       * @constant\n       * @memberOf R\n       * @since v0.6.0\n       * @category Function\n       * @example\n       *\n       *      var greet = R.replace('{name}', R.__, 'Hello, {name}!');\n       *      greet('Alice'); //=> 'Hello, Alice!'\n       */\n\n    var __ = { '@@functional/placeholder': true };\n\n    /* eslint-disable no-unused-vars */\n    var _arity = function _arity(n, fn) {\n        /* eslint-disable no-unused-vars */\n        switch (n) {\n            case 0:\n                return function () {\n                    return fn.apply(this, arguments);\n                };\n            case 1:\n                return function (a0) {\n                    return fn.apply(this, arguments);\n                };\n            case 2:\n                return function (a0, a1) {\n                    return fn.apply(this, arguments);\n                };\n            case 3:\n                return function (a0, a1, a2) {\n                    return fn.apply(this, arguments);\n                };\n            case 4:\n                return function (a0, a1, a2, a3) {\n                    return fn.apply(this, arguments);\n                };\n            case 5:\n                return function (a0, a1, a2, a3, a4) {\n                    return fn.apply(this, arguments);\n                };\n            case 6:\n                return function (a0, a1, a2, a3, a4, a5) {\n                    return fn.apply(this, arguments);\n                };\n            case 7:\n                return function (a0, a1, a2, a3, a4, a5, a6) {\n                    return fn.apply(this, arguments);\n                };\n            case 8:\n                return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                    return fn.apply(this, arguments);\n                };\n            case 9:\n                return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                    return fn.apply(this, arguments);\n                };\n            case 10:\n                return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                    return fn.apply(this, arguments);\n                };\n            default:\n                throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n        }\n    };\n\n    var _arrayFromIterator = function _arrayFromIterator(iter) {\n        var list = [];\n        var next;\n        while (!(next = iter.next()).done) {\n            list.push(next.value);\n        }\n        return list;\n    };\n\n    var _arrayOf = function _arrayOf() {\n        return Array.prototype.slice.call(arguments);\n    };\n\n    var _cloneRegExp = function _cloneRegExp(pattern) {\n        return new RegExp(pattern.source, (pattern.global ? 'g' : '') + (pattern.ignoreCase ? 'i' : '') + (pattern.multiline ? 'm' : '') + (pattern.sticky ? 'y' : '') + (pattern.unicode ? 'u' : ''));\n    };\n\n    var _complement = function _complement(f) {\n        return function () {\n            return !f.apply(this, arguments);\n        };\n    };\n\n    /**\n     * Private `concat` function to merge two array-like objects.\n     *\n     * @private\n     * @param {Array|Arguments} [set1=[]] An array-like object.\n     * @param {Array|Arguments} [set2=[]] An array-like object.\n     * @return {Array} A new, merged array.\n     * @example\n     *\n     *      _concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     */\n    var _concat = function _concat(set1, set2) {\n        set1 = set1 || [];\n        set2 = set2 || [];\n        var idx;\n        var len1 = set1.length;\n        var len2 = set2.length;\n        var result = [];\n        idx = 0;\n        while (idx < len1) {\n            result[result.length] = set1[idx];\n            idx += 1;\n        }\n        idx = 0;\n        while (idx < len2) {\n            result[result.length] = set2[idx];\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _containsWith = function _containsWith(pred, x, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (pred(x, list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    };\n\n    var _filter = function _filter(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        while (idx < len) {\n            if (fn(list[idx])) {\n                result[result.length] = list[idx];\n            }\n            idx += 1;\n        }\n        return result;\n    };\n\n    var _forceReduced = function _forceReduced(x) {\n        return {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n    var _functionName = function _functionName(f) {\n        // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n        var match = String(f).match(/^function (\\w*)/);\n        return match == null ? '' : match[1];\n    };\n\n    var _has = function _has(prop, obj) {\n        return Object.prototype.hasOwnProperty.call(obj, prop);\n    };\n\n    var _identity = function _identity(x) {\n        return x;\n    };\n\n    var _isArguments = function () {\n        var toString = Object.prototype.toString;\n        return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n            return toString.call(x) === '[object Arguments]';\n        } : function _isArguments(x) {\n            return _has('callee', x);\n        };\n    }();\n\n    /**\n     * Tests whether or not an object is an array.\n     *\n     * @private\n     * @param {*} val The object to test.\n     * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n     * @example\n     *\n     *      _isArray([]); //=> true\n     *      _isArray(null); //=> false\n     *      _isArray({}); //=> false\n     */\n    var _isArray = Array.isArray || function _isArray(val) {\n        return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n    };\n\n    var _isFunction = function _isFunction(x) {\n        return Object.prototype.toString.call(x) === '[object Function]';\n    };\n\n    /**\n     * Determine if the passed argument is an integer.\n     *\n     * @private\n     * @param {*} n\n     * @category Type\n     * @return {Boolean}\n     */\n    var _isInteger = Number.isInteger || function _isInteger(n) {\n        return n << 0 === n;\n    };\n\n    var _isNumber = function _isNumber(x) {\n        return Object.prototype.toString.call(x) === '[object Number]';\n    };\n\n    var _isObject = function _isObject(x) {\n        return Object.prototype.toString.call(x) === '[object Object]';\n    };\n\n    var _isPlaceholder = function _isPlaceholder(a) {\n        return a != null && (typeof a === 'undefined' ? 'undefined' : _typeof(a)) === 'object' && a['@@functional/placeholder'] === true;\n    };\n\n    var _isRegExp = function _isRegExp(x) {\n        return Object.prototype.toString.call(x) === '[object RegExp]';\n    };\n\n    var _isString = function _isString(x) {\n        return Object.prototype.toString.call(x) === '[object String]';\n    };\n\n    var _isTransformer = function _isTransformer(obj) {\n        return typeof obj['@@transducer/step'] === 'function';\n    };\n\n    var _map = function _map(fn, functor) {\n        var idx = 0;\n        var len = functor.length;\n        var result = Array(len);\n        while (idx < len) {\n            result[idx] = fn(functor[idx]);\n            idx += 1;\n        }\n        return result;\n    };\n\n    // Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    var _objectAssign = function _objectAssign(target) {\n        if (target == null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        var idx = 1;\n        var length = arguments.length;\n        while (idx < length) {\n            var source = arguments[idx];\n            if (source != null) {\n                for (var nextKey in source) {\n                    if (_has(nextKey, source)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n            idx += 1;\n        }\n        return output;\n    };\n\n    var _of = function _of(x) {\n        return [x];\n    };\n\n    var _pipe = function _pipe(f, g) {\n        return function () {\n            return g.call(this, f.apply(this, arguments));\n        };\n    };\n\n    var _pipeP = function _pipeP(f, g) {\n        return function () {\n            var ctx = this;\n            return f.apply(ctx, arguments).then(function (x) {\n                return g.call(ctx, x);\n            });\n        };\n    };\n\n    // \\b matches word boundary; [\\b] matches backspace\n    var _quote = function _quote(s) {\n        var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n        .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n        return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n    };\n\n    var _reduced = function _reduced(x) {\n        return x && x['@@transducer/reduced'] ? x : {\n            '@@transducer/value': x,\n            '@@transducer/reduced': true\n        };\n    };\n\n    /**\n     * An optimized, private array `slice` implementation.\n     *\n     * @private\n     * @param {Arguments|Array} args The array or arguments object to consider.\n     * @param {Number} [from=0] The array index to slice from, inclusive.\n     * @param {Number} [to=args.length] The array index to slice to, exclusive.\n     * @return {Array} A new, sliced array.\n     * @example\n     *\n     *      _slice([1, 2, 3, 4, 5], 1, 3); //=> [2, 3]\n     *\n     *      var firstThreeArgs = function(a, b, c, d) {\n     *        return _slice(arguments, 0, 3);\n     *      };\n     *      firstThreeArgs(1, 2, 3, 4); //=> [1, 2, 3]\n     */\n    var _slice = function _slice(args, from, to) {\n        switch (arguments.length) {\n            case 1:\n                return _slice(args, 0, args.length);\n            case 2:\n                return _slice(args, from, args.length);\n            default:\n                var list = [];\n                var idx = 0;\n                var len = Math.max(0, Math.min(args.length, to) - from);\n                while (idx < len) {\n                    list[idx] = args[from + idx];\n                    idx += 1;\n                }\n                return list;\n        }\n    };\n\n    /**\n     * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n     */\n    var _toISOString = function () {\n        var pad = function pad(n) {\n            return (n < 10 ? '0' : '') + n;\n        };\n        return typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n            return d.toISOString();\n        } : function _toISOString(d) {\n            return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n        };\n    }();\n\n    var _xfBase = {\n        init: function init() {\n            return this.xf['@@transducer/init']();\n        },\n        result: function result(_result) {\n            return this.xf['@@transducer/result'](_result);\n        }\n    };\n\n    var _xwrap = function () {\n        function XWrap(fn) {\n            this.f = fn;\n        }\n        XWrap.prototype['@@transducer/init'] = function () {\n            throw new Error('init not implemented on XWrap');\n        };\n        XWrap.prototype['@@transducer/result'] = function (acc) {\n            return acc;\n        };\n        XWrap.prototype['@@transducer/step'] = function (acc, x) {\n            return this.f(acc, x);\n        };\n        return function _xwrap(fn) {\n            return new XWrap(fn);\n        };\n    }();\n\n    var _aperture = function _aperture(n, list) {\n        var idx = 0;\n        var limit = list.length - (n - 1);\n        var acc = new Array(limit >= 0 ? limit : 0);\n        while (idx < limit) {\n            acc[idx] = _slice(list, idx, idx + n);\n            idx += 1;\n        }\n        return acc;\n    };\n\n    var _assign = typeof Object.assign === 'function' ? Object.assign : _objectAssign;\n\n    /**\n     * Similar to hasMethod, this checks whether a function has a [methodname]\n     * function. If it isn't an array it will execute that function otherwise it\n     * will default to the ramda implementation.\n     *\n     * @private\n     * @param {Function} fn ramda implemtation\n     * @param {String} methodname property to check for a custom implementation\n     * @return {Object} Whatever the return value of the method is.\n     */\n    var _checkForMethod = function _checkForMethod(methodname, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, _slice(arguments, 0, length - 1));\n        };\n    };\n\n    /**\n     * Optimized internal one-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry1 = function _curry1(fn) {\n        return function f1(a) {\n            if (arguments.length === 0 || _isPlaceholder(a)) {\n                return f1;\n            } else {\n                return fn.apply(this, arguments);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal two-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry2 = function _curry2(fn) {\n        return function f2(a, b) {\n            switch (arguments.length) {\n                case 0:\n                    return f2;\n                case 1:\n                    return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n                        return fn(a, _b);\n                    });\n                default:\n                    return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n                        return fn(_a, b);\n                    }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                        return fn(a, _b);\n                    }) : fn(a, b);\n            }\n        };\n    };\n\n    /**\n     * Optimized internal three-arity curry function.\n     *\n     * @private\n     * @category Function\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curry3 = function _curry3(fn) {\n        return function f3(a, b, c) {\n            switch (arguments.length) {\n                case 0:\n                    return f3;\n                case 1:\n                    return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n                        return fn(a, _b, _c);\n                    });\n                case 2:\n                    return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n                        return fn(_a, b, _c);\n                    }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n                        return fn(a, _b, _c);\n                    }) : _curry1(function (_c) {\n                        return fn(a, b, _c);\n                    });\n                default:\n                    return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n                        return fn(_a, _b, c);\n                    }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n                        return fn(_a, b, _c);\n                    }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n                        return fn(a, _b, _c);\n                    }) : _isPlaceholder(a) ? _curry1(function (_a) {\n                        return fn(_a, b, c);\n                    }) : _isPlaceholder(b) ? _curry1(function (_b) {\n                        return fn(a, _b, c);\n                    }) : _isPlaceholder(c) ? _curry1(function (_c) {\n                        return fn(a, b, _c);\n                    }) : fn(a, b, c);\n            }\n        };\n    };\n\n    /**\n     * Internal curryN function.\n     *\n     * @private\n     * @category Function\n     * @param {Number} length The arity of the curried function.\n     * @param {Array} received An array of arguments received thus far.\n     * @param {Function} fn The function to curry.\n     * @return {Function} The curried function.\n     */\n    var _curryN = function _curryN(length, received, fn) {\n        return function () {\n            var combined = [];\n            var argsIdx = 0;\n            var left = length;\n            var combinedIdx = 0;\n            while (combinedIdx < received.length || argsIdx < arguments.length) {\n                var result;\n                if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n                    result = received[combinedIdx];\n                } else {\n                    result = arguments[argsIdx];\n                    argsIdx += 1;\n                }\n                combined[combinedIdx] = result;\n                if (!_isPlaceholder(result)) {\n                    left -= 1;\n                }\n                combinedIdx += 1;\n            }\n            return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n        };\n    };\n\n    /**\n     * Returns a function that dispatches with different strategies based on the\n     * object in list position (last argument). If it is an array, executes [fn].\n     * Otherwise, if it has a function with [methodname], it will execute that\n     * function (functor case). Otherwise, if it is a transformer, uses transducer\n     * [xf] to return a new transformer (transducer case). Otherwise, it will\n     * default to executing [fn].\n     *\n     * @private\n     * @param {String} methodname property to check for a custom implementation\n     * @param {Function} xf transducer to initialize if object is transformer\n     * @param {Function} fn default ramda implementation\n     * @return {Function} A function that dispatches on object in list position\n     */\n    var _dispatchable = function _dispatchable(methodname, xf, fn) {\n        return function () {\n            var length = arguments.length;\n            if (length === 0) {\n                return fn();\n            }\n            var obj = arguments[length - 1];\n            if (!_isArray(obj)) {\n                var args = _slice(arguments, 0, length - 1);\n                if (typeof obj[methodname] === 'function') {\n                    return obj[methodname].apply(obj, args);\n                }\n                if (_isTransformer(obj)) {\n                    var transducer = xf.apply(null, args);\n                    return transducer(obj);\n                }\n            }\n            return fn.apply(this, arguments);\n        };\n    };\n\n    var _dropLastWhile = function dropLastWhile(pred, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && pred(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, 0, idx + 1);\n    };\n\n    var _xall = function () {\n        function XAll(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.all = true;\n        }\n        XAll.prototype['@@transducer/init'] = _xfBase.init;\n        XAll.prototype['@@transducer/result'] = function (result) {\n            if (this.all) {\n                result = this.xf['@@transducer/step'](result, true);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAll.prototype['@@transducer/step'] = function (result, input) {\n            if (!this.f(input)) {\n                this.all = false;\n                result = _reduced(this.xf['@@transducer/step'](result, false));\n            }\n            return result;\n        };\n        return _curry2(function _xall(f, xf) {\n            return new XAll(f, xf);\n        });\n    }();\n\n    var _xany = function () {\n        function XAny(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.any = false;\n        }\n        XAny.prototype['@@transducer/init'] = _xfBase.init;\n        XAny.prototype['@@transducer/result'] = function (result) {\n            if (!this.any) {\n                result = this.xf['@@transducer/step'](result, false);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XAny.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.any = true;\n                result = _reduced(this.xf['@@transducer/step'](result, true));\n            }\n            return result;\n        };\n        return _curry2(function _xany(f, xf) {\n            return new XAny(f, xf);\n        });\n    }();\n\n    var _xaperture = function () {\n        function XAperture(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XAperture.prototype['@@transducer/init'] = _xfBase.init;\n        XAperture.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XAperture.prototype['@@transducer/step'] = function (result, input) {\n            this.store(input);\n            return this.full ? this.xf['@@transducer/step'](result, this.getCopy()) : result;\n        };\n        XAperture.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        XAperture.prototype.getCopy = function () {\n            return _concat(_slice(this.acc, this.pos), _slice(this.acc, 0, this.pos));\n        };\n        return _curry2(function _xaperture(n, xf) {\n            return new XAperture(n, xf);\n        });\n    }();\n\n    var _xdrop = function () {\n        function XDrop(n, xf) {\n            this.xf = xf;\n            this.n = n;\n        }\n        XDrop.prototype['@@transducer/init'] = _xfBase.init;\n        XDrop.prototype['@@transducer/result'] = _xfBase.result;\n        XDrop.prototype['@@transducer/step'] = function (result, input) {\n            if (this.n > 0) {\n                this.n -= 1;\n                return result;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdrop(n, xf) {\n            return new XDrop(n, xf);\n        });\n    }();\n\n    var _xdropLast = function () {\n        function XDropLast(n, xf) {\n            this.xf = xf;\n            this.pos = 0;\n            this.full = false;\n            this.acc = new Array(n);\n        }\n        XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLast.prototype['@@transducer/result'] = function (result) {\n            this.acc = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.full) {\n                result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n            }\n            this.store(input);\n            return result;\n        };\n        XDropLast.prototype.store = function (input) {\n            this.acc[this.pos] = input;\n            this.pos += 1;\n            if (this.pos === this.acc.length) {\n                this.pos = 0;\n                this.full = true;\n            }\n        };\n        return _curry2(function _xdropLast(n, xf) {\n            return new XDropLast(n, xf);\n        });\n    }();\n\n    var _xdropRepeatsWith = function () {\n        function XDropRepeatsWith(pred, xf) {\n            this.xf = xf;\n            this.pred = pred;\n            this.lastValue = undefined;\n            this.seenFirstValue = false;\n        }\n        XDropRepeatsWith.prototype['@@transducer/init'] = function () {\n            return this.xf['@@transducer/init']();\n        };\n        XDropRepeatsWith.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropRepeatsWith.prototype['@@transducer/step'] = function (result, input) {\n            var sameAsLast = false;\n            if (!this.seenFirstValue) {\n                this.seenFirstValue = true;\n            } else if (this.pred(this.lastValue, input)) {\n                sameAsLast = true;\n            }\n            this.lastValue = input;\n            return sameAsLast ? result : this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropRepeatsWith(pred, xf) {\n            return new XDropRepeatsWith(pred, xf);\n        });\n    }();\n\n    var _xdropWhile = function () {\n        function XDropWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XDropWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XDropWhile.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f) {\n                if (this.f(input)) {\n                    return result;\n                }\n                this.f = null;\n            }\n            return this.xf['@@transducer/step'](result, input);\n        };\n        return _curry2(function _xdropWhile(f, xf) {\n            return new XDropWhile(f, xf);\n        });\n    }();\n\n    var _xfilter = function () {\n        function XFilter(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFilter.prototype['@@transducer/init'] = _xfBase.init;\n        XFilter.prototype['@@transducer/result'] = _xfBase.result;\n        XFilter.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n        };\n        return _curry2(function _xfilter(f, xf) {\n            return new XFilter(f, xf);\n        });\n    }();\n\n    var _xfind = function () {\n        function XFind(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.found = false;\n        }\n        XFind.prototype['@@transducer/init'] = _xfBase.init;\n        XFind.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, void 0);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFind.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, input));\n            }\n            return result;\n        };\n        return _curry2(function _xfind(f, xf) {\n            return new XFind(f, xf);\n        });\n    }();\n\n    var _xfindIndex = function () {\n        function XFindIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.found = false;\n        }\n        XFindIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindIndex.prototype['@@transducer/result'] = function (result) {\n            if (!this.found) {\n                result = this.xf['@@transducer/step'](result, -1);\n            }\n            return this.xf['@@transducer/result'](result);\n        };\n        XFindIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.found = true;\n                result = _reduced(this.xf['@@transducer/step'](result, this.idx));\n            }\n            return result;\n        };\n        return _curry2(function _xfindIndex(f, xf) {\n            return new XFindIndex(f, xf);\n        });\n    }();\n\n    var _xfindLast = function () {\n        function XFindLast(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XFindLast.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLast.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.last));\n        };\n        XFindLast.prototype['@@transducer/step'] = function (result, input) {\n            if (this.f(input)) {\n                this.last = input;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLast(f, xf) {\n            return new XFindLast(f, xf);\n        });\n    }();\n\n    var _xfindLastIndex = function () {\n        function XFindLastIndex(f, xf) {\n            this.xf = xf;\n            this.f = f;\n            this.idx = -1;\n            this.lastIdx = -1;\n        }\n        XFindLastIndex.prototype['@@transducer/init'] = _xfBase.init;\n        XFindLastIndex.prototype['@@transducer/result'] = function (result) {\n            return this.xf['@@transducer/result'](this.xf['@@transducer/step'](result, this.lastIdx));\n        };\n        XFindLastIndex.prototype['@@transducer/step'] = function (result, input) {\n            this.idx += 1;\n            if (this.f(input)) {\n                this.lastIdx = this.idx;\n            }\n            return result;\n        };\n        return _curry2(function _xfindLastIndex(f, xf) {\n            return new XFindLastIndex(f, xf);\n        });\n    }();\n\n    var _xmap = function () {\n        function XMap(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XMap.prototype['@@transducer/init'] = _xfBase.init;\n        XMap.prototype['@@transducer/result'] = _xfBase.result;\n        XMap.prototype['@@transducer/step'] = function (result, input) {\n            return this.xf['@@transducer/step'](result, this.f(input));\n        };\n        return _curry2(function _xmap(f, xf) {\n            return new XMap(f, xf);\n        });\n    }();\n\n    var _xreduceBy = function () {\n        function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n            this.valueFn = valueFn;\n            this.valueAcc = valueAcc;\n            this.keyFn = keyFn;\n            this.xf = xf;\n            this.inputs = {};\n        }\n        XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n        XReduceBy.prototype['@@transducer/result'] = function (result) {\n            var key;\n            for (key in this.inputs) {\n                if (_has(key, this.inputs)) {\n                    result = this.xf['@@transducer/step'](result, this.inputs[key]);\n                    if (result['@@transducer/reduced']) {\n                        result = result['@@transducer/value'];\n                        break;\n                    }\n                }\n            }\n            this.inputs = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n            var key = this.keyFn(input);\n            this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n            this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n            return result;\n        };\n        return _curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n            return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n        });\n    }();\n\n    var _xtake = function () {\n        function XTake(n, xf) {\n            this.xf = xf;\n            this.n = n;\n            this.i = 0;\n        }\n        XTake.prototype['@@transducer/init'] = _xfBase.init;\n        XTake.prototype['@@transducer/result'] = _xfBase.result;\n        XTake.prototype['@@transducer/step'] = function (result, input) {\n            this.i += 1;\n            var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n            return this.i >= this.n ? _reduced(ret) : ret;\n        };\n        return _curry2(function _xtake(n, xf) {\n            return new XTake(n, xf);\n        });\n    }();\n\n    var _xtakeWhile = function () {\n        function XTakeWhile(f, xf) {\n            this.xf = xf;\n            this.f = f;\n        }\n        XTakeWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XTakeWhile.prototype['@@transducer/result'] = _xfBase.result;\n        XTakeWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.xf['@@transducer/step'](result, input) : _reduced(result);\n        };\n        return _curry2(function _xtakeWhile(f, xf) {\n            return new XTakeWhile(f, xf);\n        });\n    }();\n\n    /**\n     * Adds two values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     * @see R.subtract\n     * @example\n     *\n     *      R.add(2, 3);       //=>  5\n     *      R.add(7)(10);      //=> 17\n     */\n    var add = _curry2(function add(a, b) {\n        return Number(a) + Number(b);\n    });\n\n    /**\n     * Applies a function to the value at the given index of an array, returning a\n     * new copy of the array with the element at the given index replaced with the\n     * result of the function application.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a -> a) -> Number -> [a] -> [a]\n     * @param {Function} fn The function to apply.\n     * @param {Number} idx The index.\n     * @param {Array|Arguments} list An array-like object whose value\n     *        at the supplied index will be replaced.\n     * @return {Array} A copy of the supplied array-like object with\n     *         the element at index `idx` replaced with the value\n     *         returned by applying `fn` to the existing element.\n     * @see R.update\n     * @example\n     *\n     *      R.adjust(R.add(10), 1, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.adjust(R.add(10))(1)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var adjust = _curry3(function adjust(fn, idx, list) {\n        if (idx >= list.length || idx < -list.length) {\n            return list;\n        }\n        var start = idx < 0 ? list.length : 0;\n        var _idx = start + idx;\n        var _list = _concat(list);\n        _list[_idx] = fn(list[_idx]);\n        return _list;\n    });\n\n    /**\n     * Returns `true` if all elements of the list match the predicate, `false` if\n     * there are any that don't.\n     *\n     * Dispatches to the `all` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by every element, `false`\n     *         otherwise.\n     * @see R.any, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      var lessThan3 = R.flip(R.lt)(3);\n     *      R.all(lessThan2)([1, 2]); //=> false\n     *      R.all(lessThan3)([1, 2]); //=> true\n     */\n    var all = _curry2(_dispatchable('all', _xall, function all(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (!fn(list[idx])) {\n                return false;\n            }\n            idx += 1;\n        }\n        return true;\n    }));\n\n    /**\n     * Returns a function that always returns the given value. Note that for\n     * non-primitives the value returned is a reference to the original value.\n     *\n     * This function is known as `const`, `constant`, or `K` (for K combinator) in\n     * other languages and libraries.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> (* -> a)\n     * @param {*} val The value to wrap in a function\n     * @return {Function} A Function :: * -> val.\n     * @example\n     *\n     *      var t = R.always('Tee');\n     *      t(); //=> 'Tee'\n     */\n    var always = _curry1(function always(val) {\n        return function () {\n            return val;\n        };\n    });\n\n    /**\n     * Returns `true` if both arguments are `true`; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if both arguments are `true`, `false` otherwise\n     * @see R.both\n     * @example\n     *\n     *      R.and(true, true); //=> true\n     *      R.and(true, false); //=> false\n     *      R.and(false, true); //=> false\n     *      R.and(false, false); //=> false\n     */\n    var and = _curry2(function and(a, b) {\n        return a && b;\n    });\n\n    /**\n     * Returns `true` if at least one of elements of the list match the predicate,\n     * `false` otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is satisfied by at least one element, `false`\n     *         otherwise.\n     * @see R.all, R.none, R.transduce\n     * @example\n     *\n     *      var lessThan0 = R.flip(R.lt)(0);\n     *      var lessThan2 = R.flip(R.lt)(2);\n     *      R.any(lessThan0)([1, 2]); //=> false\n     *      R.any(lessThan2)([1, 2]); //=> true\n     */\n    var any = _curry2(_dispatchable('any', _xany, function any(fn, list) {\n        var idx = 0;\n        while (idx < list.length) {\n            if (fn(list[idx])) {\n                return true;\n            }\n            idx += 1;\n        }\n        return false;\n    }));\n\n    /**\n     * Returns a new list, composed of n-tuples of consecutive elements If `n` is\n     * greater than the length of the list, an empty list is returned.\n     *\n     * Dispatches to the `aperture` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @param {Number} n The size of the tuples to create\n     * @param {Array} list The list to split into `n`-tuples\n     * @return {Array} The new list.\n     * @see R.transduce\n     * @example\n     *\n     *      R.aperture(2, [1, 2, 3, 4, 5]); //=> [[1, 2], [2, 3], [3, 4], [4, 5]]\n     *      R.aperture(3, [1, 2, 3, 4, 5]); //=> [[1, 2, 3], [2, 3, 4], [3, 4, 5]]\n     *      R.aperture(7, [1, 2, 3, 4, 5]); //=> []\n     */\n    var aperture = _curry2(_dispatchable('aperture', _xaperture, _aperture));\n\n    /**\n     * Returns a new list containing the contents of the given list, followed by\n     * the given element.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The element to add to the end of the new list.\n     * @param {Array} list The list whose contents will be added to the beginning of the output\n     *        list.\n     * @return {Array} A new list containing the contents of the old list followed by `el`.\n     * @see R.prepend\n     * @example\n     *\n     *      R.append('tests', ['write', 'more']); //=> ['write', 'more', 'tests']\n     *      R.append('tests', []); //=> ['tests']\n     *      R.append(['tests'], ['write', 'more']); //=> ['write', 'more', ['tests']]\n     */\n    var append = _curry2(function append(el, list) {\n        return _concat(list, [el]);\n    });\n\n    /**\n     * Applies function `fn` to the argument list `args`. This is useful for\n     * creating a fixed-arity function from a variadic function. `fn` should be a\n     * bound function if context is significant.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> a) -> [*] -> a\n     * @param {Function} fn\n     * @param {Array} args\n     * @return {*}\n     * @see R.call, R.unapply\n     * @example\n     *\n     *      var nums = [1, 2, 3, -99, 42, 6, 7];\n     *      R.apply(Math.max, nums); //=> 42\n     */\n    var apply = _curry2(function apply(fn, args) {\n        return fn.apply(this, args);\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the specified\n     * property with the given value. Note that this copies and flattens prototype\n     * properties onto the new object as well. All non-primitive properties are\n     * copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig String -> a -> {k: v} -> {k: v}\n     * @param {String} prop the property name to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except for the specified property.\n     * @see R.dissoc\n     * @example\n     *\n     *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n     */\n    var assoc = _curry3(function assoc(prop, val, obj) {\n        var result = {};\n        for (var p in obj) {\n            result[p] = obj[p];\n        }\n        result[prop] = val;\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, setting or overriding the nodes required\n     * to create the given path, and placing the specific value at the tail end of\n     * that path. Note that this copies and flattens prototype properties onto the\n     * new object as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig [String] -> a -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {*} val the new value\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original except along the specified path.\n     * @see R.dissocPath\n     * @example\n     *\n     *      R.assocPath(['a', 'b', 'c'], 42, {a: {b: {c: 0}}}); //=> {a: {b: {c: 42}}}\n     */\n    var assocPath = _curry3(function assocPath(path, val, obj) {\n        switch (path.length) {\n            case 0:\n                return val;\n            case 1:\n                return assoc(path[0], val, obj);\n            default:\n                return assoc(path[0], assocPath(_slice(path, 1), val, Object(obj[path[0]])), obj);\n        }\n    });\n\n    /**\n     * Creates a function that is bound to a context.\n     * Note: `R.bind` does not provide the additional argument-binding capabilities of\n     * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Function\n     * @category Object\n     * @sig (* -> *) -> {*} -> (* -> *)\n     * @param {Function} fn The function to bind to context\n     * @param {Object} thisObj The context to bind `fn` to\n     * @return {Function} A function that will execute in the context of `thisObj`.\n     * @see R.partial\n     * @example\n     *\n     *      var log = R.bind(console.log, console);\n     *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n     *      // logs {a: 2}\n     */\n    var bind = _curry2(function bind(fn, thisObj) {\n        return _arity(fn.length, function () {\n            return fn.apply(thisObj, arguments);\n        });\n    });\n\n    /**\n     * Restricts a number to be within a range.\n     *\n     * Also works for other ordered types such as Strings and Dates.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a -> a\n     * @param {Number} minimum number\n     * @param {Number} maximum number\n     * @param {Number} value to be clamped\n     * @return {Number} Returns the clamped value\n     * @example\n     *\n     *      R.clamp(1, 10, -1) // => 1\n     *      R.clamp(1, 10, 11) // => 10\n     *      R.clamp(1, 10, 4)  // => 4\n     */\n    var clamp = _curry3(function clamp(min, max, value) {\n        if (min > max) {\n            throw new Error('min must not be greater than max in clamp(min, max, value)');\n        }\n        return value < min ? min : value > max ? max : value;\n    });\n\n    /**\n     * Makes a comparator function out of a function that reports whether the first\n     * element is less than the second.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a, b -> Boolean) -> (a, b -> Number)\n     * @param {Function} pred A predicate function of arity two.\n     * @return {Function} A Function :: a -> b -> Int that returns `-1` if a < b, `1` if b < a, otherwise `0`.\n     * @example\n     *\n     *      var cmp = R.comparator((a, b) => a.age < b.age);\n     *      var people = [\n     *        // ...\n     *      ];\n     *      R.sort(cmp, people);\n     */\n    var comparator = _curry1(function comparator(pred) {\n        return function (a, b) {\n            return pred(a, b) ? -1 : pred(b, a) ? 1 : 0;\n        };\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function, with the specified\n     * arity. The curried function has two unusual capabilities. First, its\n     * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curry\n     * @example\n     *\n     *      var sumArgs = (...args) => R.sum(args);\n     *\n     *      var curriedAddFourNumbers = R.curryN(4, sumArgs);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curryN = _curry2(function curryN(length, fn) {\n        if (length === 1) {\n            return _curry1(fn);\n        }\n        return _arity(length, _curryN(length, [], fn));\n    });\n\n    /**\n     * Decrements its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.inc\n     * @example\n     *\n     *      R.dec(42); //=> 41\n     */\n    var dec = add(-1);\n\n    /**\n     * Returns the second argument if it is not `null`, `undefined` or `NaN`\n     * otherwise the first argument is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Logic\n     * @sig a -> b -> a | b\n     * @param {a} val The default value.\n     * @param {b} val The value to return if it is not null or undefined\n     * @return {*} The the second value or the default value\n     * @example\n     *\n     *      var defaultTo42 = R.defaultTo(42);\n     *\n     *      defaultTo42(null);  //=> 42\n     *      defaultTo42(undefined);  //=> 42\n     *      defaultTo42('Ramda');  //=> 'Ramda'\n     *      defaultTo42(parseInt('string')); //=> 42\n     */\n    var defaultTo = _curry2(function defaultTo(d, v) {\n        return v == null || v !== v ? d : v;\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.difference, R.symmetricDifference, R.symmetricDifferenceWith\n     * @example\n     *\n     *      var cmp = (x, y) => x.a === y.a;\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}];\n     *      var l2 = [{a: 3}, {a: 4}];\n     *      R.differenceWith(cmp, l1, l2); //=> [{a: 1}, {a: 2}]\n     */\n    var differenceWith = _curry3(function differenceWith(pred, first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_containsWith(pred, first[idx], second) && !_containsWith(pred, first[idx], out)) {\n                out.push(first[idx]);\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object that does not contain a `prop` property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Object\n     * @sig String -> {k: v} -> {k: v}\n     * @param {String} prop the name of the property to dissociate\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object similar to the original but without the specified property\n     * @see R.assoc\n     * @example\n     *\n     *      R.dissoc('b', {a: 1, b: 2, c: 3}); //=> {a: 1, c: 3}\n     */\n    var dissoc = _curry2(function dissoc(prop, obj) {\n        var result = {};\n        for (var p in obj) {\n            if (p !== prop) {\n                result[p] = obj[p];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Makes a shallow clone of an object, omitting the property at the given path.\n     * Note that this copies and flattens prototype properties onto the new object\n     * as well. All non-primitive properties are copied by reference.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.11.0\n     * @category Object\n     * @sig [String] -> {k: v} -> {k: v}\n     * @param {Array} path the path to set\n     * @param {Object} obj the object to clone\n     * @return {Object} a new object without the property at path\n     * @see R.assocPath\n     * @example\n     *\n     *      R.dissocPath(['a', 'b', 'c'], {a: {b: {c: 42}}}); //=> {a: {b: {}}}\n     */\n    var dissocPath = _curry2(function dissocPath(path, obj) {\n        switch (path.length) {\n            case 0:\n                return obj;\n            case 1:\n                return dissoc(path[0], obj);\n            default:\n                var head = path[0];\n                var tail = _slice(path, 1);\n                return obj[head] == null ? obj : assoc(head, dissocPath(tail, obj[head]), obj);\n        }\n    });\n\n    /**\n     * Divides two numbers. Equivalent to `a / b`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a / b`.\n     * @see R.multiply\n     * @example\n     *\n     *      R.divide(71, 100); //=> 0.71\n     *\n     *      var half = R.divide(R.__, 2);\n     *      half(42); //=> 21\n     *\n     *      var reciprocal = R.divide(1);\n     *      reciprocal(4);   //=> 0.25\n     */\n    var divide = _curry2(function divide(a, b) {\n        return a / b;\n    });\n\n    /**\n     * Returns a new list excluding the leading elements of a given list which\n     * satisfy the supplied predicate function. It passes each value to the supplied\n     * predicate function, skipping elements while the predicate function returns\n     * `true`. The predicate function is applied to one argument: *(value)*.\n     *\n     * Dispatches to the `dropWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var lteTwo = x => x <= 2;\n     *\n     *      R.dropWhile(lteTwo, [1, 2, 3, 4, 3, 2, 1]); //=> [3, 4, 3, 2, 1]\n     */\n    var dropWhile = _curry2(_dispatchable('dropWhile', _xdropWhile, function dropWhile(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && pred(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, idx);\n    }));\n\n    /**\n     * Returns the empty value of its argument's type. Ramda defines the empty\n     * value of Array (`[]`), Object (`{}`), String (`''`), and Arguments. Other\n     * types are supported if they define `<Type>.empty` and/or\n     * `<Type>.prototype.empty`.\n     *\n     * Dispatches to the `empty` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x\n     * @return {*}\n     * @example\n     *\n     *      R.empty(Just(42));      //=> Nothing()\n     *      R.empty([1, 2, 3]);     //=> []\n     *      R.empty('unicorns');    //=> ''\n     *      R.empty({x: 1, y: 2});  //=> {}\n     */\n    // else\n    var empty = _curry1(function empty(x) {\n        return x != null && typeof x.empty === 'function' ? x.empty() : x != null && x.constructor != null && typeof x.constructor.empty === 'function' ? x.constructor.empty() : _isArray(x) ? [] : _isString(x) ? '' : _isObject(x) ? {} : _isArguments(x) ? function () {\n            return arguments;\n        }() : // else\n        void 0;\n    });\n\n    /**\n     * Creates a new object by recursively evolving a shallow copy of `object`,\n     * according to the `transformation` functions. All non-primitive properties\n     * are copied by reference.\n     *\n     * A `transformation` function will not be invoked if its corresponding key\n     * does not exist in the evolved object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {k: (v -> v)} -> {k: v} -> {k: v}\n     * @param {Object} transformations The object specifying transformation functions to apply\n     *        to the object.\n     * @param {Object} object The object to be transformed.\n     * @return {Object} The transformed object.\n     * @example\n     *\n     *      var tomato  = {firstName: '  Tomato ', data: {elapsed: 100, remaining: 1400}, id:123};\n     *      var transformations = {\n     *        firstName: R.trim,\n     *        lastName: R.trim, // Will not get invoked.\n     *        data: {elapsed: R.add(1), remaining: R.add(-1)}\n     *      };\n     *      R.evolve(transformations, tomato); //=> {firstName: 'Tomato', data: {elapsed: 101, remaining: 1399}, id:123}\n     */\n    var evolve = _curry2(function evolve(transformations, object) {\n        var result = {};\n        var transformation, key, type;\n        for (key in object) {\n            transformation = transformations[key];\n            type = typeof transformation === 'undefined' ? 'undefined' : _typeof(transformation);\n            result[key] = type === 'function' ? transformation(object[key]) : type === 'object' ? evolve(transformations[key], object[key]) : object[key];\n        }\n        return result;\n    });\n\n    /**\n     * Returns the first element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `find` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     *        desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n     *      R.find(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var find = _curry2(_dispatchable('find', _xfind, function find(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx += 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the first element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1}, {a: 2}, {a: 3}];\n     *      R.findIndex(R.propEq('a', 2))(xs); //=> 1\n     *      R.findIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findIndex = _curry2(_dispatchable('findIndex', _xfindIndex, function findIndex(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Returns the last element of the list which matches the predicate, or\n     * `undefined` if no element matches.\n     *\n     * Dispatches to the `findLast` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> a | undefined\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Object} The element found, or `undefined`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLast(R.propEq('a', 1))(xs); //=> {a: 1, b: 1}\n     *      R.findLast(R.propEq('a', 4))(xs); //=> undefined\n     */\n    var findLast = _curry2(_dispatchable('findLast', _xfindLast, function findLast(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return list[idx];\n            }\n            idx -= 1;\n        }\n    }));\n\n    /**\n     * Returns the index of the last element of the list which matches the\n     * predicate, or `-1` if no element matches.\n     *\n     * Dispatches to the `findLastIndex` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Number\n     * @param {Function} fn The predicate function used to determine if the element is the\n     * desired one.\n     * @param {Array} list The array to consider.\n     * @return {Number} The index of the element found, or `-1`.\n     * @see R.transduce\n     * @example\n     *\n     *      var xs = [{a: 1, b: 0}, {a:1, b: 1}];\n     *      R.findLastIndex(R.propEq('a', 1))(xs); //=> 1\n     *      R.findLastIndex(R.propEq('a', 4))(xs); //=> -1\n     */\n    var findLastIndex = _curry2(_dispatchable('findLastIndex', _xfindLastIndex, function findLastIndex(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            if (fn(list[idx])) {\n                return idx;\n            }\n            idx -= 1;\n        }\n        return -1;\n    }));\n\n    /**\n     * Iterate over an input `list`, calling a provided function `fn` for each\n     * element in the list.\n     *\n     * `fn` receives one argument: *(value)*.\n     *\n     * Note: `R.forEach` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.forEach` method. For more\n     * details on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach#Description\n     *\n     * Also note that, unlike `Array.prototype.forEach`, Ramda's `forEach` returns\n     * the original array. In some libraries this function is named `each`.\n     *\n     * Dispatches to the `forEach` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig (a -> *) -> [a] -> [a]\n     * @param {Function} fn The function to invoke. Receives one argument, `value`.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} The original list.\n     * @see R.addIndex\n     * @example\n     *\n     *      var printXPlusFive = x => console.log(x + 5);\n     *      R.forEach(printXPlusFive, [1, 2, 3]); //=> [1, 2, 3]\n     *      // logs 6\n     *      // logs 7\n     *      // logs 8\n     */\n    var forEach = _curry2(_checkForMethod('forEach', function forEach(fn, list) {\n        var len = list.length;\n        var idx = 0;\n        while (idx < len) {\n            fn(list[idx]);\n            idx += 1;\n        }\n        return list;\n    }));\n\n    /**\n     * Creates a new object from a list key-value pairs. If a key appears in\n     * multiple pairs, the rightmost pair is included in the object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [[k,v]] -> {k: v}\n     * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n     * @return {Object} The object made by pairing up `keys` and `values`.\n     * @see R.toPairs, R.pair\n     * @example\n     *\n     *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n     */\n    var fromPairs = _curry1(function fromPairs(pairs) {\n        var result = {};\n        var idx = 0;\n        while (idx < pairs.length) {\n            result[pairs[idx][0]] = pairs[idx][1];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Takes a list and returns a list of lists where each sublist's elements are\n     * all \"equal\" according to the provided equality function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.21.0\n     * @category List\n     * @sig ((a, a) → Boolean) → [a] → [[a]]\n     * @param {Function} fn Function for determining whether two given (adjacent)\n     *        elements should be in the same group\n     * @param {Array} list The array to group. Also accepts a string, which will be\n     *        treated as a list of characters.\n     * @return {List} A list that contains sublists of equal elements,\n     *         whose concatenations are equal to the original list.\n     * @example\n     *\n     * R.groupWith(R.equals, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n     * //=> [[0], [1, 1], [2], [3], [5], [8], [13], [21]]\n     *\n     * R.groupWith((a, b) => a % 2 === b % 2, [0, 1, 1, 2, 3, 5, 8, 13, 21])\n     * //=> [[0], [1, 1], [2], [3, 5], [8], [13, 21]]\n     *\n     * R.groupWith(R.eqBy(isVowel), 'aestiou')\n     * //=> ['ae', 'st', 'iou']\n     */\n    var groupWith = _curry2(function (fn, list) {\n        var res = [];\n        var idx = 0;\n        var len = list.length;\n        while (idx < len) {\n            var nextidx = idx + 1;\n            while (nextidx < len && fn(list[idx], list[nextidx])) {\n                nextidx += 1;\n            }\n            res.push(list.slice(idx, nextidx));\n            idx = nextidx;\n        }\n        return res;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.lt\n     * @example\n     *\n     *      R.gt(2, 1); //=> true\n     *      R.gt(2, 2); //=> false\n     *      R.gt(2, 3); //=> false\n     *      R.gt('a', 'z'); //=> false\n     *      R.gt('z', 'a'); //=> true\n     */\n    var gt = _curry2(function gt(a, b) {\n        return a > b;\n    });\n\n    /**\n     * Returns `true` if the first argument is greater than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.lte\n     * @example\n     *\n     *      R.gte(2, 1); //=> true\n     *      R.gte(2, 2); //=> true\n     *      R.gte(2, 3); //=> false\n     *      R.gte('a', 'z'); //=> false\n     *      R.gte('z', 'a'); //=> true\n     */\n    var gte = _curry2(function gte(a, b) {\n        return a >= b;\n    });\n\n    /**\n     * Returns whether or not an object has an own property with the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      var hasName = R.has('name');\n     *      hasName({name: 'alice'});   //=> true\n     *      hasName({name: 'bob'});     //=> true\n     *      hasName({});                //=> false\n     *\n     *      var point = {x: 0, y: 0};\n     *      var pointHas = R.has(R.__, point);\n     *      pointHas('x');  //=> true\n     *      pointHas('y');  //=> true\n     *      pointHas('z');  //=> false\n     */\n    var has = _curry2(_has);\n\n    /**\n     * Returns whether or not an object or its prototype chain has a property with\n     * the specified name\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Object\n     * @sig s -> {s: x} -> Boolean\n     * @param {String} prop The name of the property to check for.\n     * @param {Object} obj The object to query.\n     * @return {Boolean} Whether the property exists.\n     * @example\n     *\n     *      function Rectangle(width, height) {\n     *        this.width = width;\n     *        this.height = height;\n     *      }\n     *      Rectangle.prototype.area = function() {\n     *        return this.width * this.height;\n     *      };\n     *\n     *      var square = new Rectangle(2, 2);\n     *      R.hasIn('width', square);  //=> true\n     *      R.hasIn('area', square);  //=> true\n     */\n    var hasIn = _curry2(function hasIn(prop, obj) {\n        return prop in obj;\n    });\n\n    /**\n     * Returns true if its arguments are identical, false otherwise. Values are\n     * identical if they reference the same memory. `NaN` is identical to `NaN`;\n     * `0` and `-0` are not identical.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      var o = {};\n     *      R.identical(o, o); //=> true\n     *      R.identical(1, 1); //=> true\n     *      R.identical(1, '1'); //=> false\n     *      R.identical([], []); //=> false\n     *      R.identical(0, -0); //=> false\n     *      R.identical(NaN, NaN); //=> true\n     */\n    // SameValue algorithm\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Step 6.a: NaN == NaN\n    var identical = _curry2(function identical(a, b) {\n        // SameValue algorithm\n        if (a === b) {\n            // Steps 1-5, 7-10\n            // Steps 6.b-6.e: +0 != -0\n            return a !== 0 || 1 / a === 1 / b;\n        } else {\n            // Step 6.a: NaN == NaN\n            return a !== a && b !== b;\n        }\n    });\n\n    /**\n     * A function that does nothing but return the parameter supplied to it. Good\n     * as a default or placeholder function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig a -> a\n     * @param {*} x The value to return.\n     * @return {*} The input value, `x`.\n     * @example\n     *\n     *      R.identity(1); //=> 1\n     *\n     *      var obj = {};\n     *      R.identity(obj) === obj; //=> true\n     */\n    var identity = _curry1(_identity);\n\n    /**\n     * Creates a function that will process either the `onTrue` or the `onFalse`\n     * function depending upon the result of the `condition` predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> *) -> (*... -> *) -> (*... -> *)\n     * @param {Function} condition A predicate function\n     * @param {Function} onTrue A function to invoke when the `condition` evaluates to a truthy value.\n     * @param {Function} onFalse A function to invoke when the `condition` evaluates to a falsy value.\n     * @return {Function} A new unary function that will process either the `onTrue` or the `onFalse`\n     *                    function depending upon the result of the `condition` predicate.\n     * @see R.unless, R.when\n     * @example\n     *\n     *      var incCount = R.ifElse(\n     *        R.has('count'),\n     *        R.over(R.lensProp('count'), R.inc),\n     *        R.assoc('count', 1)\n     *      );\n     *      incCount({});           //=> { count: 1 }\n     *      incCount({ count: 1 }); //=> { count: 2 }\n     */\n    var ifElse = _curry3(function ifElse(condition, onTrue, onFalse) {\n        return curryN(Math.max(condition.length, onTrue.length, onFalse.length), function _ifElse() {\n            return condition.apply(this, arguments) ? onTrue.apply(this, arguments) : onFalse.apply(this, arguments);\n        });\n    });\n\n    /**\n     * Increments its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @see R.dec\n     * @example\n     *\n     *      R.inc(42); //=> 43\n     */\n    var inc = add(1);\n\n    /**\n     * Inserts the supplied element into the list, at index `index`. _Note that\n     * this is not destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} index The position to insert the element\n     * @param {*} elt The element to insert into the Array\n     * @param {Array} list The list to insert into\n     * @return {Array} A new Array with `elt` inserted at `index`.\n     * @example\n     *\n     *      R.insert(2, 'x', [1,2,3,4]); //=> [1,2,'x',3,4]\n     */\n    var insert = _curry3(function insert(idx, elt, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        var result = _slice(list);\n        result.splice(idx, 0, elt);\n        return result;\n    });\n\n    /**\n     * Inserts the sub-list into the list, at index `index`. _Note that this is not\n     * destructive_: it returns a copy of the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig Number -> [a] -> [a] -> [a]\n     * @param {Number} index The position to insert the sub-list\n     * @param {Array} elts The sub-list to insert into the Array\n     * @param {Array} list The list to insert the sub-list into\n     * @return {Array} A new Array with `elts` inserted starting at `index`.\n     * @example\n     *\n     *      R.insertAll(2, ['x','y','z'], [1,2,3,4]); //=> [1,2,'x','y','z',3,4]\n     */\n    var insertAll = _curry3(function insertAll(idx, elts, list) {\n        idx = idx < list.length && idx >= 0 ? idx : list.length;\n        return _concat(_concat(_slice(list, 0, idx), elts), _slice(list, idx));\n    });\n\n    /**\n     * Creates a new list with the separator interposed between elements.\n     *\n     * Dispatches to the `intersperse` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} separator The element to add to the list.\n     * @param {Array} list The list to be interposed.\n     * @return {Array} The new list.\n     * @example\n     *\n     *      R.intersperse('n', ['ba', 'a', 'a']); //=> ['ba', 'n', 'a', 'n', 'a']\n     */\n    var intersperse = _curry2(_checkForMethod('intersperse', function intersperse(separator, list) {\n        var out = [];\n        var idx = 0;\n        var length = list.length;\n        while (idx < length) {\n            if (idx === length - 1) {\n                out.push(list[idx]);\n            } else {\n                out.push(list[idx], separator);\n            }\n            idx += 1;\n        }\n        return out;\n    }));\n\n    /**\n     * See if an object (`val`) is an instance of the supplied constructor. This\n     * function will check up the inheritance chain, if any.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Type\n     * @sig (* -> {*}) -> a -> Boolean\n     * @param {Object} ctor A constructor\n     * @param {*} val The value to test\n     * @return {Boolean}\n     * @example\n     *\n     *      R.is(Object, {}); //=> true\n     *      R.is(Number, 1); //=> true\n     *      R.is(Object, 1); //=> false\n     *      R.is(String, 's'); //=> true\n     *      R.is(String, new String('')); //=> true\n     *      R.is(Object, new String('')); //=> true\n     *      R.is(Object, 's'); //=> false\n     *      R.is(Number, {}); //=> false\n     */\n    var is = _curry2(function is(Ctor, val) {\n        return val != null && val.constructor === Ctor || val instanceof Ctor;\n    });\n\n    /**\n     * Tests whether or not an object is similar to an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.5.0\n     * @category Type\n     * @category List\n     * @sig * -> Boolean\n     * @param {*} x The object to test.\n     * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n     * @example\n     *\n     *      R.isArrayLike([]); //=> true\n     *      R.isArrayLike(true); //=> false\n     *      R.isArrayLike({}); //=> false\n     *      R.isArrayLike({length: 10}); //=> false\n     *      R.isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n     */\n    var isArrayLike = _curry1(function isArrayLike(x) {\n        if (_isArray(x)) {\n            return true;\n        }\n        if (!x) {\n            return false;\n        }\n        if ((typeof x === 'undefined' ? 'undefined' : _typeof(x)) !== 'object') {\n            return false;\n        }\n        if (_isString(x)) {\n            return false;\n        }\n        if (x.nodeType === 1) {\n            return !!x.length;\n        }\n        if (x.length === 0) {\n            return true;\n        }\n        if (x.length > 0) {\n            return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n        }\n        return false;\n    });\n\n    /**\n     * Checks if the input value is `null` or `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Type\n     * @sig * -> Boolean\n     * @param {*} x The value to test.\n     * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n     * @example\n     *\n     *      R.isNil(null); //=> true\n     *      R.isNil(undefined); //=> true\n     *      R.isNil(0); //=> false\n     *      R.isNil([]); //=> false\n     */\n    var isNil = _curry1(function isNil(x) {\n        return x == null;\n    });\n\n    /**\n     * Returns a list containing the names of all the enumerable own properties of\n     * the supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own properties.\n     * @example\n     *\n     *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n     */\n    // cover IE < 9 keys issues\n    // Safari bug\n    var keys = function () {\n        // cover IE < 9 keys issues\n        var hasEnumBug = !{ toString: null }.propertyIsEnumerable('toString');\n        var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n        // Safari bug\n        var hasArgsEnumBug = function () {\n            'use strict';\n\n            return arguments.propertyIsEnumerable('length');\n        }();\n        var contains = function contains(list, item) {\n            var idx = 0;\n            while (idx < list.length) {\n                if (list[idx] === item) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        };\n        return typeof Object.keys === 'function' && !hasArgsEnumBug ? _curry1(function keys(obj) {\n            return Object(obj) !== obj ? [] : Object.keys(obj);\n        }) : _curry1(function keys(obj) {\n            if (Object(obj) !== obj) {\n                return [];\n            }\n            var prop, nIdx;\n            var ks = [];\n            var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n            for (prop in obj) {\n                if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n                    ks[ks.length] = prop;\n                }\n            }\n            if (hasEnumBug) {\n                nIdx = nonEnumerableProps.length - 1;\n                while (nIdx >= 0) {\n                    prop = nonEnumerableProps[nIdx];\n                    if (_has(prop, obj) && !contains(ks, prop)) {\n                        ks[ks.length] = prop;\n                    }\n                    nIdx -= 1;\n                }\n            }\n            return ks;\n        });\n    }();\n\n    /**\n     * Returns a list containing the names of all the properties of the supplied\n     * object, including prototype properties.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [k]\n     * @param {Object} obj The object to extract properties from\n     * @return {Array} An array of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.keysIn(f); //=> ['x', 'y']\n     */\n    var keysIn = _curry1(function keysIn(obj) {\n        var prop;\n        var ks = [];\n        for (prop in obj) {\n            ks[ks.length] = prop;\n        }\n        return ks;\n    });\n\n    /**\n     * Returns the number of elements in the array by returning `list.length`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [a] -> Number\n     * @param {Array} list The array to inspect.\n     * @return {Number} The length of the array.\n     * @example\n     *\n     *      R.length([]); //=> 0\n     *      R.length([1, 2, 3]); //=> 3\n     */\n    var length = _curry1(function length(list) {\n        return list != null && _isNumber(list.length) ? list.length : NaN;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than the second; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @see R.gt\n     * @example\n     *\n     *      R.lt(2, 1); //=> false\n     *      R.lt(2, 2); //=> false\n     *      R.lt(2, 3); //=> true\n     *      R.lt('a', 'z'); //=> true\n     *      R.lt('z', 'a'); //=> false\n     */\n    var lt = _curry2(function lt(a, b) {\n        return a < b;\n    });\n\n    /**\n     * Returns `true` if the first argument is less than or equal to the second;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> Boolean\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Boolean}\n     * @see R.gte\n     * @example\n     *\n     *      R.lte(2, 1); //=> false\n     *      R.lte(2, 2); //=> true\n     *      R.lte(2, 3); //=> true\n     *      R.lte('a', 'z'); //=> true\n     *      R.lte('z', 'a'); //=> false\n     */\n    var lte = _curry2(function lte(a, b) {\n        return a <= b;\n    });\n\n    /**\n     * The mapAccum function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from left to right, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var appender = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccum(appender, 0, digits); //=> ['01234', ['01', '012', '0123', '01234']]\n     */\n    var mapAccum = _curry3(function mapAccum(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var tuple = [acc];\n        while (idx < len) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx += 1;\n        }\n        return [tuple[0], result];\n    });\n\n    /**\n     * The mapAccumRight function behaves like a combination of map and reduce; it\n     * applies a function to each element of a list, passing an accumulating\n     * parameter from right to left, and returning a final value of this\n     * accumulator together with the new list.\n     *\n     * Similar to `mapAccum`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two arguments, *acc* and *value*, and should\n     * return a tuple *[acc, value]*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (acc -> x -> (acc, y)) -> acc -> [x] -> (acc, [y])\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var digits = ['1', '2', '3', '4'];\n     *      var append = (a, b) => [a + b, a + b];\n     *\n     *      R.mapAccumRight(append, 0, digits); //=> ['04321', ['04321', '0432', '043', '04']]\n     */\n    var mapAccumRight = _curry3(function mapAccumRight(fn, acc, list) {\n        var idx = list.length - 1;\n        var result = [];\n        var tuple = [acc];\n        while (idx >= 0) {\n            tuple = fn(tuple[0], list[idx]);\n            result[idx] = tuple[1];\n            idx -= 1;\n        }\n        return [tuple[0], result];\n    });\n\n    /**\n     * Tests a regular expression against a String. Note that this function will\n     * return an empty array when there are no matches. This differs from\n     * [`String.prototype.match`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match)\n     * which returns `null` when there are no matches.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig RegExp -> String -> [String | Undefined]\n     * @param {RegExp} rx A regular expression.\n     * @param {String} str The string to match against\n     * @return {Array} The list of matches or empty array.\n     * @see R.test\n     * @example\n     *\n     *      R.match(/([a-z]a)/g, 'bananas'); //=> ['ba', 'na', 'na']\n     *      R.match(/a/, 'b'); //=> []\n     *      R.match(/a/, null); //=> TypeError: null does not have a method named \"match\"\n     */\n    var match = _curry2(function match(rx, str) {\n        return str.match(rx) || [];\n    });\n\n    /**\n     * mathMod behaves like the modulo operator should mathematically, unlike the\n     * `%` operator (and by extension, R.modulo). So while \"-17 % 5\" is -2,\n     * mathMod(-17, 5) is 3. mathMod requires Integer arguments, and returns NaN\n     * when the modulus is zero or negative.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} m The dividend.\n     * @param {Number} p the modulus.\n     * @return {Number} The result of `b mod a`.\n     * @example\n     *\n     *      R.mathMod(-17, 5);  //=> 3\n     *      R.mathMod(17, 5);   //=> 2\n     *      R.mathMod(17, -5);  //=> NaN\n     *      R.mathMod(17, 0);   //=> NaN\n     *      R.mathMod(17.2, 5); //=> NaN\n     *      R.mathMod(17, 5.3); //=> NaN\n     *\n     *      var clock = R.mathMod(R.__, 12);\n     *      clock(15); //=> 3\n     *      clock(24); //=> 0\n     *\n     *      var seventeenMod = R.mathMod(17);\n     *      seventeenMod(3);  //=> 2\n     *      seventeenMod(4);  //=> 1\n     *      seventeenMod(10); //=> 7\n     */\n    var mathMod = _curry2(function mathMod(m, p) {\n        if (!_isInteger(m)) {\n            return NaN;\n        }\n        if (!_isInteger(p) || p < 1) {\n            return NaN;\n        }\n        return (m % p + p) % p;\n    });\n\n    /**\n     * Returns the larger of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.maxBy, R.min\n     * @example\n     *\n     *      R.max(789, 123); //=> 789\n     *      R.max('a', 'b'); //=> 'b'\n     */\n    var max = _curry2(function max(a, b) {\n        return b > a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * larger result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.max, R.minBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.maxBy(square, -3, 2); //=> -3\n     *\n     *      R.reduce(R.maxBy(square), 0, [3, -5, 4, 1, -2]); //=> -5\n     *      R.reduce(R.maxBy(square), 0, []); //=> 0\n     */\n    var maxBy = _curry3(function maxBy(f, a, b) {\n        return f(b) > f(a) ? b : a;\n    });\n\n    /**\n     * Create a new object with the own properties of the first object merged with\n     * the own properties of the second object. If a key exists in both objects,\n     * the value from the second object will be used.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> {k: v} -> {k: v}\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.mergeWith, R.mergeWithKey\n     * @example\n     *\n     *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n     *      //=> { 'name': 'fred', 'age': 40 }\n     *\n     *      var resetToDefault = R.merge(R.__, {x: 0});\n     *      resetToDefault({x: 5, y: 2}); //=> {x: 0, y: 2}\n     */\n    var merge = _curry2(function merge(l, r) {\n        return _assign({}, l, r);\n    });\n\n    /**\n     * Merges a list of objects together into one object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig [{k: v}] -> {k: v}\n     * @param {Array} list An array of objects\n     * @return {Object} A merged object.\n     * @see R.reduce\n     * @example\n     *\n     *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n     *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n     */\n    var mergeAll = _curry1(function mergeAll(list) {\n        return _assign.apply(null, [{}].concat(list));\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the key\n     * and the values associated with the key in each object, with the result being\n     * used as the value associated with the key in the returned object. The key\n     * will be excluded from the returned object if the resulting value is\n     * `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @sig (String -> a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWith\n     * @example\n     *\n     *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n     *      R.mergeWithKey(concatValues,\n     *                     { a: true, thing: 'foo', values: [10, 20] },\n     *                     { b: true, thing: 'bar', values: [15, 35] });\n     *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n     */\n    var mergeWithKey = _curry3(function mergeWithKey(fn, l, r) {\n        var result = {};\n        var k;\n        for (k in l) {\n            if (_has(k, l)) {\n                result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n            }\n        }\n        for (k in r) {\n            if (_has(k, r) && !_has(k, result)) {\n                result[k] = r[k];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the smaller of its two arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord a => a -> a -> a\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.minBy, R.max\n     * @example\n     *\n     *      R.min(789, 123); //=> 123\n     *      R.min('a', 'b'); //=> 'a'\n     */\n    var min = _curry2(function min(a, b) {\n        return b < a ? b : a;\n    });\n\n    /**\n     * Takes a function and two values, and returns whichever value produces the\n     * smaller result when passed to the provided function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> a -> a -> a\n     * @param {Function} f\n     * @param {*} a\n     * @param {*} b\n     * @return {*}\n     * @see R.min, R.maxBy\n     * @example\n     *\n     *      //  square :: Number -> Number\n     *      var square = n => n * n;\n     *\n     *      R.minBy(square, -3, 2); //=> 2\n     *\n     *      R.reduce(R.minBy(square), Infinity, [3, -5, 4, 1, -2]); //=> 1\n     *      R.reduce(R.minBy(square), Infinity, []); //=> Infinity\n     */\n    var minBy = _curry3(function minBy(f, a, b) {\n        return f(b) < f(a) ? b : a;\n    });\n\n    /**\n     * Divides the first parameter by the second and returns the remainder. Note\n     * that this function preserves the JavaScript-style behavior for modulo. For\n     * mathematical modulo see `mathMod`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The value to the divide.\n     * @param {Number} b The pseudo-modulus\n     * @return {Number} The result of `b % a`.\n     * @see R.mathMod\n     * @example\n     *\n     *      R.modulo(17, 3); //=> 2\n     *      // JS behavior:\n     *      R.modulo(-17, 3); //=> -2\n     *      R.modulo(17, -3); //=> 2\n     *\n     *      var isOdd = R.modulo(R.__, 2);\n     *      isOdd(42); //=> 0\n     *      isOdd(21); //=> 1\n     */\n    var modulo = _curry2(function modulo(a, b) {\n        return a % b;\n    });\n\n    /**\n     * Multiplies two numbers. Equivalent to `a * b` but curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a * b`.\n     * @see R.divide\n     * @example\n     *\n     *      var double = R.multiply(2);\n     *      var triple = R.multiply(3);\n     *      double(3);       //=>  6\n     *      triple(4);       //=> 12\n     *      R.multiply(2, 5);  //=> 10\n     */\n    var multiply = _curry2(function multiply(a, b) {\n        return a * b;\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly `n` parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> (* -> a) -> (* -> a)\n     * @param {Number} n The desired arity of the new function.\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity `n`.\n     * @example\n     *\n     *      var takesTwoArgs = (a, b) => [a, b];\n     *\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.nAry(1, takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only `n` arguments are passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var nAry = _curry2(function nAry(n, fn) {\n        switch (n) {\n            case 0:\n                return function () {\n                    return fn.call(this);\n                };\n            case 1:\n                return function (a0) {\n                    return fn.call(this, a0);\n                };\n            case 2:\n                return function (a0, a1) {\n                    return fn.call(this, a0, a1);\n                };\n            case 3:\n                return function (a0, a1, a2) {\n                    return fn.call(this, a0, a1, a2);\n                };\n            case 4:\n                return function (a0, a1, a2, a3) {\n                    return fn.call(this, a0, a1, a2, a3);\n                };\n            case 5:\n                return function (a0, a1, a2, a3, a4) {\n                    return fn.call(this, a0, a1, a2, a3, a4);\n                };\n            case 6:\n                return function (a0, a1, a2, a3, a4, a5) {\n                    return fn.call(this, a0, a1, a2, a3, a4, a5);\n                };\n            case 7:\n                return function (a0, a1, a2, a3, a4, a5, a6) {\n                    return fn.call(this, a0, a1, a2, a3, a4, a5, a6);\n                };\n            case 8:\n                return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n                    return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7);\n                };\n            case 9:\n                return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n                    return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8);\n                };\n            case 10:\n                return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n                    return fn.call(this, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);\n                };\n            default:\n                throw new Error('First argument to nAry must be a non-negative integer no greater than ten');\n        }\n    });\n\n    /**\n     * Negates its argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Math\n     * @sig Number -> Number\n     * @param {Number} n\n     * @return {Number}\n     * @example\n     *\n     *      R.negate(42); //=> -42\n     */\n    var negate = _curry1(function negate(n) {\n        return -n;\n    });\n\n    /**\n     * Returns `true` if no elements of the list match the predicate, `false`\n     * otherwise.\n     *\n     * Dispatches to the `any` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> Boolean\n     * @param {Function} fn The predicate function.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the predicate is not satisfied by every element, `false` otherwise.\n     * @see R.all, R.any\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.none(isEven, [1, 3, 5, 7, 9, 11]); //=> true\n     *      R.none(isEven, [1, 3, 5, 7, 8, 11]); //=> false\n     */\n    var none = _curry2(_complement(_dispatchable('any', _xany, any)));\n\n    /**\n     * A function that returns the `!` of its argument. It will return `true` when\n     * passed false-y value, and `false` when passed a truth-y one.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> Boolean\n     * @param {*} a any value\n     * @return {Boolean} the logical inverse of passed argument.\n     * @see R.complement\n     * @example\n     *\n     *      R.not(true); //=> false\n     *      R.not(false); //=> true\n     *      R.not(0); //=> true\n     *      R.not(1); //=> false\n     */\n    var not = _curry1(function not(a) {\n        return !a;\n    });\n\n    /**\n     * Returns the nth element of the given list or string. If n is negative the\n     * element at index length + n is returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> a | Undefined\n     * @sig Number -> String -> String\n     * @param {Number} offset\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      var list = ['foo', 'bar', 'baz', 'quux'];\n     *      R.nth(1, list); //=> 'bar'\n     *      R.nth(-1, list); //=> 'quux'\n     *      R.nth(-99, list); //=> undefined\n     *\n     *      R.nth(2, 'abc'); //=> 'c'\n     *      R.nth(3, 'abc'); //=> ''\n     */\n    var nth = _curry2(function nth(offset, list) {\n        var idx = offset < 0 ? list.length + offset : offset;\n        return _isString(list) ? list.charAt(idx) : list[idx];\n    });\n\n    /**\n     * Returns a function which returns its nth argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig Number -> *... -> *\n     * @param {Number} n\n     * @return {Function}\n     * @example\n     *\n     *      R.nthArg(1)('a', 'b', 'c'); //=> 'b'\n     *      R.nthArg(-1)('a', 'b', 'c'); //=> 'c'\n     */\n    var nthArg = _curry1(function nthArg(n) {\n        var arity = n < 0 ? 1 : n + 1;\n        return curryN(arity, function () {\n            return nth(n, arguments);\n        });\n    });\n\n    /**\n     * Creates an object containing a single key:value pair.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig String -> a -> {String:a}\n     * @param {String} key\n     * @param {*} val\n     * @return {Object}\n     * @see R.pair\n     * @example\n     *\n     *      var matchPhrases = R.compose(\n     *        R.objOf('must'),\n     *        R.map(R.objOf('match_phrase'))\n     *      );\n     *      matchPhrases(['foo', 'bar', 'baz']); //=> {must: [{match_phrase: 'foo'}, {match_phrase: 'bar'}, {match_phrase: 'baz'}]}\n     */\n    var objOf = _curry2(function objOf(key, val) {\n        var obj = {};\n        obj[key] = val;\n        return obj;\n    });\n\n    /**\n     * Returns a singleton array containing the value provided.\n     *\n     * Note this `of` is different from the ES6 `of`; See\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/of\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig a -> [a]\n     * @param {*} x any value\n     * @return {Array} An array wrapping `x`.\n     * @example\n     *\n     *      R.of(null); //=> [null]\n     *      R.of([42]); //=> [[42]]\n     */\n    var of = _curry1(_of);\n\n    /**\n     * Accepts a function `fn` and returns a function that guards invocation of\n     * `fn` such that `fn` can only ever be called once, no matter how many times\n     * the returned function is invoked. The first value calculated is returned in\n     * subsequent invocations.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> (a... -> b)\n     * @param {Function} fn The function to wrap in a call-only-once wrapper.\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      var addOneOnce = R.once(x => x + 1);\n     *      addOneOnce(10); //=> 11\n     *      addOneOnce(addOneOnce(50)); //=> 11\n     */\n    var once = _curry1(function once(fn) {\n        var called = false;\n        var result;\n        return _arity(fn.length, function () {\n            if (called) {\n                return result;\n            }\n            called = true;\n            result = fn.apply(this, arguments);\n            return result;\n        });\n    });\n\n    /**\n     * Returns `true` if one or both of its arguments are `true`. Returns `false`\n     * if both arguments are `false`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig * -> * -> *\n     * @param {Boolean} a A boolean value\n     * @param {Boolean} b A boolean value\n     * @return {Boolean} `true` if one or both arguments are `true`, `false` otherwise\n     * @see R.either\n     * @example\n     *\n     *      R.or(true, true); //=> true\n     *      R.or(true, false); //=> true\n     *      R.or(false, true); //=> true\n     *      R.or(false, false); //=> false\n     */\n    var or = _curry2(function or(a, b) {\n        return a || b;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the result of applying the given function to\n     * the focused value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> (a -> a) -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.over(headLens, R.toUpper, ['foo', 'bar', 'baz']); //=> ['FOO', 'bar', 'baz']\n     */\n    // `Identity` is a functor that holds a single value, where `map` simply\n    // transforms the held value with the provided function.\n    // The value returned by the getter function is first transformed with `f`,\n    // then set as the value of an `Identity`. This is then mapped over with the\n    // setter function of the lens.\n    var over = function () {\n        // `Identity` is a functor that holds a single value, where `map` simply\n        // transforms the held value with the provided function.\n        var Identity = function Identity(x) {\n            return {\n                value: x,\n                map: function map(f) {\n                    return Identity(f(x));\n                }\n            };\n        };\n        return _curry3(function over(lens, f, x) {\n            // The value returned by the getter function is first transformed with `f`,\n            // then set as the value of an `Identity`. This is then mapped over with the\n            // setter function of the lens.\n            return lens(function (y) {\n                return Identity(f(y));\n            })(x).value;\n        });\n    }();\n\n    /**\n     * Takes two arguments, `fst` and `snd`, and returns `[fst, snd]`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category List\n     * @sig a -> b -> (a,b)\n     * @param {*} fst\n     * @param {*} snd\n     * @return {Array}\n     * @see R.objOf, R.of\n     * @example\n     *\n     *      R.pair('foo', 'bar'); //=> ['foo', 'bar']\n     */\n    var pair = _curry2(function pair(fst, snd) {\n        return [fst, snd];\n    });\n\n    /**\n     * Retrieve the value at a given path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig [String] -> {k: v} -> v | Undefined\n     * @param {Array} path The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path`.\n     * @see R.prop\n     * @example\n     *\n     *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n     */\n    var path = _curry2(function path(paths, obj) {\n        var val = obj;\n        var idx = 0;\n        while (idx < paths.length) {\n            if (val == null) {\n                return;\n            }\n            val = val[paths[idx]];\n            idx += 1;\n        }\n        return val;\n    });\n\n    /**\n     * If the given, non-null object has a value at the given path, returns the\n     * value at that path. Otherwise returns the provided default value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Object\n     * @sig a -> [String] -> Object -> a\n     * @param {*} d The default value.\n     * @param {Array} p The path to use.\n     * @param {Object} obj The object to retrieve the nested property from.\n     * @return {*} The data at `path` of the supplied object or the default value.\n     * @example\n     *\n     *      R.pathOr('N/A', ['a', 'b'], {a: {b: 2}}); //=> 2\n     *      R.pathOr('N/A', ['a', 'b'], {c: {b: 2}}); //=> \"N/A\"\n     */\n    var pathOr = _curry3(function pathOr(d, p, obj) {\n        return defaultTo(d, path(p, obj));\n    });\n\n    /**\n     * Returns `true` if the specified object property at given path satisfies the\n     * given predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Logic\n     * @sig (a -> Boolean) -> [String] -> Object -> Boolean\n     * @param {Function} pred\n     * @param {Array} propPath\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propSatisfies, R.path\n     * @example\n     *\n     *      R.pathSatisfies(y => y > 0, ['x', 'y'], {x: {y: 2}}); //=> true\n     */\n    var pathSatisfies = _curry3(function pathSatisfies(pred, propPath, obj) {\n        return propPath.length > 0 && pred(path(propPath, obj));\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys specified. If\n     * the key does not exist, the property is ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.omit, R.props\n     * @example\n     *\n     *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n     */\n    var pick = _curry2(function pick(names, obj) {\n        var result = {};\n        var idx = 0;\n        while (idx < names.length) {\n            if (names[idx] in obj) {\n                result[names[idx]] = obj[names[idx]];\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Similar to `pick` except that this one includes a `key: undefined` pair for\n     * properties that don't exist.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> {k: v}\n     * @param {Array} names an array of String property names to copy onto a new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties from `names` on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.pickAll(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n     *      R.pickAll(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, e: undefined, f: undefined}\n     */\n    var pickAll = _curry2(function pickAll(names, obj) {\n        var result = {};\n        var idx = 0;\n        var len = names.length;\n        while (idx < len) {\n            var name = names[idx];\n            result[name] = obj[name];\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a partial copy of an object containing only the keys that satisfy\n     * the supplied predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @sig (v, k -> Boolean) -> {k: v} -> {k: v}\n     * @param {Function} pred A predicate to determine whether or not a key\n     *        should be included on the output object.\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with only properties that satisfy `pred`\n     *         on it.\n     * @see R.pick, R.filter\n     * @example\n     *\n     *      var isUpperCase = (val, key) => key.toUpperCase() === key;\n     *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n     */\n    var pickBy = _curry2(function pickBy(test, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (test(obj[prop], prop, obj)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list with the given element at the front, followed by the\n     * contents of the list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> [a]\n     * @param {*} el The item to add to the head of the output list.\n     * @param {Array} list The array to add to the tail of the output list.\n     * @return {Array} A new array.\n     * @see R.append\n     * @example\n     *\n     *      R.prepend('fee', ['fi', 'fo', 'fum']); //=> ['fee', 'fi', 'fo', 'fum']\n     */\n    var prepend = _curry2(function prepend(el, list) {\n        return _concat([el], list);\n    });\n\n    /**\n     * Returns a function that when supplied an object returns the indicated\n     * property of that object, if it exists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig s -> {s: a} -> a | Undefined\n     * @param {String} p The property name\n     * @param {Object} obj The object to query\n     * @return {*} The value at `obj.p`.\n     * @see R.path\n     * @example\n     *\n     *      R.prop('x', {x: 100}); //=> 100\n     *      R.prop('x', {}); //=> undefined\n     */\n    var prop = _curry2(function prop(p, obj) {\n        return obj[p];\n    });\n\n    /**\n     * Returns `true` if the specified object property is of the given type;\n     * `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Type\n     * @sig Type -> String -> Object -> Boolean\n     * @param {Function} type\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.is, R.propSatisfies\n     * @example\n     *\n     *      R.propIs(Number, 'x', {x: 1, y: 2});  //=> true\n     *      R.propIs(Number, 'x', {x: 'foo'});    //=> false\n     *      R.propIs(Number, 'x', {});            //=> false\n     */\n    var propIs = _curry3(function propIs(type, name, obj) {\n        return is(type, obj[name]);\n    });\n\n    /**\n     * If the given, non-null object has an own property with the specified name,\n     * returns the value of that property. Otherwise returns the provided default\n     * value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Object\n     * @sig a -> String -> Object -> a\n     * @param {*} val The default value.\n     * @param {String} p The name of the property to return.\n     * @param {Object} obj The object to query.\n     * @return {*} The value of given property of the supplied object or the default value.\n     * @example\n     *\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var favorite = R.prop('favoriteLibrary');\n     *      var favoriteWithDefault = R.propOr('Ramda', 'favoriteLibrary');\n     *\n     *      favorite(alice);  //=> undefined\n     *      favoriteWithDefault(alice);  //=> 'Ramda'\n     */\n    var propOr = _curry3(function propOr(val, p, obj) {\n        return obj != null && _has(p, obj) ? obj[p] : val;\n    });\n\n    /**\n     * Returns `true` if the specified object property satisfies the given\n     * predicate; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Logic\n     * @sig (a -> Boolean) -> String -> {String: a} -> Boolean\n     * @param {Function} pred\n     * @param {String} name\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.propEq, R.propIs\n     * @example\n     *\n     *      R.propSatisfies(x => x > 0, 'x', {x: 1, y: 2}); //=> true\n     */\n    var propSatisfies = _curry3(function propSatisfies(pred, name, obj) {\n        return pred(obj[name]);\n    });\n\n    /**\n     * Acts as multiple `prop`: array of keys in, array of values out. Preserves\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [k] -> {k: v} -> [v]\n     * @param {Array} ps The property names to fetch\n     * @param {Object} obj The object to query\n     * @return {Array} The corresponding values or partially applied function.\n     * @example\n     *\n     *      R.props(['x', 'y'], {x: 1, y: 2}); //=> [1, 2]\n     *      R.props(['c', 'a', 'b'], {b: 2, a: 1}); //=> [undefined, 1, 2]\n     *\n     *      var fullName = R.compose(R.join(' '), R.props(['first', 'last']));\n     *      fullName({last: 'Bullet-Tooth', age: 33, first: 'Tony'}); //=> 'Tony Bullet-Tooth'\n     */\n    var props = _curry2(function props(ps, obj) {\n        var len = ps.length;\n        var out = [];\n        var idx = 0;\n        while (idx < len) {\n            out[idx] = obj[ps[idx]];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a list of numbers from `from` (inclusive) to `to` (exclusive).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> Number -> [Number]\n     * @param {Number} from The first number in the list.\n     * @param {Number} to One more than the last number in the list.\n     * @return {Array} The list of numbers in tthe set `[a, b)`.\n     * @example\n     *\n     *      R.range(1, 5);    //=> [1, 2, 3, 4]\n     *      R.range(50, 53);  //=> [50, 51, 52]\n     */\n    var range = _curry2(function range(from, to) {\n        if (!(_isNumber(from) && _isNumber(to))) {\n            throw new TypeError('Both arguments to range must be numbers');\n        }\n        var result = [];\n        var n = from;\n        while (n < to) {\n            result.push(n);\n            n += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * Similar to `reduce`, except moves through the input list from the right to\n     * the left.\n     *\n     * The iterator function receives two values: *(acc, value)*\n     *\n     * Note: `R.reduceRight` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight#Description\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.addIndex\n     * @example\n     *\n     *      var pairs = [ ['a', 1], ['b', 2], ['c', 3] ];\n     *      var flattenPairs = (acc, pair) => acc.concat(pair);\n     *\n     *      R.reduceRight(flattenPairs, [], pairs); //=> [ 'c', 3, 'b', 2, 'a', 1 ]\n     */\n    var reduceRight = _curry3(function reduceRight(fn, acc, list) {\n        var idx = list.length - 1;\n        while (idx >= 0) {\n            acc = fn(acc, list[idx]);\n            idx -= 1;\n        }\n        return acc;\n    });\n\n    /**\n     * Returns a value wrapped to indicate that it is the final value of the reduce\n     * and transduce functions. The returned value should be considered a black\n     * box: the internal structure is not guaranteed to be stable.\n     *\n     * Note: this optimization is unavailable to functions not explicitly listed\n     * above. For instance, it is not currently supported by reduceRight.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category List\n     * @sig a -> *\n     * @param {*} x The final value of the reduce.\n     * @return {*} The wrapped value.\n     * @see R.reduce, R.transduce\n     * @example\n     *\n     *      R.reduce(\n     *        R.pipe(R.add, R.when(R.gte(R.__, 10), R.reduced)),\n     *        0,\n     *        [1, 2, 3, 4, 5]) // 10\n     */\n    var reduced = _curry1(_reduced);\n\n    /**\n     * Removes the sub-list of `list` starting at index `start` and containing\n     * `count` elements. _Note that this is not destructive_: it returns a copy of\n     * the list with the changes.\n     * <small>No lists have been harmed in the application of this function.</small>\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.2\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @param {Number} start The position to start removing elements\n     * @param {Number} count The number of elements to remove\n     * @param {Array} list The list to remove from\n     * @return {Array} A new Array with `count` elements from `start` removed.\n     * @example\n     *\n     *      R.remove(2, 3, [1,2,3,4,5,6,7,8]); //=> [1,2,6,7,8]\n     */\n    var remove = _curry3(function remove(start, count, list) {\n        return _concat(_slice(list, 0, Math.min(start, list.length)), _slice(list, Math.min(list.length, start + count)));\n    });\n\n    /**\n     * Replace a substring or regex match in a string with a replacement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category String\n     * @sig RegExp|String -> String -> String -> String\n     * @param {RegExp|String} pattern A regular expression or a substring to match.\n     * @param {String} replacement The string to replace the matches with.\n     * @param {String} str The String to do the search and replacement in.\n     * @return {String} The result.\n     * @example\n     *\n     *      R.replace('foo', 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *      R.replace(/foo/, 'bar', 'foo foo foo'); //=> 'bar foo foo'\n     *\n     *      // Use the \"g\" (global) flag to replace all occurrences:\n     *      R.replace(/foo/g, 'bar', 'foo foo foo'); //=> 'bar bar bar'\n     */\n    var replace = _curry3(function replace(regex, replacement, str) {\n        return str.replace(regex, replacement);\n    });\n\n    /**\n     * Returns a new list or string with the elements or characters in reverse\n     * order.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {Array|String}\n     * @example\n     *\n     *      R.reverse([1, 2, 3]);  //=> [3, 2, 1]\n     *      R.reverse([1, 2]);     //=> [2, 1]\n     *      R.reverse([1]);        //=> [1]\n     *      R.reverse([]);         //=> []\n     *\n     *      R.reverse('abc');      //=> 'cba'\n     *      R.reverse('ab');       //=> 'ba'\n     *      R.reverse('a');        //=> 'a'\n     *      R.reverse('');         //=> ''\n     */\n    var reverse = _curry1(function reverse(list) {\n        return _isString(list) ? list.split('').reverse().join('') : _slice(list).reverse();\n    });\n\n    /**\n     * Scan is similar to reduce, but returns a list of successively reduced values\n     * from the left\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a,b -> a) -> a -> [b] -> [a]\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {Array} A list of all intermediately reduced values.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n     */\n    var scan = _curry3(function scan(fn, acc, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [acc];\n        while (idx < len) {\n            acc = fn(acc, list[idx]);\n            result[idx + 1] = acc;\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns the result of \"setting\" the portion of the given data structure\n     * focused by the given lens to the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> a -> s -> s\n     * @param {Lens} lens\n     * @param {*} v\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.set(xLens, 4, {x: 1, y: 2});  //=> {x: 4, y: 2}\n     *      R.set(xLens, 8, {x: 1, y: 2});  //=> {x: 8, y: 2}\n     */\n    var set = _curry3(function set(lens, v, x) {\n        return over(lens, always(v), x);\n    });\n\n    /**\n     * Returns the elements of the given list or string (or object with a `slice`\n     * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n     *\n     * Dispatches to the `slice` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Number -> Number -> [a] -> [a]\n     * @sig Number -> Number -> String -> String\n     * @param {Number} fromIndex The start index (inclusive).\n     * @param {Number} toIndex The end index (exclusive).\n     * @param {*} list\n     * @return {*}\n     * @example\n     *\n     *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n     *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n     *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n     *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n     *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n     */\n    var slice = _curry3(_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n        return Array.prototype.slice.call(list, fromIndex, toIndex);\n    }));\n\n    /**\n     * Returns a copy of the list, sorted according to the comparator function,\n     * which should accept two values at a time and return a negative number if the\n     * first value is smaller, a positive number if it's larger, and zero if they\n     * are equal. Please note that this is a **copy** of the list. It does not\n     * modify the original.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,a -> Number) -> [a] -> [a]\n     * @param {Function} comparator A sorting function :: a -> b -> Int\n     * @param {Array} list The list to sort\n     * @return {Array} a new array with its elements sorted by the comparator function.\n     * @example\n     *\n     *      var diff = function(a, b) { return a - b; };\n     *      R.sort(diff, [4,2,7,5]); //=> [2, 4, 5, 7]\n     */\n    var sort = _curry2(function sort(comparator, list) {\n        return _slice(list).sort(comparator);\n    });\n\n    /**\n     * Sorts the list according to the supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig Ord b => (a -> b) -> [a] -> [a]\n     * @param {Function} fn\n     * @param {Array} list The list to sort.\n     * @return {Array} A new list sorted by the keys generated by `fn`.\n     * @example\n     *\n     *      var sortByFirstItem = R.sortBy(R.prop(0));\n     *      var sortByNameCaseInsensitive = R.sortBy(R.compose(R.toLower, R.prop('name')));\n     *      var pairs = [[-1, 1], [-2, 2], [-3, 3]];\n     *      sortByFirstItem(pairs); //=> [[-3, 3], [-2, 2], [-1, 1]]\n     *      var alice = {\n     *        name: 'ALICE',\n     *        age: 101\n     *      };\n     *      var bob = {\n     *        name: 'Bob',\n     *        age: -10\n     *      };\n     *      var clara = {\n     *        name: 'clara',\n     *        age: 314.159\n     *      };\n     *      var people = [clara, bob, alice];\n     *      sortByNameCaseInsensitive(people); //=> [alice, bob, clara]\n     */\n    var sortBy = _curry2(function sortBy(fn, list) {\n        return _slice(list).sort(function (a, b) {\n            var aa = fn(a);\n            var bb = fn(b);\n            return aa < bb ? -1 : aa > bb ? 1 : 0;\n        });\n    });\n\n    /**\n     * Splits a given list or string at a given index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig Number -> [a] -> [[a], [a]]\n     * @sig Number -> String -> [String, String]\n     * @param {Number} index The index where the array/string is split.\n     * @param {Array|String} array The array/string to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitAt(1, [1, 2, 3]);          //=> [[1], [2, 3]]\n     *      R.splitAt(5, 'hello world');      //=> ['hello', ' world']\n     *      R.splitAt(-1, 'foobar');          //=> ['fooba', 'r']\n     */\n    var splitAt = _curry2(function splitAt(index, array) {\n        return [slice(0, index, array), slice(index, length(array), array)];\n    });\n\n    /**\n     * Splits a collection into slices of the specified length.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [[a]]\n     * @sig Number -> String -> [String]\n     * @param {Number} n\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      R.splitEvery(3, [1, 2, 3, 4, 5, 6, 7]); //=> [[1, 2, 3], [4, 5, 6], [7]]\n     *      R.splitEvery(3, 'foobarbaz'); //=> ['foo', 'bar', 'baz']\n     */\n    var splitEvery = _curry2(function splitEvery(n, list) {\n        if (n <= 0) {\n            throw new Error('First argument to splitEvery must be a positive integer');\n        }\n        var result = [];\n        var idx = 0;\n        while (idx < list.length) {\n            result.push(slice(idx, idx += n, list));\n        }\n        return result;\n    });\n\n    /**\n     * Takes a list and a predicate and returns a pair of lists with the following properties:\n     *\n     *  - the result of concatenating the two output lists is equivalent to the input list;\n     *  - none of the elements of the first output list satisfies the predicate; and\n     *  - if the second output list is non-empty, its first element satisfies the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [[a], [a]]\n     * @param {Function} pred The predicate that determines where the array is split.\n     * @param {Array} list The array to be split.\n     * @return {Array}\n     * @example\n     *\n     *      R.splitWhen(R.equals(2), [1, 2, 3, 1, 2, 3]);   //=> [[1], [2, 3, 1, 2, 3]]\n     */\n    var splitWhen = _curry2(function splitWhen(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var prefix = [];\n        while (idx < len && !pred(list[idx])) {\n            prefix.push(list[idx]);\n            idx += 1;\n        }\n        return [prefix, _slice(list, idx)];\n    });\n\n    /**\n     * Subtracts its second argument from its first argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig Number -> Number -> Number\n     * @param {Number} a The first value.\n     * @param {Number} b The second value.\n     * @return {Number} The result of `a - b`.\n     * @see R.add\n     * @example\n     *\n     *      R.subtract(10, 8); //=> 2\n     *\n     *      var minus5 = R.subtract(R.__, 5);\n     *      minus5(17); //=> 12\n     *\n     *      var complementaryAngle = R.subtract(90);\n     *      complementaryAngle(30); //=> 60\n     *      complementaryAngle(72); //=> 18\n     */\n    var subtract = _curry2(function subtract(a, b) {\n        return Number(a) - Number(b);\n    });\n\n    /**\n     * Returns all but the first element of the given list or string (or object\n     * with a `tail` method).\n     *\n     * Dispatches to the `slice` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.head, R.init, R.last\n     * @example\n     *\n     *      R.tail([1, 2, 3]);  //=> [2, 3]\n     *      R.tail([1, 2]);     //=> [2]\n     *      R.tail([1]);        //=> []\n     *      R.tail([]);         //=> []\n     *\n     *      R.tail('abc');  //=> 'bc'\n     *      R.tail('ab');   //=> 'b'\n     *      R.tail('a');    //=> ''\n     *      R.tail('');     //=> ''\n     */\n    var tail = _checkForMethod('tail', slice(1, Infinity));\n\n    /**\n     * Returns the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `take` method).\n     *\n     * Dispatches to the `take` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.drop\n     * @example\n     *\n     *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.take(3, 'ramda');               //=> 'ram'\n     *\n     *      var personnel = [\n     *        'Dave Brubeck',\n     *        'Paul Desmond',\n     *        'Eugene Wright',\n     *        'Joe Morello',\n     *        'Gerry Mulligan',\n     *        'Bob Bates',\n     *        'Joe Dodge',\n     *        'Ron Crotty'\n     *      ];\n     *\n     *      var takeFive = R.take(5);\n     *      takeFive(personnel);\n     *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n     */\n    var take = _curry2(_dispatchable('take', _xtake, function take(n, xs) {\n        return slice(0, n < 0 ? Infinity : n, xs);\n    }));\n\n    /**\n     * Returns a new list containing the last `n` elements of a given list, passing\n     * each value to the supplied predicate function, and terminating when the\n     * predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropLastWhile, R.addIndex\n     * @example\n     *\n     *      var isNotOne = x => x !== 1;\n     *\n     *      R.takeLastWhile(isNotOne, [1, 2, 3, 4]); //=> [2, 3, 4]\n     */\n    var takeLastWhile = _curry2(function takeLastWhile(fn, list) {\n        var idx = list.length - 1;\n        while (idx >= 0 && fn(list[idx])) {\n            idx -= 1;\n        }\n        return _slice(list, idx + 1, Infinity);\n    });\n\n    /**\n     * Returns a new list containing the first `n` elements of a given list,\n     * passing each value to the supplied predicate function, and terminating when\n     * the predicate function returns `false`. Excludes the element that caused the\n     * predicate function to fail. The predicate function is passed one argument:\n     * *(value)*.\n     *\n     * Dispatches to the `takeWhile` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.dropWhile, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isNotFour = x => x !== 4;\n     *\n     *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n     */\n    var takeWhile = _curry2(_dispatchable('takeWhile', _xtakeWhile, function takeWhile(fn, list) {\n        var idx = 0;\n        var len = list.length;\n        while (idx < len && fn(list[idx])) {\n            idx += 1;\n        }\n        return _slice(list, 0, idx);\n    }));\n\n    /**\n     * Runs the given function with the supplied object, then returns the object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> *) -> a -> a\n     * @param {Function} fn The function to call with `x`. The return value of `fn` will be thrown away.\n     * @param {*} x\n     * @return {*} `x`.\n     * @example\n     *\n     *      var sayX = x => console.log('x is ' + x);\n     *      R.tap(sayX, 100); //=> 100\n     *      // logs 'x is 100'\n     */\n    var tap = _curry2(function tap(fn, x) {\n        fn(x);\n        return x;\n    });\n\n    /**\n     * Calls an input function `n` times, returning an array containing the results\n     * of those function calls.\n     *\n     * `fn` is passed one argument: The current value of `n`, which begins at `0`\n     * and is gradually incremented to `n - 1`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.3\n     * @category List\n     * @sig (Number -> a) -> Number -> [a]\n     * @param {Function} fn The function to invoke. Passed one argument, the current value of `n`.\n     * @param {Number} n A value between `0` and `n - 1`. Increments after each function call.\n     * @return {Array} An array containing the return values of all calls to `fn`.\n     * @example\n     *\n     *      R.times(R.identity, 5); //=> [0, 1, 2, 3, 4]\n     */\n    var times = _curry2(function times(fn, n) {\n        var len = Number(n);\n        var idx = 0;\n        var list;\n        if (len < 0 || isNaN(len)) {\n            throw new RangeError('n must be a non-negative number');\n        }\n        list = new Array(len);\n        while (idx < len) {\n            list[idx] = fn(idx);\n            idx += 1;\n        }\n        return list;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. Only the object's\n     * own properties are used.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own properties.\n     * @see R.fromPairs\n     * @example\n     *\n     *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n     */\n    var toPairs = _curry1(function toPairs(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            if (_has(prop, obj)) {\n                pairs[pairs.length] = [prop, obj[prop]];\n            }\n        }\n        return pairs;\n    });\n\n    /**\n     * Converts an object into an array of key, value arrays. The object's own\n     * properties and prototype properties are used. Note that the order of the\n     * output array is not guaranteed to be consistent across different JS\n     * platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Object\n     * @sig {String: *} -> [[String,*]]\n     * @param {Object} obj The object to extract from\n     * @return {Array} An array of key, value arrays from the object's own\n     *         and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.toPairsIn(f); //=> [['x','X'], ['y','Y']]\n     */\n    var toPairsIn = _curry1(function toPairsIn(obj) {\n        var pairs = [];\n        for (var prop in obj) {\n            pairs[pairs.length] = [prop, obj[prop]];\n        }\n        return pairs;\n    });\n\n    /**\n     * Transposes the rows and columns of a 2D list.\n     * When passed a list of `n` lists of length `x`,\n     * returns a list of `x` lists of length `n`.\n     *\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig [[a]] -> [[a]]\n     * @param {Array} list A 2D list\n     * @return {Array} A 2D list\n     * @example\n     *\n     *      R.transpose([[1, 'a'], [2, 'b'], [3, 'c']]) //=> [[1, 2, 3], ['a', 'b', 'c']]\n     *      R.transpose([[1, 2, 3], ['a', 'b', 'c']]) //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     *\n     * If some of the rows are shorter than the following rows, their elements are skipped:\n     *\n     *      R.transpose([[10, 11], [20], [], [30, 31, 32]]) //=> [[10, 20, 30], [11, 31], [32]]\n     */\n    var transpose = _curry1(function transpose(outerlist) {\n        var i = 0;\n        var result = [];\n        while (i < outerlist.length) {\n            var innerlist = outerlist[i];\n            var j = 0;\n            while (j < innerlist.length) {\n                if (typeof result[j] === 'undefined') {\n                    result[j] = [];\n                }\n                result[j].push(innerlist[j]);\n                j += 1;\n            }\n            i += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Removes (strips) whitespace from both ends of the string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to trim.\n     * @return {String} Trimmed version of `str`.\n     * @example\n     *\n     *      R.trim('   xyz  '); //=> 'xyz'\n     *      R.map(R.trim, R.split(',', 'x, y, z')); //=> ['x', 'y', 'z']\n     */\n    var trim = function () {\n        var ws = '\\t\\n\\x0B\\f\\r \\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' + '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028' + '\\u2029\\uFEFF';\n        var zeroWidth = '\\u200B';\n        var hasProtoTrim = typeof String.prototype.trim === 'function';\n        if (!hasProtoTrim || ws.trim() || !zeroWidth.trim()) {\n            return _curry1(function trim(str) {\n                var beginRx = new RegExp('^[' + ws + '][' + ws + ']*');\n                var endRx = new RegExp('[' + ws + '][' + ws + ']*$');\n                return str.replace(beginRx, '').replace(endRx, '');\n            });\n        } else {\n            return _curry1(function trim(str) {\n                return str.trim();\n            });\n        }\n    }();\n\n    /**\n     * `tryCatch` takes two functions, a `tryer` and a `catcher`. The returned\n     * function evaluates the `tryer`; if it does not throw, it simply returns the\n     * result. If the `tryer` *does* throw, the returned function evaluates the\n     * `catcher` function and returns its result. Note that for effective\n     * composition with this function, both the `tryer` and `catcher` functions\n     * must return the same type of results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Function\n     * @sig (...x -> a) -> ((e, ...x) -> a) -> (...x -> a)\n     * @param {Function} tryer The function that may throw.\n     * @param {Function} catcher The function that will be evaluated if `tryer` throws.\n     * @return {Function} A new function that will catch exceptions and send then to the catcher.\n     * @example\n     *\n     *      R.tryCatch(R.prop('x'), R.F)({x: true}); //=> true\n     *      R.tryCatch(R.prop('x'), R.F)(null);      //=> false\n     */\n    var tryCatch = _curry2(function _tryCatch(tryer, catcher) {\n        return _arity(tryer.length, function () {\n            try {\n                return tryer.apply(this, arguments);\n            } catch (e) {\n                return catcher.apply(this, _concat([e], arguments));\n            }\n        });\n    });\n\n    /**\n     * Gives a single-word string description of the (native) type of a value,\n     * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n     * attempt to distinguish user Object types any further, reporting them all as\n     * 'Object'.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Type\n     * @sig (* -> {*}) -> String\n     * @param {*} val The value to test\n     * @return {String}\n     * @example\n     *\n     *      R.type({}); //=> \"Object\"\n     *      R.type(1); //=> \"Number\"\n     *      R.type(false); //=> \"Boolean\"\n     *      R.type('s'); //=> \"String\"\n     *      R.type(null); //=> \"Null\"\n     *      R.type([]); //=> \"Array\"\n     *      R.type(/[A-z]/); //=> \"RegExp\"\n     */\n    var type = _curry1(function type(val) {\n        return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n    });\n\n    /**\n     * Takes a function `fn`, which takes a single array argument, and returns a\n     * function which:\n     *\n     *   - takes any number of positional arguments;\n     *   - passes these arguments to `fn` as an array; and\n     *   - returns the result.\n     *\n     * In other words, R.unapply derives a variadic function from a function which\n     * takes an array. R.unapply is the inverse of R.apply.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Function\n     * @sig ([*...] -> a) -> (*... -> a)\n     * @param {Function} fn\n     * @return {Function}\n     * @see R.apply\n     * @example\n     *\n     *      R.unapply(JSON.stringify)(1, 2, 3); //=> '[1,2,3]'\n     */\n    var unapply = _curry1(function unapply(fn) {\n        return function () {\n            return fn(_slice(arguments));\n        };\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 1 parameter. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> b) -> (a -> b)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 1.\n     * @example\n     *\n     *      var takesTwoArgs = function(a, b) {\n     *        return [a, b];\n     *      };\n     *      takesTwoArgs.length; //=> 2\n     *      takesTwoArgs(1, 2); //=> [1, 2]\n     *\n     *      var takesOneArg = R.unary(takesTwoArgs);\n     *      takesOneArg.length; //=> 1\n     *      // Only 1 argument is passed to the wrapped function\n     *      takesOneArg(1, 2); //=> [1, undefined]\n     */\n    var unary = _curry1(function unary(fn) {\n        return nAry(1, fn);\n    });\n\n    /**\n     * Returns a function of arity `n` from a (manually) curried function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Function\n     * @sig Number -> (a -> b) -> (a -> c)\n     * @param {Number} length The arity for the returned function.\n     * @param {Function} fn The function to uncurry.\n     * @return {Function} A new function.\n     * @see R.curry\n     * @example\n     *\n     *      var addFour = a => b => c => d => a + b + c + d;\n     *\n     *      var uncurriedAddFour = R.uncurryN(4, addFour);\n     *      uncurriedAddFour(1, 2, 3, 4); //=> 10\n     */\n    var uncurryN = _curry2(function uncurryN(depth, fn) {\n        return curryN(depth, function () {\n            var currentDepth = 1;\n            var value = fn;\n            var idx = 0;\n            var endIdx;\n            while (currentDepth <= depth && typeof value === 'function') {\n                endIdx = currentDepth === depth ? arguments.length : idx + value.length;\n                value = value.apply(this, _slice(arguments, idx, endIdx));\n                currentDepth += 1;\n                idx = endIdx;\n            }\n            return value;\n        });\n    });\n\n    /**\n     * Builds a list from a seed value. Accepts an iterator function, which returns\n     * either false to stop iteration or an array of length 2 containing the value\n     * to add to the resulting list and the seed to be used in the next call to the\n     * iterator function.\n     *\n     * The iterator function receives one argument: *(seed)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category List\n     * @sig (a -> [b]) -> * -> [b]\n     * @param {Function} fn The iterator function. receives one argument, `seed`, and returns\n     *        either false to quit iteration or an array of length two to proceed. The element\n     *        at index 0 of this array will be added to the resulting array, and the element\n     *        at index 1 will be passed to the next call to `fn`.\n     * @param {*} seed The seed value.\n     * @return {Array} The final list.\n     * @example\n     *\n     *      var f = n => n > 50 ? false : [-n, n + 10];\n     *      R.unfold(f, 10); //=> [-10, -20, -30, -40, -50]\n     */\n    var unfold = _curry2(function unfold(fn, seed) {\n        var pair = fn(seed);\n        var result = [];\n        while (pair && pair.length) {\n            result[result.length] = pair[0];\n            pair = fn(pair[1]);\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied predicate to\n     * two list elements. Prefers the first item if two items compare equal based\n     * on the predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      var strEq = R.eqBy(String);\n     *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n     *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n     *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n     *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n     */\n    var uniqWith = _curry2(function uniqWith(pred, list) {\n        var idx = 0;\n        var len = list.length;\n        var result = [];\n        var item;\n        while (idx < len) {\n            item = list[idx];\n            if (!_containsWith(pred, item, result)) {\n                result[result.length] = item;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is not satisfied, the function will return the result of\n     * calling the `whenFalseFn` function with the same argument. If the predicate\n     * is satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred        A predicate function\n     * @param {Function} whenFalseFn A function to invoke when the `pred` evaluates\n     *                               to a falsy value.\n     * @param {*}        x           An object to test with the `pred` function and\n     *                               pass to `whenFalseFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenFalseFn`.\n     * @see R.ifElse, R.when\n     * @example\n     *\n     *      // coerceArray :: (a|[a]) -> [a]\n     *      var coerceArray = R.unless(R.isArrayLike, R.of);\n     *      coerceArray([1, 2, 3]); //=> [1, 2, 3]\n     *      coerceArray(1);         //=> [1]\n     */\n    var unless = _curry3(function unless(pred, whenFalseFn, x) {\n        return pred(x) ? x : whenFalseFn(x);\n    });\n\n    /**\n     * Takes a predicate, a transformation function, and an initial value,\n     * and returns a value of the same type as the initial value.\n     * It does so by applying the transformation until the predicate is satisfied,\n     * at which point it returns the satisfactory value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred A predicate function\n     * @param {Function} fn The iterator function\n     * @param {*} init Initial value\n     * @return {*} Final value that satisfies predicate\n     * @example\n     *\n     *      R.until(R.gt(R.__, 100), R.multiply(2))(1) // => 128\n     */\n    var until = _curry3(function until(pred, fn, init) {\n        var val = init;\n        while (!pred(val)) {\n            val = fn(val);\n        }\n        return val;\n    });\n\n    /**\n     * Returns a new copy of the array with the element at the provided index\n     * replaced with the given value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig Number -> a -> [a] -> [a]\n     * @param {Number} idx The index to update.\n     * @param {*} x The value to exist at the given index of the returned array.\n     * @param {Array|Arguments} list The source array-like object to be updated.\n     * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n     * @see R.adjust\n     * @example\n     *\n     *      R.update(1, 11, [0, 1, 2]);     //=> [0, 11, 2]\n     *      R.update(1)(11)([0, 1, 2]);     //=> [0, 11, 2]\n     */\n    var update = _curry3(function update(idx, x, list) {\n        return adjust(always(x), idx, list);\n    });\n\n    /**\n     * Accepts a function `fn` and a list of transformer functions and returns a\n     * new curried function. When the new function is invoked, it calls the\n     * function `fn` with parameters consisting of the result of calling each\n     * supplied handler on successive arguments to the new function.\n     *\n     * If more arguments are passed to the returned function than transformer\n     * functions, those arguments are passed directly to `fn` as additional\n     * parameters. If you expect additional arguments that don't need to be\n     * transformed, although you can ignore them, it's best to pass an identity\n     * function so that the new function reports the correct arity.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> x1), (b -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} fn The function to wrap.\n     * @param {Array} transformers A list of transformer functions\n     * @return {Function} The wrapped function.\n     * @example\n     *\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3, 4); //=> 81\n     *      R.useWith(Math.pow, [R.identity, R.identity])(3)(4); //=> 81\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3, 4); //=> 32\n     *      R.useWith(Math.pow, [R.dec, R.inc])(3)(4); //=> 32\n     */\n    var useWith = _curry2(function useWith(fn, transformers) {\n        return curryN(transformers.length, function () {\n            var args = [];\n            var idx = 0;\n            while (idx < transformers.length) {\n                args.push(transformers[idx].call(this, arguments[idx]));\n                idx += 1;\n            }\n            return fn.apply(this, args.concat(_slice(arguments, transformers.length)));\n        });\n    });\n\n    /**\n     * Returns a list of all the enumerable own properties of the supplied object.\n     * Note that the order of the output array is not guaranteed across different\n     * JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own properties.\n     * @example\n     *\n     *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n     */\n    var values = _curry1(function values(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var vals = [];\n        var idx = 0;\n        while (idx < len) {\n            vals[idx] = obj[props[idx]];\n            idx += 1;\n        }\n        return vals;\n    });\n\n    /**\n     * Returns a list of all the properties, including prototype properties, of the\n     * supplied object.\n     * Note that the order of the output array is not guaranteed to be consistent\n     * across different JS platforms.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Object\n     * @sig {k: v} -> [v]\n     * @param {Object} obj The object to extract values from\n     * @return {Array} An array of the values of the object's own and prototype properties.\n     * @example\n     *\n     *      var F = function() { this.x = 'X'; };\n     *      F.prototype.y = 'Y';\n     *      var f = new F();\n     *      R.valuesIn(f); //=> ['X', 'Y']\n     */\n    var valuesIn = _curry1(function valuesIn(obj) {\n        var prop;\n        var vs = [];\n        for (prop in obj) {\n            vs[vs.length] = obj[prop];\n        }\n        return vs;\n    });\n\n    /**\n     * Returns a \"view\" of the given data structure, determined by the given lens.\n     * The lens's focus determines which portion of the data structure is visible.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Lens s a -> s -> a\n     * @param {Lens} lens\n     * @param {*} x\n     * @return {*}\n     * @see R.prop, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});  //=> 1\n     *      R.view(xLens, {x: 4, y: 2});  //=> 4\n     */\n    // `Const` is a functor that effectively ignores the function given to `map`.\n    // Using `Const` effectively ignores the setter function of the `lens`,\n    // leaving the value returned by the getter function unmodified.\n    var view = function () {\n        // `Const` is a functor that effectively ignores the function given to `map`.\n        var Const = function Const(x) {\n            return {\n                value: x,\n                map: function map() {\n                    return this;\n                }\n            };\n        };\n        return _curry2(function view(lens, x) {\n            // Using `Const` effectively ignores the setter function of the `lens`,\n            // leaving the value returned by the getter function unmodified.\n            return lens(Const)(x).value;\n        });\n    }();\n\n    /**\n     * Tests the final argument by passing it to the given predicate function. If\n     * the predicate is satisfied, the function will return the result of calling\n     * the `whenTrueFn` function with the same argument. If the predicate is not\n     * satisfied, the argument is returned as is.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Logic\n     * @sig (a -> Boolean) -> (a -> a) -> a -> a\n     * @param {Function} pred       A predicate function\n     * @param {Function} whenTrueFn A function to invoke when the `condition`\n     *                              evaluates to a truthy value.\n     * @param {*}        x          An object to test with the `pred` function and\n     *                              pass to `whenTrueFn` if necessary.\n     * @return {*} Either `x` or the result of applying `x` to `whenTrueFn`.\n     * @see R.ifElse, R.unless\n     * @example\n     *\n     *      // truncate :: String -> String\n     *      var truncate = R.when(\n     *        R.propSatisfies(R.gt(R.__, 10), 'length'),\n     *        R.pipe(R.take(10), R.append('…'), R.join(''))\n     *      );\n     *      truncate('12345');         //=> '12345'\n     *      truncate('0123456789ABC'); //=> '0123456789…'\n     */\n    var when = _curry3(function when(pred, whenTrueFn, x) {\n        return pred(x) ? whenTrueFn(x) : x;\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec. Each of the spec's own properties must be a predicate function.\n     * Each predicate is applied to the value of the corresponding property of the\n     * test object. `where` returns true if all the predicates return true, false\n     * otherwise.\n     *\n     * `where` is well suited to declaratively expressing constraints for other\n     * functions such as `filter` and `find`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category Object\n     * @sig {String: (* -> Boolean)} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = where({\n     *        a: equals('foo'),\n     *        b: complement(equals('bar')),\n     *        x: gt(__, 10),\n     *        y: lt(__, 20)\n     *      });\n     *\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 19}); //=> true\n     *      pred({a: 'xxx', b: 'xxx', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'bar', x: 11, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 10, y: 19}); //=> false\n     *      pred({a: 'foo', b: 'xxx', x: 11, y: 20}); //=> false\n     */\n    var where = _curry2(function where(spec, testObj) {\n        for (var prop in spec) {\n            if (_has(prop, spec) && !spec[prop](testObj[prop])) {\n                return false;\n            }\n        }\n        return true;\n    });\n\n    /**\n     * Wrap a function inside another to allow you to make adjustments to the\n     * parameters, or do other processing either before the internal function is\n     * called or with its results.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a... -> b) -> ((a... -> b) -> a... -> c) -> (a... -> c)\n     * @param {Function} fn The function to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @return {Function} The wrapped function.\n     * @deprecated since v0.22.0\n     * @example\n     *\n     *      var greet = name => 'Hello ' + name;\n     *\n     *      var shoutedGreet = R.wrap(greet, (gr, name) => gr(name).toUpperCase());\n     *\n     *      shoutedGreet(\"Kathy\"); //=> \"HELLO KATHY\"\n     *\n     *      var shortenedGreet = R.wrap(greet, function(gr, name) {\n     *        return gr(name.substring(0, 3));\n     *      });\n     *      shortenedGreet(\"Robert\"); //=> \"Hello Rob\"\n     */\n    var wrap = _curry2(function wrap(fn, wrapper) {\n        return curryN(fn.length, function () {\n            return wrapper.apply(this, _concat([fn], arguments));\n        });\n    });\n\n    /**\n     * Creates a new list out of the two supplied by creating each possible pair\n     * from the lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The list made by combining each possible pair from\n     *         `as` and `bs` into pairs (`[a, b]`).\n     * @example\n     *\n     *      R.xprod([1, 2], ['a', 'b']); //=> [[1, 'a'], [1, 'b'], [2, 'a'], [2, 'b']]\n     */\n    // = xprodWith(prepend); (takes about 3 times as long...)\n    var xprod = _curry2(function xprod(a, b) {\n        // = xprodWith(prepend); (takes about 3 times as long...)\n        var idx = 0;\n        var ilen = a.length;\n        var j;\n        var jlen = b.length;\n        var result = [];\n        while (idx < ilen) {\n            j = 0;\n            while (j < jlen) {\n                result[result.length] = [a[idx], b[j]];\n                j += 1;\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by pairing up equally-positioned\n     * items from both lists. The returned list is truncated to the length of the\n     * shorter of the two input lists.\n     * Note: `zip` is equivalent to `zipWith(function(a, b) { return [a, b] })`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b] -> [[a,b]]\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by pairing up same-indexed elements of `list1` and `list2`.\n     * @example\n     *\n     *      R.zip([1, 2, 3], ['a', 'b', 'c']); //=> [[1, 'a'], [2, 'b'], [3, 'c']]\n     */\n    var zip = _curry2(function zip(a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = [a[idx], b[idx]];\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * Creates a new object out of a list of keys and a list of values.\n     * Key/value pairing is truncated to the length of the shorter of the two lists.\n     * Note: `zipObj` is equivalent to `pipe(zipWith(pair), fromPairs)`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig [String] -> [*] -> {String: *}\n     * @param {Array} keys The array that will be properties on the output object.\n     * @param {Array} values The list of values on the output object.\n     * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n     * @example\n     *\n     *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n     */\n    var zipObj = _curry2(function zipObj(keys, values) {\n        var idx = 0;\n        var len = Math.min(keys.length, values.length);\n        var out = {};\n        while (idx < len) {\n            out[keys[idx]] = values[idx];\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Creates a new list out of the two supplied by applying the function to each\n     * equally-positioned pair in the lists. The returned list is truncated to the\n     * length of the shorter of the two input lists.\n     *\n     * @function\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a,b -> c) -> [a] -> [b] -> [c]\n     * @param {Function} fn The function used to combine the two elements into one value.\n     * @param {Array} list1 The first array to consider.\n     * @param {Array} list2 The second array to consider.\n     * @return {Array} The list made by combining same-indexed elements of `list1` and `list2`\n     *         using `fn`.\n     * @example\n     *\n     *      var f = (x, y) => {\n     *        // ...\n     *      };\n     *      R.zipWith(f, [1, 2, 3], ['a', 'b', 'c']);\n     *      //=> [f(1, 'a'), f(2, 'b'), f(3, 'c')]\n     */\n    var zipWith = _curry3(function zipWith(fn, a, b) {\n        var rv = [];\n        var idx = 0;\n        var len = Math.min(a.length, b.length);\n        while (idx < len) {\n            rv[idx] = fn(a[idx], b[idx]);\n            idx += 1;\n        }\n        return rv;\n    });\n\n    /**\n     * A function that always returns `false`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.T\n     * @example\n     *\n     *      R.F(); //=> false\n     */\n    var F = always(false);\n\n    /**\n     * A function that always returns `true`. Any passed in parameters are ignored.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig * -> Boolean\n     * @param {*}\n     * @return {Boolean}\n     * @see R.always, R.F\n     * @example\n     *\n     *      R.T(); //=> true\n     */\n    var T = always(true);\n\n    /**\n     * Copies an object.\n     *\n     * @private\n     * @param {*} value The value to be copied\n     * @param {Array} refFrom Array containing the source references\n     * @param {Array} refTo Array containing the copied source references\n     * @param {Boolean} deep Whether or not to perform deep cloning.\n     * @return {*} The copied value.\n     */\n    var _clone = function _clone(value, refFrom, refTo, deep) {\n        var copy = function copy(copiedValue) {\n            var len = refFrom.length;\n            var idx = 0;\n            while (idx < len) {\n                if (value === refFrom[idx]) {\n                    return refTo[idx];\n                }\n                idx += 1;\n            }\n            refFrom[idx + 1] = value;\n            refTo[idx + 1] = copiedValue;\n            for (var key in value) {\n                copiedValue[key] = deep ? _clone(value[key], refFrom, refTo, true) : value[key];\n            }\n            return copiedValue;\n        };\n        switch (type(value)) {\n            case 'Object':\n                return copy({});\n            case 'Array':\n                return copy([]);\n            case 'Date':\n                return new Date(value.valueOf());\n            case 'RegExp':\n                return _cloneRegExp(value);\n            default:\n                return value;\n        }\n    };\n\n    var _createPartialApplicator = function _createPartialApplicator(concat) {\n        return _curry2(function (fn, args) {\n            return _arity(Math.max(0, fn.length - args.length), function () {\n                return fn.apply(this, concat(args, arguments));\n            });\n        });\n    };\n\n    var _dropLast = function dropLast(n, xs) {\n        return take(n < xs.length ? xs.length - n : 0, xs);\n    };\n\n    // Values of other types are only equal if identical.\n    var _equals = function _equals(a, b, stackA, stackB) {\n        if (identical(a, b)) {\n            return true;\n        }\n        if (type(a) !== type(b)) {\n            return false;\n        }\n        if (a == null || b == null) {\n            return false;\n        }\n        if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n            return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n        }\n        switch (type(a)) {\n            case 'Arguments':\n            case 'Array':\n            case 'Object':\n                if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n                    return a === b;\n                }\n                break;\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n                if (!((typeof a === 'undefined' ? 'undefined' : _typeof(a)) === (typeof b === 'undefined' ? 'undefined' : _typeof(b)) && identical(a.valueOf(), b.valueOf()))) {\n                    return false;\n                }\n                break;\n            case 'Date':\n                if (!identical(a.valueOf(), b.valueOf())) {\n                    return false;\n                }\n                break;\n            case 'Error':\n                return a.name === b.name && a.message === b.message;\n            case 'RegExp':\n                if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n                    return false;\n                }\n                break;\n            case 'Map':\n            case 'Set':\n                if (!_equals(_arrayFromIterator(a.entries()), _arrayFromIterator(b.entries()), stackA, stackB)) {\n                    return false;\n                }\n                break;\n            case 'Int8Array':\n            case 'Uint8Array':\n            case 'Uint8ClampedArray':\n            case 'Int16Array':\n            case 'Uint16Array':\n            case 'Int32Array':\n            case 'Uint32Array':\n            case 'Float32Array':\n            case 'Float64Array':\n                break;\n            case 'ArrayBuffer':\n                break;\n            default:\n                // Values of other types are only equal if identical.\n                return false;\n        }\n        var keysA = keys(a);\n        if (keysA.length !== keys(b).length) {\n            return false;\n        }\n        var idx = stackA.length - 1;\n        while (idx >= 0) {\n            if (stackA[idx] === a) {\n                return stackB[idx] === b;\n            }\n            idx -= 1;\n        }\n        stackA.push(a);\n        stackB.push(b);\n        idx = keysA.length - 1;\n        while (idx >= 0) {\n            var key = keysA[idx];\n            if (!(_has(key, b) && _equals(b[key], a[key], stackA, stackB))) {\n                return false;\n            }\n            idx -= 1;\n        }\n        stackA.pop();\n        stackB.pop();\n        return true;\n    };\n\n    /**\n     * `_makeFlat` is a helper function that returns a one-level or fully recursive\n     * function based on the flag passed in.\n     *\n     * @private\n     */\n    var _makeFlat = function _makeFlat(recursive) {\n        return function flatt(list) {\n            var value, jlen, j;\n            var result = [];\n            var idx = 0;\n            var ilen = list.length;\n            while (idx < ilen) {\n                if (isArrayLike(list[idx])) {\n                    value = recursive ? flatt(list[idx]) : list[idx];\n                    j = 0;\n                    jlen = value.length;\n                    while (j < jlen) {\n                        result[result.length] = value[j];\n                        j += 1;\n                    }\n                } else {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n            return result;\n        };\n    };\n\n    var _reduce = function () {\n        function _arrayReduce(xf, acc, list) {\n            var idx = 0;\n            var len = list.length;\n            while (idx < len) {\n                acc = xf['@@transducer/step'](acc, list[idx]);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                idx += 1;\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _iterableReduce(xf, acc, iter) {\n            var step = iter.next();\n            while (!step.done) {\n                acc = xf['@@transducer/step'](acc, step.value);\n                if (acc && acc['@@transducer/reduced']) {\n                    acc = acc['@@transducer/value'];\n                    break;\n                }\n                step = iter.next();\n            }\n            return xf['@@transducer/result'](acc);\n        }\n        function _methodReduce(xf, acc, obj) {\n            return xf['@@transducer/result'](obj.reduce(bind(xf['@@transducer/step'], xf), acc));\n        }\n        var symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n        return function _reduce(fn, acc, list) {\n            if (typeof fn === 'function') {\n                fn = _xwrap(fn);\n            }\n            if (isArrayLike(list)) {\n                return _arrayReduce(fn, acc, list);\n            }\n            if (typeof list.reduce === 'function') {\n                return _methodReduce(fn, acc, list);\n            }\n            if (list[symIterator] != null) {\n                return _iterableReduce(fn, acc, list[symIterator]());\n            }\n            if (typeof list.next === 'function') {\n                return _iterableReduce(fn, acc, list);\n            }\n            throw new TypeError('reduce: list must be array or iterable');\n        };\n    }();\n\n    var _stepCat = function () {\n        var _stepCatArray = {\n            '@@transducer/init': Array,\n            '@@transducer/step': function transducerStep(xs, x) {\n                xs.push(x);\n                return xs;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatString = {\n            '@@transducer/init': String,\n            '@@transducer/step': function transducerStep(a, b) {\n                return a + b;\n            },\n            '@@transducer/result': _identity\n        };\n        var _stepCatObject = {\n            '@@transducer/init': Object,\n            '@@transducer/step': function transducerStep(result, input) {\n                return _assign(result, isArrayLike(input) ? objOf(input[0], input[1]) : input);\n            },\n            '@@transducer/result': _identity\n        };\n        return function _stepCat(obj) {\n            if (_isTransformer(obj)) {\n                return obj;\n            }\n            if (isArrayLike(obj)) {\n                return _stepCatArray;\n            }\n            if (typeof obj === 'string') {\n                return _stepCatString;\n            }\n            if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n                return _stepCatObject;\n            }\n            throw new Error('Cannot create transformer for ' + obj);\n        };\n    }();\n\n    var _xdropLastWhile = function () {\n        function XDropLastWhile(fn, xf) {\n            this.f = fn;\n            this.retained = [];\n            this.xf = xf;\n        }\n        XDropLastWhile.prototype['@@transducer/init'] = _xfBase.init;\n        XDropLastWhile.prototype['@@transducer/result'] = function (result) {\n            this.retained = null;\n            return this.xf['@@transducer/result'](result);\n        };\n        XDropLastWhile.prototype['@@transducer/step'] = function (result, input) {\n            return this.f(input) ? this.retain(result, input) : this.flush(result, input);\n        };\n        XDropLastWhile.prototype.flush = function (result, input) {\n            result = _reduce(this.xf['@@transducer/step'], result, this.retained);\n            this.retained = [];\n            return this.xf['@@transducer/step'](result, input);\n        };\n        XDropLastWhile.prototype.retain = function (result, input) {\n            this.retained.push(input);\n            return result;\n        };\n        return _curry2(function _xdropLastWhile(fn, xf) {\n            return new XDropLastWhile(fn, xf);\n        });\n    }();\n\n    /**\n     * Creates a new list iteration function from an existing one by adding two new\n     * parameters to its callback function: the current index, and the entire list.\n     *\n     * This would turn, for instance, Ramda's simple `map` function into one that\n     * more closely resembles `Array.prototype.map`. Note that this will only work\n     * for functions in which the iteration callback function is the first\n     * parameter, and where the list is the last parameter. (This latter might be\n     * unimportant if the list parameter is not used.)\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Function\n     * @category List\n     * @sig ((a ... -> b) ... -> [a] -> *) -> (a ..., Int, [a] -> b) ... -> [a] -> *)\n     * @param {Function} fn A list iteration function that does not pass index or list to its callback\n     * @return {Function} An altered list iteration function that passes (item, index, list) to its callback\n     * @example\n     *\n     *      var mapIndexed = R.addIndex(R.map);\n     *      mapIndexed((val, idx) => idx + '-' + val, ['f', 'o', 'o', 'b', 'a', 'r']);\n     *      //=> ['0-f', '1-o', '2-o', '3-b', '4-a', '5-r']\n     */\n    var addIndex = _curry1(function addIndex(fn) {\n        return curryN(fn.length, function () {\n            var idx = 0;\n            var origFn = arguments[0];\n            var list = arguments[arguments.length - 1];\n            var args = _slice(arguments);\n            args[0] = function () {\n                var result = origFn.apply(this, _concat(arguments, [idx, list]));\n                idx += 1;\n                return result;\n            };\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Wraps a function of any arity (including nullary) in a function that accepts\n     * exactly 2 parameters. Any extraneous parameters will not be passed to the\n     * supplied function.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.2.0\n     * @category Function\n     * @sig (* -> c) -> (a, b -> c)\n     * @param {Function} fn The function to wrap.\n     * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n     *         arity 2.\n     * @example\n     *\n     *      var takesThreeArgs = function(a, b, c) {\n     *        return [a, b, c];\n     *      };\n     *      takesThreeArgs.length; //=> 3\n     *      takesThreeArgs(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      var takesTwoArgs = R.binary(takesThreeArgs);\n     *      takesTwoArgs.length; //=> 2\n     *      // Only 2 arguments are passed to the wrapped function\n     *      takesTwoArgs(1, 2, 3); //=> [1, 2, undefined]\n     */\n    var binary = _curry1(function binary(fn) {\n        return nAry(2, fn);\n    });\n\n    /**\n     * Creates a deep copy of the value which may contain (nested) `Array`s and\n     * `Object`s, `Number`s, `String`s, `Boolean`s and `Date`s. `Function`s are not\n     * copied, but assigned by their reference.\n     *\n     * Dispatches to a `clone` method if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig {*} -> {*}\n     * @param {*} value The object or array to clone\n     * @return {*} A new object or array.\n     * @example\n     *\n     *      var objects = [{}, {}, {}];\n     *      var objectsClone = R.clone(objects);\n     *      objects[0] === objectsClone[0]; //=> false\n     */\n    var clone = _curry1(function clone(value) {\n        return value != null && typeof value.clone === 'function' ? value.clone() : _clone(value, [], [], true);\n    });\n\n    /**\n     * Returns a curried equivalent of the provided function. The curried function\n     * has two unusual capabilities. First, its arguments needn't be provided one\n     * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n     * following are equivalent:\n     *\n     *   - `g(1)(2)(3)`\n     *   - `g(1)(2, 3)`\n     *   - `g(1, 2)(3)`\n     *   - `g(1, 2, 3)`\n     *\n     * Secondly, the special placeholder value `R.__` may be used to specify\n     * \"gaps\", allowing partial application of any combination of arguments,\n     * regardless of their positions. If `g` is as above and `_` is `R.__`, the\n     * following are equivalent:\n     *\n     *   - `g(1, 2, 3)`\n     *   - `g(_, 2, 3)(1)`\n     *   - `g(_, _, 3)(1)(2)`\n     *   - `g(_, _, 3)(1, 2)`\n     *   - `g(_, 2)(1)(3)`\n     *   - `g(_, 2)(1, 3)`\n     *   - `g(_, 2)(_, 3)(1)`\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> a) -> (* -> a)\n     * @param {Function} fn The function to curry.\n     * @return {Function} A new, curried function.\n     * @see R.curryN\n     * @example\n     *\n     *      var addFourNumbers = (a, b, c, d) => a + b + c + d;\n     *\n     *      var curriedAddFourNumbers = R.curry(addFourNumbers);\n     *      var f = curriedAddFourNumbers(1, 2);\n     *      var g = f(3);\n     *      g(4); //=> 10\n     */\n    var curry = _curry1(function curry(fn) {\n        return curryN(fn.length, fn);\n    });\n\n    /**\n     * Returns all but the first `n` elements of the given list, string, or\n     * transducer/transformer (or object with a `drop` method).\n     *\n     * Dispatches to the `drop` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n\n     * @param {*} list\n     * @return {*}\n     * @see R.take, R.transduce\n     * @example\n     *\n     *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.drop(3, 'ramda');               //=> 'da'\n     */\n    var drop = _curry2(_dispatchable('drop', _xdrop, function drop(n, xs) {\n        return slice(Math.max(0, n), Infinity, xs);\n    }));\n\n    /**\n     * Returns a list containing all but the last `n` elements of the given `list`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements of `xs` to skip.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.takeLast\n     * @example\n     *\n     *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n     *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n     *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n     *      R.dropLast(3, 'ramda');               //=> 'ra'\n     */\n    var dropLast = _curry2(_dispatchable('dropLast', _xdropLast, _dropLast));\n\n    /**\n     * Returns a new list excluding all the tailing elements of a given list which\n     * satisfy the supplied predicate function. It passes each value from the right\n     * to the supplied predicate function, skipping elements while the predicate\n     * function returns `true`. The predicate function is applied to one argument:\n     * *(value)*.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> Boolean) -> [a] -> [a]\n     * @param {Function} fn The function called per iteration.\n     * @param {Array} list The collection to iterate over.\n     * @return {Array} A new array.\n     * @see R.takeLastWhile, R.addIndex\n     * @example\n     *\n     *      var lteThree = x => x <= 3;\n     *\n     *      R.dropLastWhile(lteThree, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3, 4]\n     */\n    var dropLastWhile = _curry2(_dispatchable('dropLastWhile', _xdropLastWhile, _dropLastWhile));\n\n    /**\n     * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n     * cyclical data structures.\n     *\n     * Dispatches symmetrically to the `equals` methods of both arguments, if\n     * present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.15.0\n     * @category Relation\n     * @sig a -> b -> Boolean\n     * @param {*} a\n     * @param {*} b\n     * @return {Boolean}\n     * @example\n     *\n     *      R.equals(1, 1); //=> true\n     *      R.equals(1, '1'); //=> false\n     *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n     *\n     *      var a = {}; a.v = a;\n     *      var b = {}; b.v = b;\n     *      R.equals(a, b); //=> true\n     */\n    var equals = _curry2(function equals(a, b) {\n        return _equals(a, b, [], []);\n    });\n\n    /**\n     * Takes a predicate and a \"filterable\", and returns a new filterable of the\n     * same type containing the members of the given filterable which satisfy the\n     * given predicate.\n     *\n     * Dispatches to the `filter` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.reject, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *\n     *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    // else\n    var filter = _curry2(_dispatchable('filter', _xfilter, function (pred, filterable) {\n        return _isObject(filterable) ? _reduce(function (acc, key) {\n            if (pred(filterable[key])) {\n                acc[key] = filterable[key];\n            }\n            return acc;\n        }, {}, keys(filterable)) : // else\n        _filter(pred, filterable);\n    }));\n\n    /**\n     * Returns a new list by pulling every item out of it (and all its sub-arrays)\n     * and putting them in a new array, depth-first.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [b]\n     * @param {Array} list The array to consider.\n     * @return {Array} The flattened list.\n     * @see R.unnest\n     * @example\n     *\n     *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n     *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n     */\n    var flatten = _curry1(_makeFlat(true));\n\n    /**\n     * Returns a new function much like the supplied one, except that the first two\n     * arguments' order is reversed.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (a -> b -> c -> ... -> z) -> (b -> a -> c -> ... -> z)\n     * @param {Function} fn The function to invoke with its first two parameters reversed.\n     * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n     * @example\n     *\n     *      var mergeThree = (a, b, c) => [].concat(a, b, c);\n     *\n     *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n     *\n     *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n     */\n    var flip = _curry1(function flip(fn) {\n        return curry(function (a, b) {\n            var args = _slice(arguments);\n            args[0] = b;\n            args[1] = a;\n            return fn.apply(this, args);\n        });\n    });\n\n    /**\n     * Returns the first element of the given list or string. In some libraries\n     * this function is named `first`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {Array|String} list\n     * @return {*}\n     * @see R.tail, R.init, R.last\n     * @example\n     *\n     *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n     *      R.head([]); //=> undefined\n     *\n     *      R.head('abc'); //=> 'a'\n     *      R.head(''); //=> ''\n     */\n    var head = nth(0);\n\n    /**\n     * Returns all but the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category List\n     * @sig [a] -> [a]\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.last, R.head, R.tail\n     * @example\n     *\n     *      R.init([1, 2, 3]);  //=> [1, 2]\n     *      R.init([1, 2]);     //=> [1]\n     *      R.init([1]);        //=> []\n     *      R.init([]);         //=> []\n     *\n     *      R.init('abc');  //=> 'ab'\n     *      R.init('ab');   //=> 'a'\n     *      R.init('a');    //=> ''\n     *      R.init('');     //=> ''\n     */\n    var init = slice(0, -1);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists. Duplication is determined according to the\n     * value returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate function that determines whether\n     *        the two supplied elements are equal.\n     * @param {Array} list1 One list of items to compare\n     * @param {Array} list2 A second list of items to compare\n     * @return {Array} A new list containing those elements common to both lists.\n     * @see R.intersection\n     * @example\n     *\n     *      var buffaloSpringfield = [\n     *        {id: 824, name: 'Richie Furay'},\n     *        {id: 956, name: 'Dewey Martin'},\n     *        {id: 313, name: 'Bruce Palmer'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *      var csny = [\n     *        {id: 204, name: 'David Crosby'},\n     *        {id: 456, name: 'Stephen Stills'},\n     *        {id: 539, name: 'Graham Nash'},\n     *        {id: 177, name: 'Neil Young'}\n     *      ];\n     *\n     *      R.intersectionWith(R.eqBy(R.prop('id')), buffaloSpringfield, csny);\n     *      //=> [{id: 456, name: 'Stephen Stills'}, {id: 177, name: 'Neil Young'}]\n     */\n    var intersectionWith = _curry3(function intersectionWith(pred, list1, list2) {\n        var lookupList, filteredList;\n        if (list1.length > list2.length) {\n            lookupList = list1;\n            filteredList = list2;\n        } else {\n            lookupList = list2;\n            filteredList = list1;\n        }\n        var results = [];\n        var idx = 0;\n        while (idx < filteredList.length) {\n            if (_containsWith(pred, filteredList[idx], lookupList)) {\n                results[results.length] = filteredList[idx];\n            }\n            idx += 1;\n        }\n        return uniqWith(pred, results);\n    });\n\n    /**\n     * Transforms the items of the list with the transducer and appends the\n     * transformed items to the accumulator using an appropriate iterator function\n     * based on the accumulator type.\n     *\n     * The accumulator can be an array, string, object or a transformer. Iterated\n     * items will be appended to arrays and concatenated to strings. Objects will\n     * be merged directly or 2-item arrays will be merged as key, value pairs.\n     *\n     * The accumulator can also be a transformer object that provides a 2-arity\n     * reducing iterator function, step, 0-arity initial value function, init, and\n     * 1-arity result extraction function result. The step function is used as the\n     * iterator function in reduce. The result function is used to convert the\n     * final accumulator into the return type and in most cases is R.identity. The\n     * init function is used to provide the initial accumulator.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig a -> (b -> b) -> [c] -> a\n     * @param {*} acc The initial accumulator value.\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.into([], transducer, numbers); //=> [2, 3]\n     *\n     *      var intoArray = R.into([]);\n     *      intoArray(transducer, numbers); //=> [2, 3]\n     */\n    var into = _curry3(function into(acc, xf, list) {\n        return _isTransformer(acc) ? _reduce(xf(acc), acc['@@transducer/init'](), list) : _reduce(xf(_stepCat(acc)), _clone(acc, [], [], false), list);\n    });\n\n    /**\n     * Same as R.invertObj, however this accounts for objects with duplicate values\n     * by putting the values into an array.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: [ s, ... ]}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object with keys\n     * in an array.\n     * @example\n     *\n     *      var raceResultsByFirstName = {\n     *        first: 'alice',\n     *        second: 'jake',\n     *        third: 'alice',\n     *      };\n     *      R.invert(raceResultsByFirstName);\n     *      //=> { 'alice': ['first', 'third'], 'jake':['second'] }\n     */\n    var invert = _curry1(function invert(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            var val = obj[key];\n            var list = _has(val, out) ? out[val] : out[val] = [];\n            list[list.length] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new object with the keys of the given object as values, and the\n     * values of the given object, which are coerced to strings, as keys. Note\n     * that the last key found is preferred when handling the same value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig {s: x} -> {x: s}\n     * @param {Object} obj The object or array to invert\n     * @return {Object} out A new object\n     * @example\n     *\n     *      var raceResults = {\n     *        first: 'alice',\n     *        second: 'jake'\n     *      };\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': 'first', 'jake':'second' }\n     *\n     *      // Alternatively:\n     *      var raceResults = ['alice', 'jake'];\n     *      R.invertObj(raceResults);\n     *      //=> { 'alice': '0', 'jake':'1' }\n     */\n    var invertObj = _curry1(function invertObj(obj) {\n        var props = keys(obj);\n        var len = props.length;\n        var idx = 0;\n        var out = {};\n        while (idx < len) {\n            var key = props[idx];\n            out[obj[key]] = key;\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns `true` if the given value is its type's empty value; `false`\n     * otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Logic\n     * @sig a -> Boolean\n     * @param {*} x\n     * @return {Boolean}\n     * @see R.empty\n     * @example\n     *\n     *      R.isEmpty([1, 2, 3]);   //=> false\n     *      R.isEmpty([]);          //=> true\n     *      R.isEmpty('');          //=> true\n     *      R.isEmpty(null);        //=> false\n     *      R.isEmpty({});          //=> true\n     *      R.isEmpty({length: 0}); //=> false\n     */\n    var isEmpty = _curry1(function isEmpty(x) {\n        return x != null && equals(x, empty(x));\n    });\n\n    /**\n     * Returns the last element of the given list or string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig [a] -> a | Undefined\n     * @sig String -> String\n     * @param {*} list\n     * @return {*}\n     * @see R.init, R.head, R.tail\n     * @example\n     *\n     *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n     *      R.last([]); //=> undefined\n     *\n     *      R.last('abc'); //=> 'c'\n     *      R.last(''); //=> ''\n     */\n    var last = nth(-1);\n\n    /**\n     * Returns the position of the last occurrence of an item in an array, or -1 if\n     * the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.indexOf\n     * @example\n     *\n     *      R.lastIndexOf(3, [-1,3,3,0,1,2,3,4]); //=> 6\n     *      R.lastIndexOf(10, [1,2,3,4]); //=> -1\n     */\n    var lastIndexOf = _curry2(function lastIndexOf(target, xs) {\n        if (typeof xs.lastIndexOf === 'function' && !_isArray(xs)) {\n            return xs.lastIndexOf(target);\n        } else {\n            var idx = xs.length - 1;\n            while (idx >= 0) {\n                if (equals(xs[idx], target)) {\n                    return idx;\n                }\n                idx -= 1;\n            }\n            return -1;\n        }\n    });\n\n    /**\n     * Takes a function and\n     * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n     * applies the function to each of the functor's values, and returns\n     * a functor of the same shape.\n     *\n     * Ramda provides suitable `map` implementations for `Array` and `Object`,\n     * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n     *\n     * Dispatches to the `map` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * Also treats functions as functors and will compose them together.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Functor f => (a -> b) -> f a -> f b\n     * @param {Function} fn The function to be called on every element of the input `list`.\n     * @param {Array} list The list to be iterated over.\n     * @return {Array} The new list.\n     * @see R.transduce, R.addIndex\n     * @example\n     *\n     *      var double = x => x * 2;\n     *\n     *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n     *\n     *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n     */\n    var map = _curry2(_dispatchable('map', _xmap, function map(fn, functor) {\n        switch (Object.prototype.toString.call(functor)) {\n            case '[object Function]':\n                return curryN(functor.length, function () {\n                    return fn.call(this, functor.apply(this, arguments));\n                });\n            case '[object Object]':\n                return _reduce(function (acc, key) {\n                    acc[key] = fn(functor[key]);\n                    return acc;\n                }, {}, keys(functor));\n            default:\n                return _map(fn, functor);\n        }\n    }));\n\n    /**\n     * An Object-specific version of `map`. The function is applied to three\n     * arguments: *(value, key, obj)*. If only the value is significant, use\n     * `map` instead.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Object\n     * @sig ((*, String, Object) -> *) -> Object -> Object\n     * @param {Function} fn\n     * @param {Object} obj\n     * @return {Object}\n     * @see R.map\n     * @example\n     *\n     *      var values = { x: 1, y: 2, z: 3 };\n     *      var prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n     *\n     *      R.mapObjIndexed(prependKeyAndDouble, values); //=> { x: 'x2', y: 'y4', z: 'z6' }\n     */\n    var mapObjIndexed = _curry2(function mapObjIndexed(fn, obj) {\n        return _reduce(function (acc, key) {\n            acc[key] = fn(obj[key], key, obj);\n            return acc;\n        }, {}, keys(obj));\n    });\n\n    /**\n     * Creates a new object with the own properties of the two provided objects. If\n     * a key exists in both objects, the provided function is applied to the values\n     * associated with the key in each object, with the result being used as the\n     * value associated with the key in the returned object. The key will be\n     * excluded from the returned object if the resulting value is `undefined`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @sig (a -> a -> a) -> {a} -> {a} -> {a}\n     * @param {Function} fn\n     * @param {Object} l\n     * @param {Object} r\n     * @return {Object}\n     * @see R.merge, R.mergeWithKey\n     * @example\n     *\n     *      R.mergeWith(R.concat,\n     *                  { a: true, values: [10, 20] },\n     *                  { b: true, values: [15, 35] });\n     *      //=> { a: true, b: true, values: [10, 20, 15, 35] }\n     */\n    var mergeWith = _curry3(function mergeWith(fn, l, r) {\n        return mergeWithKey(function (_, _l, _r) {\n            return fn(_l, _r);\n        }, l, r);\n    });\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided initially followed by the arguments provided to `g`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [a, b, c, ...] -> ((d, e, f, ..., n) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partialRight\n     * @example\n     *\n     *      var multiply = (a, b) => a * b;\n     *      var double = R.partial(multiply, [2]);\n     *      double(2); //=> 4\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var sayHello = R.partial(greet, ['Hello']);\n     *      var sayHelloToMs = R.partial(sayHello, ['Ms.']);\n     *      sayHelloToMs('Jane', 'Jones'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partial = _createPartialApplicator(_concat);\n\n    /**\n     * Takes a function `f` and a list of arguments, and returns a function `g`.\n     * When applied, `g` returns the result of applying `f` to the arguments\n     * provided to `g` followed by the arguments provided initially.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a, b, c, ..., n) -> x) -> [d, e, f, ..., n] -> ((a, b, c, ...) -> x)\n     * @param {Function} f\n     * @param {Array} args\n     * @return {Function}\n     * @see R.partial\n     * @example\n     *\n     *      var greet = (salutation, title, firstName, lastName) =>\n     *        salutation + ', ' + title + ' ' + firstName + ' ' + lastName + '!';\n     *\n     *      var greetMsJaneJones = R.partialRight(greet, ['Ms.', 'Jane', 'Jones']);\n     *\n     *      greetMsJaneJones('Hello'); //=> 'Hello, Ms. Jane Jones!'\n     */\n    var partialRight = _createPartialApplicator(flip(_concat));\n\n    /**\n     * Determines whether a nested path on an object has a specific value, in\n     * `R.equals` terms. Most likely used to filter a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Relation\n     * @sig [String] -> * -> {String: *} -> Boolean\n     * @param {Array} path The path of the nested property to use\n     * @param {*} val The value to compare the nested property with\n     * @param {Object} obj The object to check the nested property in\n     * @return {Boolean} `true` if the value equals the nested object property,\n     *         `false` otherwise.\n     * @example\n     *\n     *      var user1 = { address: { zipCode: 90210 } };\n     *      var user2 = { address: { zipCode: 55555 } };\n     *      var user3 = { name: 'Bob' };\n     *      var users = [ user1, user2, user3 ];\n     *      var isFamous = R.pathEq(['address', 'zipCode'], 90210);\n     *      R.filter(isFamous, users); //=> [ user1 ]\n     */\n    var pathEq = _curry3(function pathEq(_path, val, obj) {\n        return equals(path(_path, obj), val);\n    });\n\n    /**\n     * Returns a new list by plucking the same named property off all objects in\n     * the list supplied.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig k -> [{k: v}] -> [v]\n     * @param {Number|String} key The key name to pluck off of each object.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of values for the given key.\n     * @see R.props\n     * @example\n     *\n     *      R.pluck('a')([{a: 1}, {a: 2}]); //=> [1, 2]\n     *      R.pluck(0)([[1, 2], [3, 4]]);   //=> [1, 3]\n     */\n    var pluck = _curry2(function pluck(p, list) {\n        return map(prop(p), list);\n    });\n\n    /**\n     * Reasonable analog to SQL `select` statement.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @category Relation\n     * @sig [k] -> [{k: v}] -> [{k: v}]\n     * @param {Array} props The property names to project\n     * @param {Array} objs The objects to query\n     * @return {Array} An array of objects with just the `props` properties.\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond', grade: 2};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown', grade: 7};\n     *      var kids = [abby, fred];\n     *      R.project(['name', 'grade'], kids); //=> [{name: 'Abby', grade: 2}, {name: 'Fred', grade: 7}]\n     */\n    // passing `identity` gives correct arity\n    var project = useWith(_map, [pickAll, identity]);\n\n    /**\n     * Returns `true` if the specified object property is equal, in `R.equals`\n     * terms, to the given value; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig String -> a -> Object -> Boolean\n     * @param {String} name\n     * @param {*} val\n     * @param {*} obj\n     * @return {Boolean}\n     * @see R.equals, R.propSatisfies\n     * @example\n     *\n     *      var abby = {name: 'Abby', age: 7, hair: 'blond'};\n     *      var fred = {name: 'Fred', age: 12, hair: 'brown'};\n     *      var rusty = {name: 'Rusty', age: 10, hair: 'brown'};\n     *      var alois = {name: 'Alois', age: 15, disposition: 'surly'};\n     *      var kids = [abby, fred, rusty, alois];\n     *      var hasBrownHair = R.propEq('hair', 'brown');\n     *      R.filter(hasBrownHair, kids); //=> [fred, rusty]\n     */\n    var propEq = _curry3(function propEq(name, val, obj) {\n        return equals(val, obj[name]);\n    });\n\n    /**\n     * Returns a single item by iterating through the list, successively calling\n     * the iterator function and passing it an accumulator value and the current\n     * value from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It may use\n     * `R.reduced` to shortcut the iteration.\n     *\n     * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n     * arrays), unlike the native `Array.prototype.reduce` method. For more details\n     * on this behavior, see:\n     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n     *\n     * Dispatches to the `reduce` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> [b] -> a\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array.\n     * @param {*} acc The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduced, R.addIndex\n     * @example\n     *\n     *      var numbers = [1, 2, 3];\n     *      var plus = (a, b) => a + b;\n     *\n     *      R.reduce(plus, 10, numbers); //=> 16\n     */\n    var reduce = _curry3(_reduce);\n\n    /**\n     * Groups the elements of the list according to the result of calling\n     * the String-returning function `keyFn` on each element and reduces the elements\n     * of each group to a single value via the reducer function `valueFn`.\n     *\n     * This function is basically a more general `groupBy` function.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category List\n     * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n     * @param {Function} valueFn The function that reduces the elements of each group to a single\n     *        value. Receives two values, accumulator for a particular group and the current element.\n     * @param {*} acc The (initial) accumulator value for each group.\n     * @param {Function} keyFn The function that maps the list's element into a key.\n     * @param {Array} list The array to group.\n     * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n     *         `valueFn` for elements which produced that key when passed to `keyFn`.\n     * @see R.groupBy, R.reduce\n     * @example\n     *\n     *      var reduceToNamesBy = R.reduceBy((acc, student) => acc.concat(student.name), []);\n     *      var namesByGrade = reduceToNamesBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Lucy', score: 92},\n     *                      {name: 'Drew', score: 85},\n     *                      // ...\n     *                      {name: 'Bart', score: 62}];\n     *      namesByGrade(students);\n     *      // {\n     *      //   'A': ['Lucy'],\n     *      //   'B': ['Drew']\n     *      //   // ...,\n     *      //   'F': ['Bart']\n     *      // }\n     */\n    var reduceBy = _curryN(4, [], _dispatchable('reduceBy', _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n        return _reduce(function (acc, elt) {\n            var key = keyFn(elt);\n            acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n            return acc;\n        }, {}, list);\n    }));\n\n    /**\n     * Like `reduce`, `reduceWhile` returns a single item by iterating through\n     * the list, successively calling the iterator function. `reduceWhile` also\n     * takes a predicate that is evaluated before each step. If the predicate returns\n     * `false`, it \"short-circuits\" the iteration and returns the current value\n     * of the accumulator.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.22.0\n     * @category List\n     * @sig ((a, b) -> Boolean) -> ((a, b) -> a) -> a -> [b] -> a\n     * @param {Function} pred The predicate. It is passed the accumulator and the\n     *        current element.\n     * @param {Function} fn The iterator function. Receives two values, the\n     *        accumulator and the current element.\n     * @param {*} a The accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduce, R.reduced\n     * @example\n     *\n     *      var isOdd = (acc, x) => x % 2 === 1;\n     *      var xs = [1, 3, 5, 60, 777, 800];\n     *      R.reduceWhile(isOdd, R.add, 0, xs); //=> 9\n     *\n     *      var ys = [2, 4, 6]\n     *      R.reduceWhile(isOdd, R.add, 111, ys); //=> 111\n     */\n    var reduceWhile = _curryN(4, [], function _reduceWhile(pred, fn, a, list) {\n        return _reduce(function (acc, x) {\n            return pred(acc, x) ? fn(acc, x) : _reduced(acc);\n        }, a, list);\n    });\n\n    /**\n     * The complement of `filter`.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> f a\n     * @param {Function} pred\n     * @param {Array} filterable\n     * @return {Array}\n     * @see R.filter, R.transduce, R.addIndex\n     * @example\n     *\n     *      var isOdd = (n) => n % 2 === 1;\n     *\n     *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n     *\n     *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n     */\n    var reject = _curry2(function reject(pred, filterable) {\n        return filter(_complement(pred), filterable);\n    });\n\n    /**\n     * Returns a fixed list of size `n` containing a specified identical value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.1\n     * @category List\n     * @sig a -> n -> [a]\n     * @param {*} value The value to repeat.\n     * @param {Number} n The desired size of the output list.\n     * @return {Array} A new array containing `n` `value`s.\n     * @example\n     *\n     *      R.repeat('hi', 5); //=> ['hi', 'hi', 'hi', 'hi', 'hi']\n     *\n     *      var obj = {};\n     *      var repeatedObjs = R.repeat(obj, 5); //=> [{}, {}, {}, {}, {}]\n     *      repeatedObjs[0] === repeatedObjs[1]; //=> true\n     */\n    var repeat = _curry2(function repeat(value, n) {\n        return times(always(value), n);\n    });\n\n    /**\n     * Adds together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The sum of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.sum([2,4,6,8,100,1]); //=> 121\n     */\n    var sum = reduce(add, 0);\n\n    /**\n     * Returns a new list containing the last `n` elements of the given list.\n     * If `n > list.length`, returns a list of `list.length` elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig Number -> [a] -> [a]\n     * @sig Number -> String -> String\n     * @param {Number} n The number of elements to return.\n     * @param {Array} xs The collection to consider.\n     * @return {Array}\n     * @see R.dropLast\n     * @example\n     *\n     *      R.takeLast(1, ['foo', 'bar', 'baz']); //=> ['baz']\n     *      R.takeLast(2, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n     *      R.takeLast(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n     *      R.takeLast(3, 'ramda');               //=> 'mda'\n     */\n    var takeLast = _curry2(function takeLast(n, xs) {\n        return drop(n >= 0 ? xs.length - n : 0, xs);\n    });\n\n    /**\n     * Initializes a transducer using supplied iterator function. Returns a single\n     * item by iterating through the list, successively calling the transformed\n     * iterator function and passing it an accumulator value and the current value\n     * from the array, and then passing the result to the next call.\n     *\n     * The iterator function receives two values: *(acc, value)*. It will be\n     * wrapped as a transformer to initialize the transducer. A transformer can be\n     * passed directly in place of an iterator function. In both cases, iteration\n     * may be stopped early with the `R.reduced` function.\n     *\n     * A transducer is a function that accepts a transformer and returns a\n     * transformer and can be composed directly.\n     *\n     * A transformer is an an object that provides a 2-arity reducing iterator\n     * function, step, 0-arity initial value function, init, and 1-arity result\n     * extraction function, result. The step function is used as the iterator\n     * function in reduce. The result function is used to convert the final\n     * accumulator into the return type and in most cases is R.identity. The init\n     * function can be used to provide an initial accumulator, but is ignored by\n     * transduce.\n     *\n     * The iteration is performed with R.reduce after initializing the transducer.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category List\n     * @sig (c -> c) -> (a,b -> a) -> a -> [b] -> a\n     * @param {Function} xf The transducer function. Receives a transformer and returns a transformer.\n     * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n     *        current element from the array. Wrapped as transformer, if necessary, and used to\n     *        initialize the transducer\n     * @param {*} acc The initial accumulator value.\n     * @param {Array} list The list to iterate over.\n     * @return {*} The final, accumulated value.\n     * @see R.reduce, R.reduced, R.into\n     * @example\n     *\n     *      var numbers = [1, 2, 3, 4];\n     *      var transducer = R.compose(R.map(R.add(1)), R.take(2));\n     *\n     *      R.transduce(transducer, R.flip(R.append), [], numbers); //=> [2, 3]\n     */\n    var transduce = curryN(4, function transduce(xf, fn, acc, list) {\n        return _reduce(xf(typeof fn === 'function' ? _xwrap(fn) : fn), acc, list);\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list. Duplication is determined according to the value returned by\n     * applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [*] -> [*] -> [*]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @see R.union\n     * @example\n     *\n     *      var l1 = [{a: 1}, {a: 2}];\n     *      var l2 = [{a: 1}, {a: 4}];\n     *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n     */\n    var unionWith = _curry3(function unionWith(pred, list1, list2) {\n        return uniqWith(pred, _concat(list1, list2));\n    });\n\n    /**\n     * Takes a spec object and a test object; returns true if the test satisfies\n     * the spec, false otherwise. An object satisfies the spec if, for each of the\n     * spec's own properties, accessing that property of the object gives the same\n     * value (in `R.equals` terms) as accessing that property of the spec.\n     *\n     * `whereEq` is a specialization of [`where`](#where).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @sig {String: *} -> {String: *} -> Boolean\n     * @param {Object} spec\n     * @param {Object} testObj\n     * @return {Boolean}\n     * @see R.where\n     * @example\n     *\n     *      // pred :: Object -> Boolean\n     *      var pred = R.whereEq({a: 1, b: 2});\n     *\n     *      pred({a: 1});              //=> false\n     *      pred({a: 1, b: 2});        //=> true\n     *      pred({a: 1, b: 2, c: 3});  //=> true\n     *      pred({a: 1, b: 1});        //=> false\n     */\n    var whereEq = _curry2(function whereEq(spec, testObj) {\n        return where(map(equals, spec), testObj);\n    });\n\n    var _flatCat = function () {\n        var preservingReduced = function preservingReduced(xf) {\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function transducerResult(result) {\n                    return xf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function transducerStep(result, input) {\n                    var ret = xf['@@transducer/step'](result, input);\n                    return ret['@@transducer/reduced'] ? _forceReduced(ret) : ret;\n                }\n            };\n        };\n        return function _xcat(xf) {\n            var rxf = preservingReduced(xf);\n            return {\n                '@@transducer/init': _xfBase.init,\n                '@@transducer/result': function transducerResult(result) {\n                    return rxf['@@transducer/result'](result);\n                },\n                '@@transducer/step': function transducerStep(result, input) {\n                    return !isArrayLike(input) ? _reduce(rxf, result, [input]) : _reduce(rxf, result, input);\n                }\n            };\n        };\n    }();\n\n    // Array.prototype.indexOf doesn't exist below IE9\n    // manually crawl the list to distinguish between +0 and -0\n    // NaN\n    // non-zero numbers can utilise Set\n    // all these types can utilise Set\n    // null can utilise Set\n    // anything else not covered above, defer to R.equals\n    var _indexOf = function _indexOf(list, a, idx) {\n        var inf, item;\n        // Array.prototype.indexOf doesn't exist below IE9\n        if (typeof list.indexOf === 'function') {\n            switch (typeof a === 'undefined' ? 'undefined' : _typeof(a)) {\n                case 'number':\n                    if (a === 0) {\n                        // manually crawl the list to distinguish between +0 and -0\n                        inf = 1 / a;\n                        while (idx < list.length) {\n                            item = list[idx];\n                            if (item === 0 && 1 / item === inf) {\n                                return idx;\n                            }\n                            idx += 1;\n                        }\n                        return -1;\n                    } else if (a !== a) {\n                        // NaN\n                        while (idx < list.length) {\n                            item = list[idx];\n                            if (typeof item === 'number' && item !== item) {\n                                return idx;\n                            }\n                            idx += 1;\n                        }\n                        return -1;\n                    }\n                    // non-zero numbers can utilise Set\n                    return list.indexOf(a, idx);\n                // all these types can utilise Set\n                case 'string':\n                case 'boolean':\n                case 'function':\n                case 'undefined':\n                    return list.indexOf(a, idx);\n                case 'object':\n                    if (a === null) {\n                        // null can utilise Set\n                        return list.indexOf(a, idx);\n                    }\n            }\n        }\n        // anything else not covered above, defer to R.equals\n        while (idx < list.length) {\n            if (equals(list[idx], a)) {\n                return idx;\n            }\n            idx += 1;\n        }\n        return -1;\n    };\n\n    var _xchain = _curry2(function _xchain(f, xf) {\n        return map(f, _flatCat(xf));\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if every one of the provided predicates is satisfied\n     * by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.anyPass\n     * @example\n     *\n     *      var isQueen = R.propEq('rank', 'Q');\n     *      var isSpade = R.propEq('suit', '♠︎');\n     *      var isQueenOfSpades = R.allPass([isQueen, isSpade]);\n     *\n     *      isQueenOfSpades({rank: 'Q', suit: '♣︎'}); //=> false\n     *      isQueenOfSpades({rank: 'Q', suit: '♠︎'}); //=> true\n     */\n    var allPass = _curry1(function allPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (!preds[idx].apply(this, arguments)) {\n                    return false;\n                }\n                idx += 1;\n            }\n            return true;\n        });\n    });\n\n    /**\n     * Takes a list of predicates and returns a predicate that returns true for a\n     * given list of arguments if at least one of the provided predicates is\n     * satisfied by those arguments.\n     *\n     * The function returned is a curried function whose arity matches that of the\n     * highest-arity predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Logic\n     * @sig [(*... -> Boolean)] -> (*... -> Boolean)\n     * @param {Array} preds\n     * @return {Function}\n     * @see R.allPass\n     * @example\n     *\n     *      var gte = R.anyPass([R.gt, R.equals]);\n     *\n     *      gte(3, 2); //=> true\n     *      gte(2, 2); //=> true\n     *      gte(2, 3); //=> false\n     */\n    var anyPass = _curry1(function anyPass(preds) {\n        return curryN(reduce(max, 0, pluck('length', preds)), function () {\n            var idx = 0;\n            var len = preds.length;\n            while (idx < len) {\n                if (preds[idx].apply(this, arguments)) {\n                    return true;\n                }\n                idx += 1;\n            }\n            return false;\n        });\n    });\n\n    /**\n     * ap applies a list of functions to a list of values.\n     *\n     * Dispatches to the `ap` method of the second argument, if present. Also\n     * treats curried functions as applicatives.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category Function\n     * @sig [a -> b] -> [a] -> [b]\n     * @sig Apply f => f (a -> b) -> f a -> f b\n     * @param {Array} fns An array of functions\n     * @param {Array} vs An array of values\n     * @return {Array} An array of results of applying each of `fns` to all of `vs` in turn.\n     * @example\n     *\n     *      R.ap([R.multiply(2), R.add(3)], [1,2,3]); //=> [2, 4, 6, 4, 5, 6]\n     */\n    // else\n    var ap = _curry2(function ap(applicative, fn) {\n        return typeof applicative.ap === 'function' ? applicative.ap(fn) : typeof applicative === 'function' ? function (x) {\n            return applicative(x)(fn(x));\n        } : // else\n        _reduce(function (acc, f) {\n            return _concat(acc, map(f, fn));\n        }, [], applicative);\n    });\n\n    /**\n     * Given a spec object recursively mapping properties to functions, creates a\n     * function producing an object of the same structure, by mapping each property\n     * to the result of calling its associated function with the supplied arguments.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.20.0\n     * @category Function\n     * @sig {k: ((a, b, ..., m) -> v)} -> ((a, b, ..., m) -> {k: v})\n     * @param {Object} spec an object recursively mapping properties to functions for\n     *        producing the values for these properties.\n     * @return {Function} A function that returns an object of the same structure\n     * as `spec', with each property set to the value returned by calling its\n     * associated function with the supplied arguments.\n     * @see R.converge, R.juxt\n     * @example\n     *\n     *      var getMetrics = R.applySpec({\n     *                                      sum: R.add,\n     *                                      nested: { mul: R.multiply }\n     *                                   });\n     *      getMetrics(2, 4); // => { sum: 6, nested: { mul: 8 } }\n     */\n    var applySpec = _curry1(function applySpec(spec) {\n        spec = map(function (v) {\n            return typeof v == 'function' ? v : applySpec(v);\n        }, spec);\n        return curryN(reduce(max, 0, pluck('length', values(spec))), function () {\n            var args = arguments;\n            return map(function (f) {\n                return apply(f, args);\n            }, spec);\n        });\n    });\n\n    /**\n     * Returns the result of calling its first argument with the remaining\n     * arguments. This is occasionally useful as a converging function for\n     * `R.converge`: the left branch can produce a function while the right branch\n     * produces a value to be passed to that function as an argument.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category Function\n     * @sig (*... -> a),*... -> a\n     * @param {Function} fn The function to apply to the remaining arguments.\n     * @param {...*} args Any number of positional arguments.\n     * @return {*}\n     * @see R.apply\n     * @example\n     *\n     *      var indentN = R.pipe(R.times(R.always(' ')),\n     *                           R.join(''),\n     *                           R.replace(/^(?!$)/gm));\n     *\n     *      var format = R.converge(R.call, [\n     *                                  R.pipe(R.prop('indent'), indentN),\n     *                                  R.prop('value')\n     *                              ]);\n     *\n     *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n     */\n    var call = curry(function call(fn) {\n        return fn.apply(this, _slice(arguments, 1));\n    });\n\n    /**\n     * `chain` maps a function over a list and concatenates the results. `chain`\n     * is also known as `flatMap` in some libraries\n     *\n     * Dispatches to the `chain` method of the second argument, if present,\n     * according to the [FantasyLand Chain spec](https://github.com/fantasyland/fantasy-land#chain).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig Chain m => (a -> m b) -> m a -> m b\n     * @param {Function} fn\n     * @param {Array} list\n     * @return {Array}\n     * @example\n     *\n     *      var duplicate = n => [n, n];\n     *      R.chain(duplicate, [1, 2, 3]); //=> [1, 1, 2, 2, 3, 3]\n     */\n    var chain = _curry2(_dispatchable('chain', _xchain, function chain(fn, monad) {\n        if (typeof monad === 'function') {\n            return function () {\n                return monad.call(this, fn.apply(this, arguments)).apply(this, arguments);\n            };\n        }\n        return _makeFlat(false)(map(fn, monad));\n    }));\n\n    /**\n     * Returns a function, `fn`, which encapsulates if/else-if/else logic.\n     * `R.cond` takes a list of [predicate, transform] pairs. All of the arguments\n     * to `fn` are applied to each of the predicates in turn until one returns a\n     * \"truthy\" value, at which point `fn` returns the result of applying its\n     * arguments to the corresponding transformer. If none of the predicates\n     * matches, `fn` returns undefined.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.6.0\n     * @category Logic\n     * @sig [[(*... -> Boolean),(*... -> *)]] -> (*... -> *)\n     * @param {Array} pairs\n     * @return {Function}\n     * @example\n     *\n     *      var fn = R.cond([\n     *        [R.equals(0),   R.always('water freezes at 0°C')],\n     *        [R.equals(100), R.always('water boils at 100°C')],\n     *        [R.T,           temp => 'nothing special happens at ' + temp + '°C']\n     *      ]);\n     *      fn(0); //=> 'water freezes at 0°C'\n     *      fn(50); //=> 'nothing special happens at 50°C'\n     *      fn(100); //=> 'water boils at 100°C'\n     */\n    var cond = _curry1(function cond(pairs) {\n        var arity = reduce(max, 0, map(function (pair) {\n            return pair[0].length;\n        }, pairs));\n        return _arity(arity, function () {\n            var idx = 0;\n            while (idx < pairs.length) {\n                if (pairs[idx][0].apply(this, arguments)) {\n                    return pairs[idx][1].apply(this, arguments);\n                }\n                idx += 1;\n            }\n        });\n    });\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type. The arity of the function\n     * returned is specified to allow using variadic constructor functions.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.0\n     * @category Function\n     * @sig Number -> (* -> {*}) -> (* -> {*})\n     * @param {Number} n The arity of the constructor function.\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Variadic constructor function\n     *      var Widget = () => {\n     *        this.children = Array.prototype.slice.call(arguments);\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.constructN(1, Widget), allConfigs); // a list of Widgets\n     */\n    var constructN = _curry2(function constructN(n, Fn) {\n        if (n > 10) {\n            throw new Error('Constructor with greater than ten arguments');\n        }\n        if (n === 0) {\n            return function () {\n                return new Fn();\n            };\n        }\n        return curry(nAry(n, function ($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {\n            switch (arguments.length) {\n                case 1:\n                    return new Fn($0);\n                case 2:\n                    return new Fn($0, $1);\n                case 3:\n                    return new Fn($0, $1, $2);\n                case 4:\n                    return new Fn($0, $1, $2, $3);\n                case 5:\n                    return new Fn($0, $1, $2, $3, $4);\n                case 6:\n                    return new Fn($0, $1, $2, $3, $4, $5);\n                case 7:\n                    return new Fn($0, $1, $2, $3, $4, $5, $6);\n                case 8:\n                    return new Fn($0, $1, $2, $3, $4, $5, $6, $7);\n                case 9:\n                    return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8);\n                case 10:\n                    return new Fn($0, $1, $2, $3, $4, $5, $6, $7, $8, $9);\n            }\n        }));\n    });\n\n    /**\n     * Accepts a converging function and a list of branching functions and returns\n     * a new function. When invoked, this new function is applied to some\n     * arguments, each branching function is applied to those same arguments. The\n     * results of each branching function are passed as arguments to the converging\n     * function to produce the return value.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.4.2\n     * @category Function\n     * @sig (x1 -> x2 -> ... -> z) -> [(a -> b -> ... -> x1), (a -> b -> ... -> x2), ...] -> (a -> b -> ... -> z)\n     * @param {Function} after A function. `after` will be invoked with the return values of\n     *        `fn1` and `fn2` as its arguments.\n     * @param {Array} functions A list of functions.\n     * @return {Function} A new function.\n     * @example\n     *\n     *      var add = (a, b) => a + b;\n     *      var multiply = (a, b) => a * b;\n     *      var subtract = (a, b) => a - b;\n     *\n     *      //≅ multiply( add(1, 2), subtract(1, 2) );\n     *      R.converge(multiply, [add, subtract])(1, 2); //=> -3\n     *\n     *      var add3 = (a, b, c) => a + b + c;\n     *      R.converge(add3, [multiply, add, subtract])(1, 2); //=> 4\n     */\n    var converge = _curry2(function converge(after, fns) {\n        return curryN(reduce(max, 0, pluck('length', fns)), function () {\n            var args = arguments;\n            var context = this;\n            return after.apply(context, _map(function (fn) {\n                return fn.apply(context, args);\n            }, fns));\n        });\n    });\n\n    /**\n     * Counts the elements of a list according to how many match each value of a\n     * key generated by the supplied function. Returns an object mapping the keys\n     * produced by `fn` to the number of occurrences in the list. Note that all\n     * keys are coerced to strings because of how JavaScript objects work.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig (a -> String) -> [a] -> {*}\n     * @param {Function} fn The function used to map values to keys.\n     * @param {Array} list The list to count elements from.\n     * @return {Object} An object mapping keys to number of occurrences in the list.\n     * @example\n     *\n     *      var numbers = [1.0, 1.1, 1.2, 2.0, 3.0, 2.2];\n     *      var letters = R.split('', 'abcABCaaaBBc');\n     *      R.countBy(Math.floor)(numbers);    //=> {'1': 3, '2': 2, '3': 1}\n     *      R.countBy(R.toLower)(letters);   //=> {'a': 5, 'b': 4, 'c': 3}\n     */\n    var countBy = reduceBy(function (acc, elem) {\n        return acc + 1;\n    }, 0);\n\n    /**\n     * Returns a new list without any consecutively repeating elements. Equality is\n     * determined by applying the supplied predicate two consecutive elements. The\n     * first element in a series of equal element is the one being preserved.\n     *\n     * Dispatches to the `dropRepeatsWith` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig (a, a -> Boolean) -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *      var l = [1, -1, 1, 3, 4, -4, -4, -5, 5, 3, 3];\n     *      R.dropRepeatsWith(R.eqBy(Math.abs), l); //=> [1, 3, 4, -5, 3]\n     */\n    var dropRepeatsWith = _curry2(_dispatchable('dropRepeatsWith', _xdropRepeatsWith, function dropRepeatsWith(pred, list) {\n        var result = [];\n        var idx = 1;\n        var len = list.length;\n        if (len !== 0) {\n            result[0] = list[0];\n            while (idx < len) {\n                if (!pred(last(result), list[idx])) {\n                    result[result.length] = list[idx];\n                }\n                idx += 1;\n            }\n        }\n        return result;\n    }));\n\n    /**\n     * Takes a function and two values in its domain and returns `true` if the\n     * values map to the same value in the codomain; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.18.0\n     * @category Relation\n     * @sig (a -> b) -> a -> a -> Boolean\n     * @param {Function} f\n     * @param {*} x\n     * @param {*} y\n     * @return {Boolean}\n     * @example\n     *\n     *      R.eqBy(Math.abs, 5, -5); //=> true\n     */\n    var eqBy = _curry3(function eqBy(f, x, y) {\n        return equals(f(x), f(y));\n    });\n\n    /**\n     * Reports whether two objects have the same value, in `R.equals` terms, for\n     * the specified property. Useful as a curried predicate.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig k -> {k: v} -> {k: v} -> Boolean\n     * @param {String} prop The name of the property to compare\n     * @param {Object} obj1\n     * @param {Object} obj2\n     * @return {Boolean}\n     *\n     * @example\n     *\n     *      var o1 = { a: 1, b: 2, c: 3, d: 4 };\n     *      var o2 = { a: 10, b: 20, c: 3, d: 40 };\n     *      R.eqProps('a', o1, o2); //=> false\n     *      R.eqProps('c', o1, o2); //=> true\n     */\n    var eqProps = _curry3(function eqProps(prop, obj1, obj2) {\n        return equals(obj1[prop], obj2[prop]);\n    });\n\n    /**\n     * Splits a list into sub-lists stored in an object, based on the result of\n     * calling a String-returning function on each element, and grouping the\n     * results according to values returned.\n     *\n     * Dispatches to the `groupBy` method of the second argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig (a -> String) -> [a] -> {String: [a]}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} list The array to group\n     * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n     *         that produced that key when passed to `fn`.\n     * @see R.transduce\n     * @example\n     *\n     *      var byGrade = R.groupBy(function(student) {\n     *        var score = student.score;\n     *        return score < 65 ? 'F' :\n     *               score < 70 ? 'D' :\n     *               score < 80 ? 'C' :\n     *               score < 90 ? 'B' : 'A';\n     *      });\n     *      var students = [{name: 'Abby', score: 84},\n     *                      {name: 'Eddy', score: 58},\n     *                      // ...\n     *                      {name: 'Jack', score: 69}];\n     *      byGrade(students);\n     *      // {\n     *      //   'A': [{name: 'Dianne', score: 99}],\n     *      //   'B': [{name: 'Abby', score: 84}]\n     *      //   // ...,\n     *      //   'F': [{name: 'Eddy', score: 58}]\n     *      // }\n     */\n    var groupBy = _curry2(_checkForMethod('groupBy', reduceBy(function (acc, item) {\n        if (acc == null) {\n            acc = [];\n        }\n        acc.push(item);\n        return acc;\n    }, null)));\n\n    /**\n     * Given a function that generates a key, turns a list of objects into an\n     * object indexing the objects by the given key. Note that if multiple\n     * objects generate the same value for the indexing key only the last value\n     * will be included in the generated object.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n     * @param {Function} fn Function :: a -> String\n     * @param {Array} array The array of objects to index\n     * @return {Object} An object indexing each array element by the given property.\n     * @example\n     *\n     *      var list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n     *      R.indexBy(R.prop('id'), list);\n     *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n     */\n    var indexBy = reduceBy(function (acc, elem) {\n        return elem;\n    }, null);\n\n    /**\n     * Returns the position of the first occurrence of an item in an array, or -1\n     * if the item is not included in the array. `R.equals` is used to determine\n     * equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Number\n     * @param {*} target The item to find.\n     * @param {Array} xs The array to search in.\n     * @return {Number} the index of the target, or -1 if the target is not found.\n     * @see R.lastIndexOf\n     * @example\n     *\n     *      R.indexOf(3, [1,2,3,4]); //=> 2\n     *      R.indexOf(10, [1,2,3,4]); //=> -1\n     */\n    var indexOf = _curry2(function indexOf(target, xs) {\n        return typeof xs.indexOf === 'function' && !_isArray(xs) ? xs.indexOf(target) : _indexOf(xs, target, 0);\n    });\n\n    /**\n     * juxt applies a list of functions to a list of values.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Function\n     * @sig [(a, b, ..., m) -> n] -> ((a, b, ..., m) -> [n])\n     * @param {Array} fns An array of functions\n     * @return {Function} A function that returns a list of values after applying each of the original `fns` to its parameters.\n     * @see R.applySpec\n     * @example\n     *\n     *      var getRange = R.juxt([Math.min, Math.max]);\n     *      getRange(3, 4, 9, -3); //=> [-3, 9]\n     */\n    var juxt = _curry1(function juxt(fns) {\n        return converge(_arrayOf, fns);\n    });\n\n    /**\n     * Returns a lens for the given getter and setter functions. The getter \"gets\"\n     * the value of the focus; the setter \"sets\" the value of the focus. The setter\n     * should not mutate the data structure.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.8.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig (s -> a) -> ((a, s) -> s) -> Lens s a\n     * @param {Function} getter\n     * @param {Function} setter\n     * @return {Lens}\n     * @see R.view, R.set, R.over, R.lensIndex, R.lensProp\n     * @example\n     *\n     *      var xLens = R.lens(R.prop('x'), R.assoc('x'));\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lens = _curry2(function lens(getter, setter) {\n        return function (toFunctorFn) {\n            return function (target) {\n                return map(function (focus) {\n                    return setter(focus, target);\n                }, toFunctorFn(getter(target)));\n            };\n        };\n    });\n\n    /**\n     * Returns a lens whose focus is the specified index.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig Number -> Lens s a\n     * @param {Number} n\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var headLens = R.lensIndex(0);\n     *\n     *      R.view(headLens, ['a', 'b', 'c']);            //=> 'a'\n     *      R.set(headLens, 'x', ['a', 'b', 'c']);        //=> ['x', 'b', 'c']\n     *      R.over(headLens, R.toUpper, ['a', 'b', 'c']); //=> ['A', 'b', 'c']\n     */\n    var lensIndex = _curry1(function lensIndex(n) {\n        return lens(nth(n), update(n));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified path.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig [String] -> Lens s a\n     * @param {Array} path The path to use.\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xyLens = R.lensPath(['x', 'y']);\n     *\n     *      R.view(xyLens, {x: {y: 2, z: 3}});            //=> 2\n     *      R.set(xyLens, 4, {x: {y: 2, z: 3}});          //=> {x: {y: 4, z: 3}}\n     *      R.over(xyLens, R.negate, {x: {y: 2, z: 3}});  //=> {x: {y: -2, z: 3}}\n     */\n    var lensPath = _curry1(function lensPath(p) {\n        return lens(path(p), assocPath(p));\n    });\n\n    /**\n     * Returns a lens whose focus is the specified property.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Object\n     * @typedefn Lens s a = Functor f => (a -> f a) -> s -> f s\n     * @sig String -> Lens s a\n     * @param {String} k\n     * @return {Lens}\n     * @see R.view, R.set, R.over\n     * @example\n     *\n     *      var xLens = R.lensProp('x');\n     *\n     *      R.view(xLens, {x: 1, y: 2});            //=> 1\n     *      R.set(xLens, 4, {x: 1, y: 2});          //=> {x: 4, y: 2}\n     *      R.over(xLens, R.negate, {x: 1, y: 2});  //=> {x: -1, y: 2}\n     */\n    var lensProp = _curry1(function lensProp(k) {\n        return lens(prop(k), assoc(k));\n    });\n\n    /**\n     * \"lifts\" a function to be the specified arity, so that it may \"map over\" that\n     * many lists, Functions or other objects that satisfy the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig Number -> (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.lift, R.ap\n     * @example\n     *\n     *      var madd3 = R.liftN(3, R.curryN(3, (...args) => R.sum(args)));\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     */\n    var liftN = _curry2(function liftN(arity, fn) {\n        var lifted = curryN(arity, fn);\n        return curryN(arity, function () {\n            return _reduce(ap, map(lifted, arguments[0]), _slice(arguments, 1));\n        });\n    });\n\n    /**\n     * Returns the mean of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.mean([2, 7, 9]); //=> 6\n     *      R.mean([]); //=> NaN\n     */\n    var mean = _curry1(function mean(list) {\n        return sum(list) / list.length;\n    });\n\n    /**\n     * Returns the median of the given list of numbers.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list\n     * @return {Number}\n     * @example\n     *\n     *      R.median([2, 9, 7]); //=> 7\n     *      R.median([7, 2, 10, 9]); //=> 8\n     *      R.median([]); //=> NaN\n     */\n    var median = _curry1(function median(list) {\n        var len = list.length;\n        if (len === 0) {\n            return NaN;\n        }\n        var width = 2 - len % 2;\n        var idx = (len - width) / 2;\n        return mean(_slice(list).sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : 0;\n        }).slice(idx, idx + width));\n    });\n\n    /**\n     * Takes a predicate and a list or other \"filterable\" object and returns the\n     * pair of filterable objects of the same type of elements which do and do not\n     * satisfy, the predicate, respectively.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.4\n     * @category List\n     * @sig Filterable f => (a -> Boolean) -> f a -> [f a, f a]\n     * @param {Function} pred A predicate to determine which side the element belongs to.\n     * @param {Array} filterable the list (or other filterable) to partition.\n     * @return {Array} An array, containing first the subset of elements that satisfy the\n     *         predicate, and second the subset of elements that do not satisfy.\n     * @see R.filter, R.reject\n     * @example\n     *\n     *      R.partition(R.contains('s'), ['sss', 'ttt', 'foo', 'bars']);\n     *      // => [ [ 'sss', 'bars' ],  [ 'ttt', 'foo' ] ]\n     *\n     *      R.partition(R.contains('s'), { a: 'sss', b: 'ttt', foo: 'bars' });\n     *      // => [ { a: 'sss', foo: 'bars' }, { b: 'ttt' }  ]\n     */\n    var partition = juxt([filter, reject]);\n\n    /**\n     * Performs left-to-right function composition. The leftmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * In some libraries this function is named `sequence`.\n     *\n     * **Note:** The result of pipe is not automatically curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (((a, b, ..., n) -> o), (o -> p), ..., (x -> y), (y -> z)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.compose\n     * @example\n     *\n     *      var f = R.pipe(Math.pow, R.negate, R.inc);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var pipe = function pipe() {\n        if (arguments.length === 0) {\n            throw new Error('pipe requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipe, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Performs left-to-right composition of one or more Promise-returning\n     * functions. The leftmost function may have any arity; the remaining functions\n     * must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((a -> Promise b), (b -> Promise c), ..., (y -> Promise z)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.composeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.pipeP(db.getUserById, db.getFollowers);\n     */\n    var pipeP = function pipeP() {\n        if (arguments.length === 0) {\n            throw new Error('pipeP requires at least one argument');\n        }\n        return _arity(arguments[0].length, reduce(_pipeP, arguments[0], tail(arguments)));\n    };\n\n    /**\n     * Multiplies together all the elements of a list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Math\n     * @sig [Number] -> Number\n     * @param {Array} list An array of numbers\n     * @return {Number} The product of all the numbers in the list.\n     * @see R.reduce\n     * @example\n     *\n     *      R.product([2,4,6,8,100,1]); //=> 38400\n     */\n    var product = reduce(multiply, 1);\n\n    /**\n     * Transforms a [Traversable](https://github.com/fantasyland/fantasy-land#traversable)\n     * of [Applicative](https://github.com/fantasyland/fantasy-land#applicative) into an\n     * Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the second argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> t (f a) -> f (t a)\n     * @param {Function} of\n     * @param {*} traversable\n     * @return {*}\n     * @see R.traverse\n     * @example\n     *\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Just(3)]);   //=> Just([1, 2, 3])\n     *      R.sequence(Maybe.of, [Just(1), Just(2), Nothing()]); //=> Nothing()\n     *\n     *      R.sequence(R.of, Just([1, 2, 3])); //=> [Just(1), Just(2), Just(3)]\n     *      R.sequence(R.of, Nothing());       //=> [Nothing()]\n     */\n    var sequence = _curry2(function sequence(of, traversable) {\n        return typeof traversable.sequence === 'function' ? traversable.sequence(of) : reduceRight(function (acc, x) {\n            return ap(map(prepend, x), acc);\n        }, of([]), traversable);\n    });\n\n    /**\n     * Maps an [Applicative](https://github.com/fantasyland/fantasy-land#applicative)-returning\n     * function over a [Traversable](https://github.com/fantasyland/fantasy-land#traversable),\n     * then uses [`sequence`](#sequence) to transform the resulting Traversable of Applicative\n     * into an Applicative of Traversable.\n     *\n     * Dispatches to the `sequence` method of the third argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig (Applicative f, Traversable t) => (a -> f a) -> (a -> f b) -> t a -> f (t b)\n     * @param {Function} of\n     * @param {Function} f\n     * @param {*} traversable\n     * @return {*}\n     * @see R.sequence\n     * @example\n     *\n     *      // Returns `Nothing` if the given divisor is `0`\n     *      safeDiv = n => d => d === 0 ? Nothing() : Just(n / d)\n     *\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 4, 5]); //=> Just([5, 2.5, 2])\n     *      R.traverse(Maybe.of, safeDiv(10), [2, 0, 5]); //=> Nothing\n     */\n    var traverse = _curry3(function traverse(of, f, traversable) {\n        return sequence(of, map(f, traversable));\n    });\n\n    /**\n     * Shorthand for `R.chain(R.identity)`, which removes one level of nesting from\n     * any [Chain](https://github.com/fantasyland/fantasy-land#chain).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.3.0\n     * @category List\n     * @sig Chain c => c (c a) -> c a\n     * @param {*} list\n     * @return {*}\n     * @see R.flatten, R.chain\n     * @example\n     *\n     *      R.unnest([1, [2], [[3]]]); //=> [1, 2, [3]]\n     *      R.unnest([[1, 2], [3, 4], [5, 6]]); //=> [1, 2, 3, 4, 5, 6]\n     */\n    var unnest = chain(_identity);\n\n    var _contains = function _contains(a, list) {\n        return _indexOf(list, a, 0) >= 0;\n    };\n\n    //  mapPairs :: (Object, [String]) -> [String]\n    var _toString = function _toString(x, seen) {\n        var recur = function recur(y) {\n            var xs = seen.concat([x]);\n            return _contains(y, xs) ? '<Circular>' : _toString(y, xs);\n        };\n        //  mapPairs :: (Object, [String]) -> [String]\n        var mapPairs = function mapPairs(obj, keys) {\n            return _map(function (k) {\n                return _quote(k) + ': ' + recur(obj[k]);\n            }, keys.slice().sort());\n        };\n        switch (Object.prototype.toString.call(x)) {\n            case '[object Arguments]':\n                return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n            case '[object Array]':\n                return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n                    return (/^\\d+$/.test(k)\n                    );\n                }, keys(x)))).join(', ') + ']';\n            case '[object Boolean]':\n                return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n            case '[object Date]':\n                return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n            case '[object Null]':\n                return 'null';\n            case '[object Number]':\n                return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n            case '[object String]':\n                return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n            case '[object Undefined]':\n                return 'undefined';\n            default:\n                if (typeof x.toString === 'function') {\n                    var repr = x.toString();\n                    if (repr !== '[object Object]') {\n                        return repr;\n                    }\n                }\n                return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n        }\n    };\n\n    /**\n     * Performs right-to-left function composition. The rightmost function may have\n     * any arity; the remaining functions must be unary.\n     *\n     * **Note:** The result of compose is not automatically curried.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig ((y -> z), (x -> y), ..., (o -> p), ((a, b, ..., n) -> o)) -> ((a, b, ..., n) -> z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipe\n     * @example\n     *\n     *      var f = R.compose(R.inc, R.negate, Math.pow);\n     *\n     *      f(3, 4); // -(3^4) + 1\n     */\n    var compose = function compose() {\n        if (arguments.length === 0) {\n            throw new Error('compose requires at least one argument');\n        }\n        return pipe.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the right-to-left Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.composeK(h, g, f)` is equivalent to `R.compose(R.chain(h), R.chain(g), R.chain(f))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((y -> m z), (x -> m y), ..., (a -> m b)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.pipeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.composeK(\n     *        R.compose(Maybe.of, R.toUpper),\n     *        get('state'),\n     *        get('address'),\n     *        get('user'),\n     *        parseJson\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var composeK = function composeK() {\n        return compose.apply(this, prepend(identity, map(chain, arguments)));\n    };\n\n    /**\n     * Performs right-to-left composition of one or more Promise-returning\n     * functions. The rightmost function may have any arity; the remaining\n     * functions must be unary.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.10.0\n     * @category Function\n     * @sig ((y -> Promise z), (x -> Promise y), ..., (a -> Promise b)) -> (a -> Promise z)\n     * @param {...Function} functions\n     * @return {Function}\n     * @see R.pipeP\n     * @example\n     *\n     *      //  followersForUser :: String -> Promise [User]\n     *      var followersForUser = R.composeP(db.getFollowers, db.getUserById);\n     */\n    var composeP = function composeP() {\n        if (arguments.length === 0) {\n            throw new Error('composeP requires at least one argument');\n        }\n        return pipeP.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Wraps a constructor function inside a curried function that can be called\n     * with the same arguments and returns the same type.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (* -> {*}) -> (* -> {*})\n     * @param {Function} Fn The constructor function to wrap.\n     * @return {Function} A wrapped, curried constructor function.\n     * @example\n     *\n     *      // Constructor function\n     *      var Widget = config => {\n     *        // ...\n     *      };\n     *      Widget.prototype = {\n     *        // ...\n     *      };\n     *      var allConfigs = [\n     *        // ...\n     *      ];\n     *      R.map(R.construct(Widget), allConfigs); // a list of Widgets\n     */\n    var construct = _curry1(function construct(Fn) {\n        return constructN(Fn.length, Fn);\n    });\n\n    /**\n     * Returns `true` if the specified value is equal, in `R.equals` terms, to at\n     * least one element of the given list; `false` otherwise.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig a -> [a] -> Boolean\n     * @param {Object} a The item to compare against.\n     * @param {Array} list The array to consider.\n     * @return {Boolean} `true` if the item is in the list, `false` otherwise.\n     * @see R.any\n     * @example\n     *\n     *      R.contains(3, [1, 2, 3]); //=> true\n     *      R.contains(4, [1, 2, 3]); //=> false\n     *      R.contains([42], [[42]]); //=> true\n     */\n    var contains = _curry2(_contains);\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements in the first list not\n     * contained in the second list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` that are not in `list2`.\n     * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith\n     * @example\n     *\n     *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n     *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n     */\n    var difference = _curry2(function difference(first, second) {\n        var out = [];\n        var idx = 0;\n        var firstLen = first.length;\n        while (idx < firstLen) {\n            if (!_contains(first[idx], second) && !_contains(first[idx], out)) {\n                out[out.length] = first[idx];\n            }\n            idx += 1;\n        }\n        return out;\n    });\n\n    /**\n     * Returns a new list without any consecutively repeating elements. `R.equals`\n     * is used to determine equality.\n     *\n     * Dispatches to the `dropRepeats` method of the first argument, if present.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} `list` without repeating elements.\n     * @see R.transduce\n     * @example\n     *\n     *     R.dropRepeats([1, 1, 1, 2, 3, 4, 4, 2, 2]); //=> [1, 2, 3, 4, 2]\n     */\n    var dropRepeats = _curry1(_dispatchable('dropRepeats', _xdropRepeatsWith(equals), dropRepeatsWith(equals)));\n\n    /**\n     * \"lifts\" a function of arity > 1 so that it may \"map over\" a list, Function or other\n     * object that satisfies the [FantasyLand Apply spec](https://github.com/fantasyland/fantasy-land#apply).\n     *\n     * @func\n     * @memberOf R\n     * @since v0.7.0\n     * @category Function\n     * @sig (*... -> *) -> ([*]... -> [*])\n     * @param {Function} fn The function to lift into higher context\n     * @return {Function} The lifted function.\n     * @see R.liftN\n     * @example\n     *\n     *      var madd3 = R.lift(R.curry((a, b, c) => a + b + c));\n     *\n     *      madd3([1,2,3], [1,2,3], [1]); //=> [3, 4, 5, 4, 5, 6, 5, 6, 7]\n     *\n     *      var madd5 = R.lift(R.curry((a, b, c, d, e) => a + b + c + d + e));\n     *\n     *      madd5([1,2], [3], [4, 5], [6], [7, 8]); //=> [21, 22, 22, 23, 22, 23, 23, 24]\n     */\n    var lift = _curry1(function lift(fn) {\n        return liftN(fn.length, fn);\n    });\n\n    /**\n     * Returns a partial copy of an object omitting the keys specified.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Object\n     * @sig [String] -> {String: *} -> {String: *}\n     * @param {Array} names an array of String property names to omit from the new object\n     * @param {Object} obj The object to copy from\n     * @return {Object} A new object with properties from `names` not on it.\n     * @see R.pick\n     * @example\n     *\n     *      R.omit(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, c: 3}\n     */\n    var omit = _curry2(function omit(names, obj) {\n        var result = {};\n        for (var prop in obj) {\n            if (!_contains(prop, names)) {\n                result[prop] = obj[prop];\n            }\n        }\n        return result;\n    });\n\n    /**\n     * Returns the left-to-right Kleisli composition of the provided functions,\n     * each of which must return a value of a type supported by [`chain`](#chain).\n     *\n     * `R.pipeK(f, g, h)` is equivalent to `R.pipe(R.chain(f), R.chain(g), R.chain(h))`.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category Function\n     * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (m a -> m z)\n     * @param {...Function}\n     * @return {Function}\n     * @see R.composeK\n     * @example\n     *\n     *      //  parseJson :: String -> Maybe *\n     *      //  get :: String -> Object -> Maybe *\n     *\n     *      //  getStateCode :: Maybe String -> Maybe String\n     *      var getStateCode = R.pipeK(\n     *        parseJson,\n     *        get('user'),\n     *        get('address'),\n     *        get('state'),\n     *        R.compose(Maybe.of, R.toUpper)\n     *      );\n     *\n     *      getStateCode(Maybe.of('{\"user\":{\"address\":{\"state\":\"ny\"}}}'));\n     *      //=> Just('NY')\n     *      getStateCode(Maybe.of('[Invalid JSON]'));\n     *      //=> Nothing()\n     */\n    var pipeK = function pipeK() {\n        return composeK.apply(this, reverse(arguments));\n    };\n\n    /**\n     * Returns the string representation of the given value. `eval`'ing the output\n     * should result in a value equivalent to the input value. Many of the built-in\n     * `toString` methods do not satisfy this requirement.\n     *\n     * If the given value is an `[object Object]` with a `toString` method other\n     * than `Object.prototype.toString`, this method is invoked with no arguments\n     * to produce the return value. This means user-defined constructor functions\n     * can provide a suitable `toString` method. For example:\n     *\n     *     function Point(x, y) {\n     *       this.x = x;\n     *       this.y = y;\n     *     }\n     *\n     *     Point.prototype.toString = function() {\n     *       return 'new Point(' + this.x + ', ' + this.y + ')';\n     *     };\n     *\n     *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n     *\n     * @func\n     * @memberOf R\n     * @since v0.14.0\n     * @category String\n     * @sig * -> String\n     * @param {*} val\n     * @return {String}\n     * @example\n     *\n     *      R.toString(42); //=> '42'\n     *      R.toString('abc'); //=> '\"abc\"'\n     *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n     *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n     *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n     */\n    var toString = _curry1(function toString(val) {\n        return _toString(val, []);\n    });\n\n    /**\n     * Returns a new list without values in the first argument.\n     * `R.equals` is used to determine equality.\n     *\n     * Acts as a transducer if a transformer is given in list position.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @param {Array} list1 The values to be removed from `list2`.\n     * @param {Array} list2 The array to remove values from.\n     * @return {Array} The new array without values in `list1`.\n     * @see R.transduce\n     * @example\n     *\n     *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n     */\n    var without = _curry2(function (xs, list) {\n        return reject(flip(_contains)(xs), list);\n    });\n\n    // A simple Set type that honours R.equals semantics\n    /* globals Set */\n    // until we figure out why jsdoc chokes on this\n    // @param item The item to add to the Set\n    // @returns {boolean} true if the item did not exist prior, otherwise false\n    //\n    //\n    // @param item The item to check for existence in the Set\n    // @returns {boolean} true if the item exists in the Set, otherwise false\n    //\n    //\n    // Combines the logic for checking whether an item is a member of the set and\n    // for adding a new item to the set.\n    //\n    // @param item       The item to check or add to the Set instance.\n    // @param shouldAdd  If true, the item will be added to the set if it doesn't\n    //                   already exist.\n    // @param set        The set instance to check or add to.\n    // @return {boolean} true if the item already existed, otherwise false.\n    //\n    // distinguish between +0 and -0\n    // these types can all utilise the native Set\n    // set._items['boolean'] holds a two element array\n    // representing [ falseExists, trueExists ]\n    // compare functions for reference equality\n    /* falls through */\n    // reduce the search size of heterogeneous sets by creating buckets\n    // for each type.\n    // scan through all previously applied items\n    var _Set = function () {\n        function _Set() {\n            /* globals Set */\n            this._nativeSet = typeof Set === 'function' ? new Set() : null;\n            this._items = {};\n        }\n        // until we figure out why jsdoc chokes on this\n        // @param item The item to add to the Set\n        // @returns {boolean} true if the item did not exist prior, otherwise false\n        //\n        _Set.prototype.add = function (item) {\n            return !hasOrAdd(item, true, this);\n        };\n        //\n        // @param item The item to check for existence in the Set\n        // @returns {boolean} true if the item exists in the Set, otherwise false\n        //\n        _Set.prototype.has = function (item) {\n            return hasOrAdd(item, false, this);\n        };\n        //\n        // Combines the logic for checking whether an item is a member of the set and\n        // for adding a new item to the set.\n        //\n        // @param item       The item to check or add to the Set instance.\n        // @param shouldAdd  If true, the item will be added to the set if it doesn't\n        //                   already exist.\n        // @param set        The set instance to check or add to.\n        // @return {boolean} true if the item already existed, otherwise false.\n        //\n        function hasOrAdd(item, shouldAdd, set) {\n            var type = typeof item === 'undefined' ? 'undefined' : _typeof(item);\n            var prevSize, newSize;\n            switch (type) {\n                case 'string':\n                case 'number':\n                    // distinguish between +0 and -0\n                    if (item === 0 && 1 / item === -Infinity) {\n                        if (set._items['-0']) {\n                            return true;\n                        } else {\n                            if (shouldAdd) {\n                                set._items['-0'] = true;\n                            }\n                            return false;\n                        }\n                    }\n                    // these types can all utilise the native Set\n                    if (set._nativeSet !== null) {\n                        if (shouldAdd) {\n                            prevSize = set._nativeSet.size;\n                            set._nativeSet.add(item);\n                            newSize = set._nativeSet.size;\n                            return newSize === prevSize;\n                        } else {\n                            return set._nativeSet.has(item);\n                        }\n                    } else {\n                        if (!(type in set._items)) {\n                            if (shouldAdd) {\n                                set._items[type] = {};\n                                set._items[type][item] = true;\n                            }\n                            return false;\n                        } else if (item in set._items[type]) {\n                            return true;\n                        } else {\n                            if (shouldAdd) {\n                                set._items[type][item] = true;\n                            }\n                            return false;\n                        }\n                    }\n                case 'boolean':\n                    // set._items['boolean'] holds a two element array\n                    // representing [ falseExists, trueExists ]\n                    if (type in set._items) {\n                        var bIdx = item ? 1 : 0;\n                        if (set._items[type][bIdx]) {\n                            return true;\n                        } else {\n                            if (shouldAdd) {\n                                set._items[type][bIdx] = true;\n                            }\n                            return false;\n                        }\n                    } else {\n                        if (shouldAdd) {\n                            set._items[type] = item ? [false, true] : [true, false];\n                        }\n                        return false;\n                    }\n                case 'function':\n                    // compare functions for reference equality\n                    if (set._nativeSet !== null) {\n                        if (shouldAdd) {\n                            prevSize = set._nativeSet.size;\n                            set._nativeSet.add(item);\n                            newSize = set._nativeSet.size;\n                            return newSize > prevSize;\n                        } else {\n                            return set._nativeSet.has(item);\n                        }\n                    } else {\n                        if (!(type in set._items)) {\n                            if (shouldAdd) {\n                                set._items[type] = [item];\n                            }\n                            return false;\n                        }\n                        if (!_contains(item, set._items[type])) {\n                            if (shouldAdd) {\n                                set._items[type].push(item);\n                            }\n                            return false;\n                        }\n                        return true;\n                    }\n                case 'undefined':\n                    if (set._items[type]) {\n                        return true;\n                    } else {\n                        if (shouldAdd) {\n                            set._items[type] = true;\n                        }\n                        return false;\n                    }\n                case 'object':\n                    if (item === null) {\n                        if (!set._items['null']) {\n                            if (shouldAdd) {\n                                set._items['null'] = true;\n                            }\n                            return false;\n                        }\n                        return true;\n                    }\n                /* falls through */\n                default:\n                    // reduce the search size of heterogeneous sets by creating buckets\n                    // for each type.\n                    type = Object.prototype.toString.call(item);\n                    if (!(type in set._items)) {\n                        if (shouldAdd) {\n                            set._items[type] = [item];\n                        }\n                        return false;\n                    }\n                    // scan through all previously applied items\n                    if (!_contains(item, set._items[type])) {\n                        if (shouldAdd) {\n                            set._items[type].push(item);\n                        }\n                        return false;\n                    }\n                    return true;\n            }\n        }\n        return _Set;\n    }();\n\n    /**\n     * A function wrapping calls to the two functions in an `&&` operation,\n     * returning the result of the first function if it is false-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * false-y value.\n     *\n     * In addition to functions, `R.both` also accepts any fantasy-land compatible\n     * applicative functor.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `&&`s their outputs together.\n     * @see R.and\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.both(gt10, even);\n     *      f(100); //=> true\n     *      f(101); //=> false\n     */\n    var both = _curry2(function both(f, g) {\n        return _isFunction(f) ? function _both() {\n            return f.apply(this, arguments) && g.apply(this, arguments);\n        } : lift(and)(f, g);\n    });\n\n    /**\n     * Takes a function `f` and returns a function `g` such that:\n     *\n     *   - applying `g` to zero or more arguments will give __true__ if applying\n     *     the same arguments to `f` gives a logical __false__ value; and\n     *\n     *   - applying `g` to zero or more arguments will give __false__ if applying\n     *     the same arguments to `f` gives a logical __true__ value.\n     *\n     * `R.complement` will work on all other functors as well.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> *) -> (*... -> Boolean)\n     * @param {Function} f\n     * @return {Function}\n     * @see R.not\n     * @example\n     *\n     *      var isEven = n => n % 2 === 0;\n     *      var isOdd = R.complement(isEven);\n     *      isOdd(21); //=> true\n     *      isOdd(42); //=> false\n     */\n    var complement = lift(not);\n\n    /**\n     * Returns the result of concatenating the given lists or strings.\n     *\n     * Note: `R.concat` expects both arguments to be of the same type,\n     * unlike the native `Array.prototype.concat` method. It will throw\n     * an error if you `concat` an Array with a non-Array value.\n     *\n     * Dispatches to the `concat` method of the first argument, if present.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a] -> [a]\n     * @sig String -> String -> String\n     * @param {Array|String} a\n     * @param {Array|String} b\n     * @return {Array|String}\n     *\n     * @example\n     *\n     *      R.concat([], []); //=> []\n     *      R.concat([4, 5, 6], [1, 2, 3]); //=> [4, 5, 6, 1, 2, 3]\n     *      R.concat('ABC', 'DEF'); // 'ABCDEF'\n     */\n    var concat = _curry2(function concat(a, b) {\n        if (a == null || !_isFunction(a.concat)) {\n            throw new TypeError(toString(a) + ' does not have a method named \"concat\"');\n        }\n        if (_isArray(a) && !_isArray(b)) {\n            throw new TypeError(toString(b) + ' is not an array');\n        }\n        return a.concat(b);\n    });\n\n    /**\n     * A function wrapping calls to the two functions in an `||` operation,\n     * returning the result of the first function if it is truth-y and the result\n     * of the second function otherwise. Note that this is short-circuited,\n     * meaning that the second function will not be invoked if the first returns a\n     * truth-y value.\n     *\n     * In addition to functions, `R.either` also accepts any fantasy-land compatible\n     * applicative functor.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category Logic\n     * @sig (*... -> Boolean) -> (*... -> Boolean) -> (*... -> Boolean)\n     * @param {Function} f a predicate\n     * @param {Function} g another predicate\n     * @return {Function} a function that applies its arguments to `f` and `g` and `||`s their outputs together.\n     * @see R.or\n     * @example\n     *\n     *      var gt10 = x => x > 10;\n     *      var even = x => x % 2 === 0;\n     *      var f = R.either(gt10, even);\n     *      f(101); //=> true\n     *      f(8); //=> true\n     */\n    var either = _curry2(function either(f, g) {\n        return _isFunction(f) ? function _either() {\n            return f.apply(this, arguments) || g.apply(this, arguments);\n        } : lift(or)(f, g);\n    });\n\n    /**\n     * Turns a named method with a specified arity into a function that can be\n     * called directly supplied with arguments and a target object.\n     *\n     * The returned function is curried and accepts `arity + 1` parameters where\n     * the final parameter is the target object.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n     * @param {Number} arity Number of arguments the returned function should take\n     *        before the target object.\n     * @param {String} method Name of the method to call.\n     * @return {Function} A new curried function.\n     * @example\n     *\n     *      var sliceFrom = R.invoker(1, 'slice');\n     *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n     *      var sliceFrom6 = R.invoker(2, 'slice')(6);\n     *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n     */\n    var invoker = _curry2(function invoker(arity, method) {\n        return curryN(arity + 1, function () {\n            var target = arguments[arity];\n            if (target != null && _isFunction(target[method])) {\n                return target[method].apply(target, _slice(arguments, 0, arity));\n            }\n            throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n        });\n    });\n\n    /**\n     * Returns a string made by inserting the `separator` between each element and\n     * concatenating all the elements into a single string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig String -> [a] -> String\n     * @param {Number|String} separator The string used to separate the elements.\n     * @param {Array} xs The elements to join into a string.\n     * @return {String} str The string made by concatenating `xs` with `separator`.\n     * @see R.split\n     * @example\n     *\n     *      var spacer = R.join(' ');\n     *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n     *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n     */\n    var join = invoker(1, 'join');\n\n    /**\n     * Creates a new function that, when invoked, caches the result of calling `fn`\n     * for a given argument set and returns the result. Subsequent calls to the\n     * memoized `fn` with the same argument set will not result in an additional\n     * call to `fn`; instead, the cached result for that set of arguments will be\n     * returned.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Function\n     * @sig (*... -> a) -> (*... -> a)\n     * @param {Function} fn The function to memoize.\n     * @return {Function} Memoized version of `fn`.\n     * @example\n     *\n     *      var count = 0;\n     *      var factorial = R.memoize(n => {\n     *        count += 1;\n     *        return R.product(R.range(1, n + 1));\n     *      });\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      factorial(5); //=> 120\n     *      count; //=> 1\n     */\n    var memoize = _curry1(function memoize(fn) {\n        var cache = {};\n        return _arity(fn.length, function () {\n            var key = toString(arguments);\n            if (!_has(key, cache)) {\n                cache[key] = fn.apply(this, arguments);\n            }\n            return cache[key];\n        });\n    });\n\n    /**\n     * Splits a string into an array of strings based on the given\n     * separator.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category String\n     * @sig (String | RegExp) -> String -> [String]\n     * @param {String|RegExp} sep The pattern.\n     * @param {String} str The string to separate into an array.\n     * @return {Array} The array of strings from `str` separated by `str`.\n     * @see R.join\n     * @example\n     *\n     *      var pathComponents = R.split('/');\n     *      R.tail(pathComponents('/usr/local/bin/node')); //=> ['usr', 'local', 'bin', 'node']\n     *\n     *      R.split('.', 'a.b.c.xyz.d'); //=> ['a', 'b', 'c', 'xyz', 'd']\n     */\n    var split = invoker(1, 'split');\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n     * @example\n     *\n     *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n     *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n     */\n    var symmetricDifference = _curry2(function symmetricDifference(list1, list2) {\n        return concat(difference(list1, list2), difference(list2, list1));\n    });\n\n    /**\n     * Finds the set (i.e. no duplicates) of all elements contained in the first or\n     * second list, but not both. Duplication is determined according to the value\n     * returned by applying the supplied predicate to two list elements.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.19.0\n     * @category Relation\n     * @sig (a -> a -> Boolean) -> [a] -> [a] -> [a]\n     * @param {Function} pred A predicate used to test whether two items are equal.\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The elements in `list1` or `list2`, but not both.\n     * @see R.symmetricDifference, R.difference, R.differenceWith\n     * @example\n     *\n     *      var eqA = R.eqBy(R.prop('a'));\n     *      var l1 = [{a: 1}, {a: 2}, {a: 3}, {a: 4}];\n     *      var l2 = [{a: 3}, {a: 4}, {a: 5}, {a: 6}];\n     *      R.symmetricDifferenceWith(eqA, l1, l2); //=> [{a: 1}, {a: 2}, {a: 5}, {a: 6}]\n     */\n    var symmetricDifferenceWith = _curry3(function symmetricDifferenceWith(pred, list1, list2) {\n        return concat(differenceWith(pred, list1, list2), differenceWith(pred, list2, list1));\n    });\n\n    /**\n     * Determines whether a given string matches a given regular expression.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.12.0\n     * @category String\n     * @sig RegExp -> String -> Boolean\n     * @param {RegExp} pattern\n     * @param {String} str\n     * @return {Boolean}\n     * @see R.match\n     * @example\n     *\n     *      R.test(/^x/, 'xyz'); //=> true\n     *      R.test(/^y/, 'xyz'); //=> false\n     */\n    var test = _curry2(function test(pattern, str) {\n        if (!_isRegExp(pattern)) {\n            throw new TypeError('\\u2018test\\u2019 requires a value of type RegExp as its first argument; received ' + toString(pattern));\n        }\n        return _cloneRegExp(pattern).test(str);\n    });\n\n    /**\n     * The lower case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to lower case.\n     * @return {String} The lower case version of `str`.\n     * @see R.toUpper\n     * @example\n     *\n     *      R.toLower('XYZ'); //=> 'xyz'\n     */\n    var toLower = invoker(0, 'toLowerCase');\n\n    /**\n     * The upper case version of a string.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.9.0\n     * @category String\n     * @sig String -> String\n     * @param {String} str The string to upper case.\n     * @return {String} The upper case version of `str`.\n     * @see R.toLower\n     * @example\n     *\n     *      R.toUpper('abc'); //=> 'ABC'\n     */\n    var toUpper = invoker(0, 'toUpperCase');\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list, based upon the value returned by applying the supplied function to\n     * each list element. Prefers the first item if the supplied function produces\n     * the same value on two items. `R.equals` is used for comparison.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.16.0\n     * @category List\n     * @sig (a -> b) -> [a] -> [a]\n     * @param {Function} fn A function used to produce a value to use during comparisons.\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniqBy(Math.abs, [-1, -5, 2, 10, 1, 2]); //=> [-1, -5, 2, 10]\n     */\n    var uniqBy = _curry2(function uniqBy(fn, list) {\n        var set = new _Set();\n        var result = [];\n        var idx = 0;\n        var appliedItem, item;\n        while (idx < list.length) {\n            item = list[idx];\n            appliedItem = fn(item);\n            if (set.add(appliedItem)) {\n                result.push(item);\n            }\n            idx += 1;\n        }\n        return result;\n    });\n\n    /**\n     * Returns a new list containing only one copy of each element in the original\n     * list. `R.equals` is used to determine equality.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category List\n     * @sig [a] -> [a]\n     * @param {Array} list The array to consider.\n     * @return {Array} The list of unique items.\n     * @example\n     *\n     *      R.uniq([1, 1, 2, 1]); //=> [1, 2]\n     *      R.uniq([1, '1']);     //=> [1, '1']\n     *      R.uniq([[42], [42]]); //=> [[42]]\n     */\n    var uniq = uniqBy(identity);\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of those\n     * elements common to both lists.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} list1 The first list.\n     * @param {Array} list2 The second list.\n     * @return {Array} The list of elements found in both `list1` and `list2`.\n     * @see R.intersectionWith\n     * @example\n     *\n     *      R.intersection([1,2,3,4], [7,6,5,4,3]); //=> [4, 3]\n     */\n    var intersection = _curry2(function intersection(list1, list2) {\n        var lookupList, filteredList;\n        if (list1.length > list2.length) {\n            lookupList = list1;\n            filteredList = list2;\n        } else {\n            lookupList = list2;\n            filteredList = list1;\n        }\n        return uniq(_filter(flip(_contains)(lookupList), filteredList));\n    });\n\n    /**\n     * Combines two lists into a set (i.e. no duplicates) composed of the elements\n     * of each list.\n     *\n     * @func\n     * @memberOf R\n     * @since v0.1.0\n     * @category Relation\n     * @sig [*] -> [*] -> [*]\n     * @param {Array} as The first list.\n     * @param {Array} bs The second list.\n     * @return {Array} The first and second lists concatenated, with\n     *         duplicates removed.\n     * @example\n     *\n     *      R.union([1, 2, 3], [2, 3, 4]); //=> [1, 2, 3, 4]\n     */\n    var union = _curry2(compose(uniq, _concat));\n\n    var R = {\n        F: F,\n        T: T,\n        __: __,\n        add: add,\n        addIndex: addIndex,\n        adjust: adjust,\n        all: all,\n        allPass: allPass,\n        always: always,\n        and: and,\n        any: any,\n        anyPass: anyPass,\n        ap: ap,\n        aperture: aperture,\n        append: append,\n        apply: apply,\n        applySpec: applySpec,\n        assoc: assoc,\n        assocPath: assocPath,\n        binary: binary,\n        bind: bind,\n        both: both,\n        call: call,\n        chain: chain,\n        clamp: clamp,\n        clone: clone,\n        comparator: comparator,\n        complement: complement,\n        compose: compose,\n        composeK: composeK,\n        composeP: composeP,\n        concat: concat,\n        cond: cond,\n        construct: construct,\n        constructN: constructN,\n        contains: contains,\n        converge: converge,\n        countBy: countBy,\n        curry: curry,\n        curryN: curryN,\n        dec: dec,\n        defaultTo: defaultTo,\n        difference: difference,\n        differenceWith: differenceWith,\n        dissoc: dissoc,\n        dissocPath: dissocPath,\n        divide: divide,\n        drop: drop,\n        dropLast: dropLast,\n        dropLastWhile: dropLastWhile,\n        dropRepeats: dropRepeats,\n        dropRepeatsWith: dropRepeatsWith,\n        dropWhile: dropWhile,\n        either: either,\n        empty: empty,\n        eqBy: eqBy,\n        eqProps: eqProps,\n        equals: equals,\n        evolve: evolve,\n        filter: filter,\n        find: find,\n        findIndex: findIndex,\n        findLast: findLast,\n        findLastIndex: findLastIndex,\n        flatten: flatten,\n        flip: flip,\n        forEach: forEach,\n        fromPairs: fromPairs,\n        groupBy: groupBy,\n        groupWith: groupWith,\n        gt: gt,\n        gte: gte,\n        has: has,\n        hasIn: hasIn,\n        head: head,\n        identical: identical,\n        identity: identity,\n        ifElse: ifElse,\n        inc: inc,\n        indexBy: indexBy,\n        indexOf: indexOf,\n        init: init,\n        insert: insert,\n        insertAll: insertAll,\n        intersection: intersection,\n        intersectionWith: intersectionWith,\n        intersperse: intersperse,\n        into: into,\n        invert: invert,\n        invertObj: invertObj,\n        invoker: invoker,\n        is: is,\n        isArrayLike: isArrayLike,\n        isEmpty: isEmpty,\n        isNil: isNil,\n        join: join,\n        juxt: juxt,\n        keys: keys,\n        keysIn: keysIn,\n        last: last,\n        lastIndexOf: lastIndexOf,\n        length: length,\n        lens: lens,\n        lensIndex: lensIndex,\n        lensPath: lensPath,\n        lensProp: lensProp,\n        lift: lift,\n        liftN: liftN,\n        lt: lt,\n        lte: lte,\n        map: map,\n        mapAccum: mapAccum,\n        mapAccumRight: mapAccumRight,\n        mapObjIndexed: mapObjIndexed,\n        match: match,\n        mathMod: mathMod,\n        max: max,\n        maxBy: maxBy,\n        mean: mean,\n        median: median,\n        memoize: memoize,\n        merge: merge,\n        mergeAll: mergeAll,\n        mergeWith: mergeWith,\n        mergeWithKey: mergeWithKey,\n        min: min,\n        minBy: minBy,\n        modulo: modulo,\n        multiply: multiply,\n        nAry: nAry,\n        negate: negate,\n        none: none,\n        not: not,\n        nth: nth,\n        nthArg: nthArg,\n        objOf: objOf,\n        of: of,\n        omit: omit,\n        once: once,\n        or: or,\n        over: over,\n        pair: pair,\n        partial: partial,\n        partialRight: partialRight,\n        partition: partition,\n        path: path,\n        pathEq: pathEq,\n        pathOr: pathOr,\n        pathSatisfies: pathSatisfies,\n        pick: pick,\n        pickAll: pickAll,\n        pickBy: pickBy,\n        pipe: pipe,\n        pipeK: pipeK,\n        pipeP: pipeP,\n        pluck: pluck,\n        prepend: prepend,\n        product: product,\n        project: project,\n        prop: prop,\n        propEq: propEq,\n        propIs: propIs,\n        propOr: propOr,\n        propSatisfies: propSatisfies,\n        props: props,\n        range: range,\n        reduce: reduce,\n        reduceBy: reduceBy,\n        reduceRight: reduceRight,\n        reduceWhile: reduceWhile,\n        reduced: reduced,\n        reject: reject,\n        remove: remove,\n        repeat: repeat,\n        replace: replace,\n        reverse: reverse,\n        scan: scan,\n        sequence: sequence,\n        set: set,\n        slice: slice,\n        sort: sort,\n        sortBy: sortBy,\n        split: split,\n        splitAt: splitAt,\n        splitEvery: splitEvery,\n        splitWhen: splitWhen,\n        subtract: subtract,\n        sum: sum,\n        symmetricDifference: symmetricDifference,\n        symmetricDifferenceWith: symmetricDifferenceWith,\n        tail: tail,\n        take: take,\n        takeLast: takeLast,\n        takeLastWhile: takeLastWhile,\n        takeWhile: takeWhile,\n        tap: tap,\n        test: test,\n        times: times,\n        toLower: toLower,\n        toPairs: toPairs,\n        toPairsIn: toPairsIn,\n        toString: toString,\n        toUpper: toUpper,\n        transduce: transduce,\n        transpose: transpose,\n        traverse: traverse,\n        trim: trim,\n        tryCatch: tryCatch,\n        type: type,\n        unapply: unapply,\n        unary: unary,\n        uncurryN: uncurryN,\n        unfold: unfold,\n        union: union,\n        unionWith: unionWith,\n        uniq: uniq,\n        uniqBy: uniqBy,\n        uniqWith: uniqWith,\n        unless: unless,\n        unnest: unnest,\n        until: until,\n        update: update,\n        useWith: useWith,\n        values: values,\n        valuesIn: valuesIn,\n        view: view,\n        when: when,\n        where: where,\n        whereEq: whereEq,\n        without: without,\n        wrap: wrap,\n        xprod: xprod,\n        zip: zip,\n        zipObj: zipObj,\n        zipWith: zipWith\n    };\n    /* eslint-env amd */\n\n    /* TEST_ENTRY_POINT */\n\n    if (( false ? 'undefined' : _typeof(exports)) === 'object') {\n        module.exports = R;\n    } else if (true) {\n        !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n            return R;\n        }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {\n        this.R = R;\n    }\n}).call(undefined);\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"react\");\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"react-dom\");\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(9);\n\n\n/***/ })\n/******/ ]);"]},"metadata":{},"sourceType":"script"}